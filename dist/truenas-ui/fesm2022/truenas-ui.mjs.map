{"version":3,"file":"truenas-ui.mjs","sources":["../../../projects/truenas-ui/src/lib/truenas-ui.service.ts","../../../projects/truenas-ui/src/lib/truenas-ui.component.ts","../../../projects/truenas-ui/src/lib/truenas-ui.component.html","../../../projects/truenas-ui/src/lib/enums/disk-type.enum.ts","../../../projects/truenas-ui/src/lib/disk-icon/disk-icon.component.ts","../../../projects/truenas-ui/src/lib/disk-icon/disk-icon.component.html","../../../projects/truenas-ui/src/lib/ix-button/ix-button.component.ts","../../../projects/truenas-ui/src/lib/ix-button/ix-button.component.html","../../../projects/truenas-ui/src/lib/ix-icon/ix-sprite-loader.service.ts","../../../projects/truenas-ui/src/lib/ix-icon/ix-icon-registry.service.ts","../../../projects/truenas-ui/src/lib/ix-icon/ix-icon.component.ts","../../../projects/truenas-ui/src/lib/ix-icon/ix-icon.component.html","../../../projects/truenas-ui/src/lib/ix-icon-button/ix-icon-button.component.ts","../../../projects/truenas-ui/src/lib/ix-icon-button/ix-icon-button.component.html","../../../projects/truenas-ui/src/lib/enums/input-type.enum.ts","../../../projects/truenas-ui/src/lib/ix-input/ix-input.component.ts","../../../projects/truenas-ui/src/lib/ix-input/ix-input.component.html","../../../projects/truenas-ui/src/lib/ix-input/ix-input.directive.ts","../../../projects/truenas-ui/src/lib/ix-chip/ix-chip.component.ts","../../../projects/truenas-ui/src/lib/ix-chip/ix-chip.component.html","../../../projects/truenas-ui/src/lib/ix-slide-toggle/ix-slide-toggle.component.ts","../../../projects/truenas-ui/src/lib/ix-slide-toggle/ix-slide-toggle.component.html","../../../projects/truenas-ui/src/lib/ix-menu/ix-menu.component.ts","../../../projects/truenas-ui/src/lib/ix-menu/ix-menu.component.html","../../../projects/truenas-ui/src/lib/ix-menu/ix-menu-trigger.directive.ts","../../../projects/truenas-ui/src/lib/ix-card/ix-card.component.ts","../../../projects/truenas-ui/src/lib/ix-card/ix-card.component.html","../../../projects/truenas-ui/src/lib/ix-expansion-panel/ix-expansion-panel.component.ts","../../../projects/truenas-ui/src/lib/ix-expansion-panel/ix-expansion-panel.component.html","../../../projects/truenas-ui/src/lib/ix-checkbox/ix-checkbox.component.ts","../../../projects/truenas-ui/src/lib/ix-checkbox/ix-checkbox.component.html","../../../projects/truenas-ui/src/lib/ix-radio/ix-radio.component.ts","../../../projects/truenas-ui/src/lib/ix-radio/ix-radio.component.html","../../../projects/truenas-ui/src/lib/ix-tab/ix-tab.component.ts","../../../projects/truenas-ui/src/lib/ix-tab/ix-tab.component.html","../../../projects/truenas-ui/src/lib/ix-tab-panel/ix-tab-panel.component.ts","../../../projects/truenas-ui/src/lib/ix-tab-panel/ix-tab-panel.component.html","../../../projects/truenas-ui/src/lib/ix-tabs/ix-tabs.component.ts","../../../projects/truenas-ui/src/lib/ix-tabs/ix-tabs.component.html","../../../projects/truenas-ui/src/lib/ix-keyboard-shortcut/ix-keyboard-shortcut.component.ts","../../../projects/truenas-ui/src/lib/ix-keyboard-shortcut/ix-keyboard-shortcut.component.html","../../../projects/truenas-ui/src/lib/ix-form-field/ix-form-field.component.ts","../../../projects/truenas-ui/src/lib/ix-form-field/ix-form-field.component.html","../../../projects/truenas-ui/src/lib/ix-select/ix-select.component.ts","../../../projects/truenas-ui/src/lib/ix-select/ix-select.component.html","../../../projects/truenas-ui/src/lib/ix-icon/icon-marker.ts","../../../projects/truenas-ui/src/lib/ix-icon/integrations/lucide.integration.ts","../../../projects/truenas-ui/src/lib/ix-custom-icons/truenas-icons.service.ts","../../../projects/truenas-ui/src/lib/ix-list/ix-list.component.ts","../../../projects/truenas-ui/src/lib/ix-list/ix-list.component.html","../../../projects/truenas-ui/src/lib/ix-list-item/ix-list-item.component.ts","../../../projects/truenas-ui/src/lib/ix-list-item/ix-list-item.component.html","../../../projects/truenas-ui/src/lib/ix-list-subheader/ix-list-subheader.component.ts","../../../projects/truenas-ui/src/lib/ix-list-subheader/ix-list-subheader.component.html","../../../projects/truenas-ui/src/lib/ix-list-directives/ix-list-directives.ts","../../../projects/truenas-ui/src/lib/ix-divider/ix-divider.component.ts","../../../projects/truenas-ui/src/lib/ix-divider/ix-divider.component.html","../../../projects/truenas-ui/src/lib/ix-list-option/ix-list-option.component.ts","../../../projects/truenas-ui/src/lib/ix-list-option/ix-list-option.component.html","../../../projects/truenas-ui/src/lib/ix-selection-list/ix-selection-list.component.ts","../../../projects/truenas-ui/src/lib/ix-selection-list/ix-selection-list.component.html","../../../projects/truenas-ui/src/lib/ix-table-column/ix-table-column.directive.ts","../../../projects/truenas-ui/src/lib/ix-table/ix-table.component.ts","../../../projects/truenas-ui/src/lib/ix-table/ix-table.component.html","../../../projects/truenas-ui/src/lib/ix-tree/ix-tree.component.ts","../../../projects/truenas-ui/src/lib/ix-tree/ix-tree.component.html","../../../projects/truenas-ui/src/lib/ix-tree/ix-tree-node.component.ts","../../../projects/truenas-ui/src/lib/ix-tree/ix-tree-node.component.html","../../../projects/truenas-ui/src/lib/ix-tree/ix-tree-node-outlet.directive.ts","../../../projects/truenas-ui/src/lib/ix-tree/ix-nested-tree-node.component.ts","../../../projects/truenas-ui/src/lib/ix-tree/ix-nested-tree-node.component.html","../../../projects/truenas-ui/src/lib/enums/modifier-keys.enum.ts","../../../projects/truenas-ui/src/lib/enums/common-shortcuts.enum.ts","../../../projects/truenas-ui/src/lib/utils/shortcut-builder.ts","../../../projects/truenas-ui/src/lib/pipes/file-size/bits.constant.ts","../../../projects/truenas-ui/src/lib/pipes/file-size/bytes.constant.ts","../../../projects/truenas-ui/src/lib/pipes/file-size/file-size.utils.ts","../../../projects/truenas-ui/src/lib/pipes/file-size/file-size.pipe.ts","../../../projects/truenas-ui/src/lib/pipes/strip-mnt-prefix/strip-mnt-prefix.pipe.ts","../../../projects/truenas-ui/src/lib/pipes/truncate-path/truncate-path.pipe.ts","../../../projects/truenas-ui/src/lib/ix-spinner/ix-spinner.component.ts","../../../projects/truenas-ui/src/lib/ix-spinner/ix-spinner.component.html","../../../projects/truenas-ui/src/lib/ix-spinner/ix-branded-spinner.component.ts","../../../projects/truenas-ui/src/lib/ix-spinner/ix-branded-spinner.component.html","../../../projects/truenas-ui/src/lib/ix-progress-bar/ix-progress-bar.component.ts","../../../projects/truenas-ui/src/lib/ix-progress-bar/ix-progress-bar.component.html","../../../projects/truenas-ui/src/lib/ix-progress-bar/ix-particle-progress-bar.component.ts","../../../projects/truenas-ui/src/lib/ix-progress-bar/ix-particle-progress-bar.component.html","../../../projects/truenas-ui/src/lib/ix-calendar/ix-calendar-header.component.ts","../../../projects/truenas-ui/src/lib/ix-calendar/ix-month-view.component.ts","../../../projects/truenas-ui/src/lib/ix-calendar/ix-multi-year-view.component.ts","../../../projects/truenas-ui/src/lib/ix-calendar/ix-calendar.component.ts","../../../projects/truenas-ui/src/lib/ix-date-range-input/ix-date-input.component.ts","../../../projects/truenas-ui/src/lib/ix-date-range-input/ix-date-range-input.component.ts","../../../projects/truenas-ui/src/lib/ix-date-range-input/ix-time-input.component.ts","../../../projects/truenas-ui/src/lib/ix-slider/ix-slider-thumb.directive.ts","../../../projects/truenas-ui/src/lib/ix-slider/ix-slider.component.ts","../../../projects/truenas-ui/src/lib/ix-slider/ix-slider-with-label.directive.ts","../../../projects/truenas-ui/src/lib/ix-button-toggle/ix-button-toggle.component.ts","../../../projects/truenas-ui/src/lib/ix-button-toggle/ix-button-toggle-group.component.ts","../../../projects/truenas-ui/src/lib/ix-tooltip/ix-tooltip.component.ts","../../../projects/truenas-ui/src/lib/ix-tooltip/ix-tooltip.directive.ts","../../../projects/truenas-ui/src/lib/ix-dialog/ix-dialog.service.ts","../../../projects/truenas-ui/src/lib/ix-dialog/ix-dialog-shell.component.ts","../../../projects/truenas-ui/src/lib/ix-dialog/ix-confirm-dialog.component.ts","../../../projects/truenas-ui/src/lib/ix-stepper/ix-step.component.ts","../../../projects/truenas-ui/src/lib/ix-stepper/ix-stepper.component.ts","../../../projects/truenas-ui/src/lib/ix-stepper/ix-stepper.component.html","../../../projects/truenas-ui/src/lib/ix-custom-icons/generated-icons.ts","../../../projects/truenas-ui/src/lib/ix-file-picker/ix-file-picker-popup.component.ts","../../../projects/truenas-ui/src/lib/ix-file-picker/ix-file-picker-popup.component.html","../../../projects/truenas-ui/src/lib/ix-file-picker/ix-file-picker.component.ts","../../../projects/truenas-ui/src/lib/ix-file-picker/ix-file-picker.component.html","../../../projects/truenas-ui/src/lib/services/ix-keyboard-shortcut.service.ts","../../../projects/truenas-ui/src/public-api.ts","../../../projects/truenas-ui/src/truenas-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TruenasUiService {\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-truenas-ui',\n  imports: [],\n  templateUrl: './truenas-ui.component.html',\n  styleUrl: './truenas-ui.component.scss'\n})\nexport class TruenasUiComponent {\n\n}\n","<p>\n  truenas-ui works!\n</p>","export enum DiskType {\n  Hdd = 'HDD',\n  Ssd = 'SSD',\n}\n","import {\n  ChangeDetectionStrategy, Component, input,\n} from '@angular/core';\nimport { DiskType } from '../enums/disk-type.enum';\n\n@Component({\n  selector: 'ix-disk-icon',\n  templateUrl: './disk-icon.component.html',\n  styleUrls: ['./disk-icon.component.scss'],\n  standalone: true,\n  imports: [\n    // FileSizePipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DiskIconComponent {\n  readonly size = input.required<string>(); // Was originally a number\n  readonly type = input.required<DiskType>();\n  readonly name = input.required<string>();\n\n  protected readonly DiskType = DiskType;\n}\n","<html>\n<svg id=\"disk-icon-large\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"72\" height=\"80\" viewBox=\"0 0 72 80\">\n  <defs>\n    <clipPath id=\"clip-path\">\n      <rect id=\"Mask_Rounded_Corners\" data-name=\"Mask Rounded Corners\" width=\"72\" height=\"80\" rx=\"4\" transform=\"translate(-0.039)\" fill=\"none\" stroke=\"#414141\" stroke-width=\"1\"/>\n    </clipPath>\n    <filter id=\"BG_Fill\" x=\"-9\" y=\"-6\" width=\"90\" height=\"98\" filterUnits=\"userSpaceOnUse\">\n      <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n      <feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\n      <feFlood flood-opacity=\"0.161\"/>\n      <feComposite operator=\"in\" in2=\"blur\"/>\n      <feComposite in=\"SourceGraphic\"/>\n    </filter>\n  </defs>\n  <g id=\"Normal\" transform=\"translate(11)\">\n    <g id=\"BG_Masks\" data-name=\"BG Masks\" transform=\"translate(-10.961)\" clip-path=\"url(#clip-path)\">\n      <g transform=\"matrix(1, 0, 0, 1, -0.04, 0)\" filter=\"url(#BG_Fill)\">\n        <g id=\"BG_Fill-2\" data-name=\"BG Fill\" fill=\"#1e1e1e\" stroke=\"#8f8f8f\" stroke-width=\"1\">\n          <rect width=\"72\" height=\"80\" rx=\"4\" stroke=\"none\"/>\n          <rect x=\"0.5\" y=\"0.5\" width=\"71\" height=\"79\" rx=\"3.5\" fill=\"none\"/>\n        </g>\n      </g>\n      <rect id=\"BG_Top\" data-name=\"BG Top\" width=\"70.5\" height=\"17.391\" transform=\"translate(-0.039)\" fill=\"rgba(255,255,255,0.5)\" opacity=\"0.5\"/>\n      <path id=\"BG_Bottom\" data-name=\"BG Bottom\" d=\"M0,0H70.5V17.391H0Z\" transform=\"translate(-0.039 62.609)\" fill=\"rgba(255,255,255,0.5)\" opacity=\"0.5\"/>\n    </g>\n    @if (type() === DiskType.Hdd) {\n      <g id=\"harddisk\" transform=\"scale(1.2), translate(4 14)\" opacity=\"0.5\">\n        <path id=\"harddisk-2\" data-name=\"harddisk\" d=\"M6.856,2H23.989a2.856,2.856,0,0,1,2.856,2.856V27.7a2.856,2.856,0,0,1-2.856,2.856H6.856A2.856,2.856,0,0,1,4,27.7V4.856A2.856,2.856,0,0,1,6.856,2Zm8.567,2.856a8.567,8.567,0,0,0-8.567,8.567,8.474,8.474,0,0,0,8.567,8.567l-1.428-2.856c-.394-.683.745-2.461,1.428-2.856h0c.683-.394,2.461-.683,2.856,0l2.856,4.283c1.963-1.57,2.856-4.43,2.856-7.139A8.567,8.567,0,0,0,15.422,4.856Zm0,7.139a1.428,1.428,0,1,1-1.428,1.428A1.428,1.428,0,0,1,15.422,11.995ZM8.283,24.845a1.428,1.428,0,1,0,1.428,1.428A1.428,1.428,0,0,0,8.283,24.845Zm7.139-7.139L19.706,27.7l2.856-2.856L16.85,17.706Z\" transform=\"translate(0.098 3.322)\" fill=\"#fff\"/>\n      </g>\n    } @else if (type() === DiskType.Ssd) {\n      <g id=\"ssd\" transform=\"translate(-50 17.5) scale(0.5)\" opacity=\"0.5\">\n        <path id=\"ssd-2\" d=\"M 132.935 15.223 L 140.185 15.223 L 140.185 19.723 C 140.185 21.944 141.985 23.744 144.206 23.744 L 157.231 23.744 C 159.452 23.744 161.252 21.944 161.252 19.723 L 161.252 15.223 L 168.503 15.223 C 171.577 15.223 174.069 17.715 174.069 20.789 L 174.069 68.904 C 174.069 71.978 171.577 74.47 168.503 74.47 L 132.935 74.47 C 129.861 74.47 127.369 71.978 127.369 68.904 L 127.369 20.789 C 127.369 17.715 129.861 15.223 132.935 15.223 Z M 143.428 15.498 L 150.92 15.498 C 151.394 15.498 151.779 15.883 151.779 16.357 L 151.779 20.207 C 151.779 20.681 151.394 21.066 150.92 21.066 L 143.428 21.066 C 142.954 21.066 142.569 20.681 142.569 20.207 L 142.569 16.357 C 142.569 15.883 142.954 15.498 143.428 15.498 Z M 155.103 15.498 L 157.561 15.498 C 158.163 15.498 158.651 15.986 158.651 16.588 L 158.651 20.002 C 158.651 20.604 158.163 21.092 157.561 21.092 L 155.103 21.092 C 154.501 21.092 154.013 20.604 154.013 20.002 L 154.013 16.588 C 154.013 15.986 154.501 15.498 155.103 15.498 Z M 135.852 38.928 L 135.852 59.34 C 135.852 62.06 138.057 64.265 140.777 64.265 L 160.662 64.265 C 163.382 64.265 165.587 62.06 165.587 59.34 L 165.587 38.928 C 165.587 36.208 163.382 34.003 160.662 34.003 L 140.777 34.003 C 138.057 34.003 135.852 36.208 135.852 38.928 Z M 140.106 36.674 L 161.333 36.674 C 162.385 36.674 163.237 37.526 163.237 38.578 L 163.237 59.69 C 163.237 60.742 162.385 61.594 161.333 61.594 L 140.106 61.594 C 139.054 61.594 138.202 60.742 138.202 59.69 L 138.202 38.578 C 138.202 37.526 139.054 36.674 140.106 36.674 Z M 167.69 19.867 C 166.509 19.867 165.552 20.824 165.552 22.005 C 165.552 23.186 166.509 24.143 167.69 24.143 C 168.871 24.143 169.828 23.186 169.828 22.005 C 169.828 20.824 168.871 19.867 167.69 19.867 Z M 167.69 65.55 C 166.509 65.55 165.552 66.507 165.552 67.688 C 165.552 68.869 166.509 69.826 167.69 69.826 C 168.871 69.826 169.828 68.869 169.828 67.688 C 169.828 66.507 168.871 65.55 167.69 65.55 Z M 133.748 65.55 C 132.567 65.55 131.61 66.507 131.61 67.688 C 131.61 68.869 132.567 69.826 133.748 69.826 C 134.929 69.826 135.886 68.869 135.886 67.688 C 135.886 66.507 134.929 65.55 133.748 65.55 Z M 133.748 19.867 C 132.567 19.867 131.61 20.824 131.61 22.005 C 131.61 23.186 132.567 24.143 133.748 24.143 C 134.929 24.143 135.886 23.186 135.886 22.005 C 135.886 20.824 134.929 19.867 133.748 19.867 Z\" style=\"fill: rgb(216, 216, 216);\"></path>\n      </g>\n    }\n    <g id=\"Labels\" transform=\"translate(11.451 1.857)\" opacity=\"0.998\">\n      <text id=\"disk-size\" data-name=\"2 TiB\" transform=\"translate(13 72.714)\" fill=\"#fff\" font-size=\"11\" font-family=\"Inter\" style=\"text-anchor: middle\">\n        <tspan x=\"0\" y=\"0\">{{ size() }}</tspan>\n      </text>\n      <text id=\"disk-identifier\" transform=\"translate(12.647 11)\" fill=\"#fff\" font-size=\"11\" font-family=\"Inter\" style=\"text-anchor: middle\">\n        <tspan x=\"0\" y=\"0\">{{ name() }}</tspan>\n      </text>\n    </g>\n  </g>\n</svg>\n</html>\n","import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ix-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-button.component.html',\n  styleUrls: ['./ix-button.component.scss'],\n})\nexport class IxButtonComponent {\n  size = 'large';\n\n  @Input()\n  primary = false;\n\n  @Input()\n  color: 'primary' | 'secondary' | 'warn' | 'default' = 'default';\n\n  @Input()\n  variant: 'filled' | 'outline' = 'filled';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Button';\n\n  @Input()\n  disabled = false;\n\n  @Output()\n  onClick = new EventEmitter<MouseEvent>();\n\n\n  public get classes(): string[] {\n    // Support both primary boolean and color string approaches\n    const isPrimary = this.primary || this.color === 'primary';\n    const isWarn = this.color === 'warn';\n    \n    let mode = '';\n    if (this.variant === 'outline') {\n      if (isPrimary) {\n        mode = 'button-outline-primary';\n      } else if (isWarn) {\n        mode = 'button-outline-warn';\n      } else {\n        mode = 'button-outline-default';\n      }\n    } else {\n      if (isPrimary) {\n        mode = 'button-primary';\n      } else if (isWarn) {\n        mode = 'button-warn';\n      } else {\n        mode = 'button-default';\n      }\n    }\n    \n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  [disabled]=\"disabled\"\n>\n  {{ label }}\n</button>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface SpriteConfig {\n  iconUrl: string;\n  icons?: string[]; // List of available icon IDs in the sprite\n}\n\n/**\n * Service for loading and managing icon sprites.\n * This is a custom implementation that does NOT depend on Angular Material.\n *\n * The sprite system works by:\n * 1. Loads the application's sprite (generated via `yarn icons` command)\n * 2. The sprite includes both consumer icons and library-internal icons (chevrons, folder, etc.)\n * 3. Icons are resolved as SVG fragment identifiers (e.g., sprite.svg#icon-name)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IxSpriteLoaderService {\n  private spriteConfig?: SpriteConfig;\n  private spriteLoaded = false;\n  private spriteLoadPromise?: Promise<void>;\n\n  constructor(\n    private http: HttpClient,\n    private sanitizer: DomSanitizer\n  ) {\n    // Start loading sprite immediately\n    this.loadSpriteConfig();\n  }\n\n  /**\n   * Load the sprite configuration\n   */\n  private async loadSpriteConfig(): Promise<void> {\n    if (this.spriteLoadPromise) {\n      return this.spriteLoadPromise;\n    }\n\n    this.spriteLoadPromise = (async () => {\n      try {\n        const config = await firstValueFrom(\n          this.http.get<SpriteConfig>('assets/icons/sprite-config.json')\n        );\n        this.spriteConfig = config;\n        this.spriteLoaded = true;\n      } catch (error) {\n        console.error('[IxSpriteLoader] Failed to load sprite config. Icons may not work:', error);\n      }\n    })();\n\n    return this.spriteLoadPromise;\n  }\n\n  /**\n   * Ensure the sprite is loaded before resolving icons\n   */\n  async ensureSpriteLoaded(): Promise<boolean> {\n    await this.loadSpriteConfig();\n    return this.spriteLoaded;\n  }\n\n  /**\n   * Get the full URL for an icon in the sprite\n   * Returns a URL like: assets/icons/sprite.svg?v=hash#icon-name\n   *\n   * @param iconName The icon name (e.g., 'folder', 'mdi-server', 'ix-dataset')\n   * @returns The fragment identifier URL for the icon, or null if sprite not loaded or icon not in sprite\n   */\n  getIconUrl(iconName: string): string | null {\n    if (!this.spriteConfig) {\n      console.warn(`[IxSpriteLoader] Icon sprite not loaded yet, cannot resolve: ${iconName}`);\n      return null;\n    }\n\n    // Check if the icon exists in the sprite manifest\n    if (this.spriteConfig.icons && !this.spriteConfig.icons.includes(iconName)) {\n      return null;\n    }\n\n    // The sprite URL already includes the cache-busting version parameter\n    // We just append the icon name as a fragment identifier\n    return `${this.spriteConfig.iconUrl}#${iconName}`;\n  }\n\n  /**\n   * Get a sanitized resource URL for an icon\n   * This is used when binding to [src] or similar attributes\n   *\n   * @param iconName The icon name\n   * @returns Sanitized resource URL or null\n   */\n  getSafeIconUrl(iconName: string): SafeResourceUrl | null {\n    const url = this.getIconUrl(iconName);\n    if (!url) {\n      return null;\n    }\n\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  /**\n   * Check if the sprite is loaded\n   */\n  isSpriteLoaded(): boolean {\n    return this.spriteLoaded;\n  }\n\n  /**\n   * Get the sprite config if loaded\n   */\n  getSpriteConfig(): SpriteConfig | undefined {\n    return this.spriteConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { IxSpriteLoaderService } from './ix-sprite-loader.service';\n\nexport interface IconLibrary {\n  name: string;\n  resolver: (iconName: string, options?: any) => string | HTMLElement | null;\n  defaultOptions?: any;\n}\n\nexport interface ResolvedIcon {\n  source: 'svg' | 'css' | 'unicode' | 'text' | 'sprite';\n  content: string | SafeHtml;\n  spriteUrl?: string; // For sprite-based icons\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IxIconRegistryService {\n  private libraries = new Map<string, IconLibrary>();\n  private customIcons = new Map<string, string>();\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private spriteLoader: IxSpriteLoaderService\n  ) {}\n\n  /**\n   * Register an icon library (like Lucide, Heroicons, etc.)\n   * \n   * @example\n   * ```typescript\n   * // Register Lucide\n   * import * as LucideIcons from 'lucide';\n   * \n   * iconRegistry.registerLibrary({\n   *   name: 'lucide',\n   *   resolver: (iconName: string, options = {}) => {\n   *     const pascalCase = iconName.split('-').map(part => \n   *       part.charAt(0).toUpperCase() + part.slice(1)\n   *     ).join('');\n   *     \n   *     const iconFunction = (LucideIcons as any)[pascalCase];\n   *     if (iconFunction && typeof iconFunction === 'function') {\n   *       return iconFunction({\n   *         size: 24,\n   *         color: 'currentColor',\n   *         strokeWidth: 2,\n   *         ...options\n   *       });\n   *     }\n   *     return null;\n   *   },\n   *   defaultOptions: { size: 24, strokeWidth: 2 }\n   * });\n   * ```\n   */\n  registerLibrary(library: IconLibrary): void {\n    this.libraries.set(library.name, library);\n  }\n\n  /**\n   * Register a custom SVG icon\n   * \n   * @example\n   * ```typescript\n   * iconRegistry.registerIcon('my-logo', `\n   *   <svg viewBox=\"0 0 24 24\">\n   *     <path d=\"M12 2L2 7v10c0 5.55 3.84 10 9 11 1.16-.08 2-.35 3-.82z\"/>\n   *   </svg>\n   * `);\n   * ```\n   */\n  registerIcon(name: string, svgContent: string): void {\n    this.customIcons.set(name, svgContent);\n  }\n\n  /**\n   * Register multiple custom icons at once\n   */\n  registerIcons(icons: Record<string, string>): void {\n    Object.entries(icons).forEach(([name, svg]) => {\n      this.registerIcon(name, svg);\n    });\n  }\n\n  /**\n   * Resolve an icon from the sprite\n   * Returns the sprite URL if the sprite is loaded\n   */\n  private resolveSpriteIcon(name: string): ResolvedIcon | null {\n    if (!this.spriteLoader.isSpriteLoaded()) {\n      return null;\n    }\n\n    const spriteUrl = this.spriteLoader.getIconUrl(name);\n    if (!spriteUrl) {\n      return null;\n    }\n\n    return {\n      source: 'sprite',\n      content: '', // Not used for sprite icons\n      spriteUrl: spriteUrl\n    };\n  }\n\n  /**\n   * Resolve an icon using sprite, registered libraries, and custom icons\n   *\n   * Resolution order:\n   * 1. Sprite icons (Material, MDI, custom TrueNAS icons)\n   * 2. Registered libraries (with prefix, e.g., \"lucide:home\")\n   * 3. Custom registered icons\n   *\n   * Format: \"library:icon-name\" or just \"icon-name\"\n   *\n   * @example\n   * ```typescript\n   * // Sprite icons (automatic from sprite.svg)\n   * registry.resolveIcon('folder')        // Material Design icon\n   * registry.resolveIcon('mdi-server')    // MDI icon\n   * registry.resolveIcon('ix-dataset')    // Custom TrueNAS icon\n   *\n   * // Library icons\n   * registry.resolveIcon('lucide:home')\n   * registry.resolveIcon('heroicons:user-circle')\n   *\n   * // Custom registered icons\n   * registry.resolveIcon('my-logo')\n   * ```\n   */\n  resolveIcon(name: string, options?: any): ResolvedIcon | null {\n    // 1. Try sprite first (if loaded)\n    const spriteIcon = this.resolveSpriteIcon(name);\n    if (spriteIcon) {\n      return spriteIcon;\n    }\n\n    // 2. Handle library prefix (e.g., \"lucide:home\")\n    if (name.includes(':')) {\n      const [libraryName, iconName] = name.split(':', 2);\n      return this.resolveLibraryIcon(libraryName, iconName, options);\n    }\n\n    // 3. Handle custom prefix (e.g., \"custom:icon\")\n    if (name.startsWith('custom:')) {\n      const iconName = name.replace('custom:', '');\n      return this.resolveCustomIcon(iconName);\n    }\n\n    // 4. Handle direct custom icon name\n    return this.resolveCustomIcon(name);\n  }\n\n  /**\n   * Check if a library is registered\n   */\n  hasLibrary(libraryName: string): boolean {\n    return this.libraries.has(libraryName);\n  }\n\n  /**\n   * Check if a custom icon is registered\n   */\n  hasIcon(iconName: string): boolean {\n    return this.customIcons.has(iconName);\n  }\n\n  /**\n   * Get list of registered libraries\n   */\n  getRegisteredLibraries(): string[] {\n    return Array.from(this.libraries.keys());\n  }\n\n  /**\n   * Get list of registered custom icons\n   */\n  getRegisteredIcons(): string[] {\n    return Array.from(this.customIcons.keys());\n  }\n\n  /**\n   * Remove a library\n   */\n  unregisterLibrary(libraryName: string): void {\n    this.libraries.delete(libraryName);\n  }\n\n  /**\n   * Remove a custom icon\n   */\n  unregisterIcon(iconName: string): void {\n    this.customIcons.delete(iconName);\n  }\n\n  /**\n   * Clear all registered libraries and icons\n   */\n  clear(): void {\n    this.libraries.clear();\n    this.customIcons.clear();\n  }\n\n  /**\n   * Get the sprite loader service\n   * Useful for checking sprite status or manually resolving sprite icons\n   */\n  getSpriteLoader(): IxSpriteLoaderService {\n    return this.spriteLoader;\n  }\n\n  private resolveLibraryIcon(libraryName: string, iconName: string, options?: any): ResolvedIcon | null {\n    const library = this.libraries.get(libraryName);\n    if (!library) {\n      console.warn(`Icon library '${libraryName}' is not registered`);\n      return null;\n    }\n\n    try {\n      const mergedOptions = { ...library.defaultOptions, ...options };\n      const result = library.resolver(iconName, mergedOptions);\n\n      if (!result) {\n        return null;\n      }\n\n      // Handle different types of results\n      if (typeof result === 'string') {\n        // Assume it's SVG content\n        return {\n          source: 'svg',\n          content: this.sanitizer.bypassSecurityTrustHtml(result)\n        };\n      } else if (result instanceof HTMLElement) {\n        // Convert HTMLElement to string\n        return {\n          source: 'svg',\n          content: this.sanitizer.bypassSecurityTrustHtml(result.outerHTML)\n        };\n      }\n\n      return null;\n    } catch (error) {\n      console.warn(`Failed to resolve icon '${libraryName}:${iconName}':`, error);\n      return null;\n    }\n  }\n\n  private resolveCustomIcon(iconName: string): ResolvedIcon | null {\n    const svgContent = this.customIcons.get(iconName);\n    if (!svgContent) {\n      return null;\n    }\n\n    return {\n      source: 'svg',\n      content: this.sanitizer.bypassSecurityTrustHtml(svgContent)\n    };\n  }\n}","import { Component, Input, OnInit, OnChanges, SimpleChanges, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, inject, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { IxIconRegistryService } from './ix-icon-registry.service';\n\nexport type IconSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\nexport type IconSource = 'svg' | 'css' | 'unicode' | 'text' | 'sprite';\nexport type IconLibraryType = 'material' | 'mdi' | 'custom' | 'lucide';\n\nexport interface IconResult {\n  source: IconSource;\n  content: string | SafeHtml;\n  spriteUrl?: string; // For sprite-based icons\n}\n\n@Component({\n  selector: 'ix-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-icon.component.html',\n  styleUrl: './ix-icon.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class IxIconComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() name: string = '';\n  @Input() size: IconSize = 'md';\n  @Input() color?: string;\n  @Input() tooltip?: string;\n  @Input() ariaLabel?: string;\n  @Input() library?: IconLibraryType;\n\n  @ViewChild('svgContainer', { static: false }) svgContainer?: ElementRef<HTMLDivElement>;\n\n  iconResult: IconResult = { source: 'text', content: '?' };\n\n  private iconRegistry = inject(IxIconRegistryService);\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.resolveIcon()\n      .then(() => {\n        this.cdr.markForCheck();\n        setTimeout(() => this.updateSvgContent(), 0);\n      })\n      .catch((error) => {\n        console.error('[IxIcon] Resolution failed', error);\n        this.iconResult = { source: 'text', content: '!' };\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['name'] || changes['library']) {\n      this.resolveIcon()\n        .then(() => {\n          this.cdr.markForCheck();\n          setTimeout(() => this.updateSvgContent(), 0);\n        })\n        .catch((error) => {\n          console.error('[IxIcon] Resolution failed (onChange)', error);\n          this.iconResult = { source: 'text', content: '!' };\n          this.cdr.markForCheck();\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.updateSvgContent();\n  }\n\n  get effectiveAriaLabel(): string {\n    return this.ariaLabel || this.name || 'Icon';\n  }\n\n  get sanitizedContent(): any {\n    const content = this.iconResult.content;\n    \n    // Handle mock SafeHtml objects from Storybook\n    if (content && typeof content === 'object' && (content as any).changingThisBreaksApplicationSecurity) {\n      return (content as any).changingThisBreaksApplicationSecurity;\n    }\n    \n    return content;\n  }\n\n  private updateSvgContent(): void {\n    if (this.iconResult.source === 'svg' && this.svgContainer) {\n      const content = this.sanitizedContent;\n      if (typeof content === 'string') {\n        // Bypass Angular's sanitization by setting innerHTML directly\n        this.svgContainer.nativeElement.innerHTML = content;\n      }\n    }\n  }\n\n  private async resolveIcon(): Promise<void> {\n    if (!this.name) {\n      this.iconResult = { source: 'text', content: '?' };\n      return;\n    }\n\n    // Wait for sprite to load (if it's being loaded)\n    try {\n      await this.iconRegistry.getSpriteLoader().ensureSpriteLoaded();\n    } catch (error) {\n      // Sprite loading failed, continue with other resolution methods\n      console.warn('[IxIcon] Sprite loading failed, falling back to other icon sources:', error);\n    }\n\n    // Construct the effective icon name based on library attribute\n    let effectiveIconName = this.name;\n    if (this.library === 'mdi' && !this.name.startsWith('mdi-')) {\n      effectiveIconName = `mdi-${this.name}`;\n    } else if (this.library === 'material' && !this.name.startsWith('mat-')) {\n      // Material icons don't need prefix in sprite\n      effectiveIconName = this.name;\n    } else if (this.library === 'lucide' && !this.name.includes(':')) {\n      // Convert to registry format for Lucide icons\n      effectiveIconName = `lucide:${this.name}`;\n    }\n\n    // 1. Try icon registry (libraries and custom icons)\n    const iconOptions = {\n      size: this.size,\n      color: this.color\n    };\n    let registryResult = this.iconRegistry.resolveIcon(effectiveIconName, iconOptions);\n\n    // Fallback to global registry for Storybook/demos (when DI doesn't work)\n    if (!registryResult && typeof window !== 'undefined' && (window as any).__storybookIconRegistry) {\n      const globalRegistry = (window as any).__storybookIconRegistry;\n      if (globalRegistry) {\n        registryResult = globalRegistry.resolveIcon(effectiveIconName, iconOptions);\n      }\n    }\n\n    if (registryResult) {\n      this.iconResult = registryResult;\n      return;\n    }\n\n    // 2. Try built-in third-party patterns (deprecated - use registry instead)\n    const thirdPartyResult = this.tryThirdPartyIcon(effectiveIconName);\n    if (thirdPartyResult) {\n      this.iconResult = thirdPartyResult;\n      return;\n    }\n\n    // 3. Try CSS class (Font Awesome, Material Icons, etc.)\n    const cssResult = this.tryCssIcon(effectiveIconName);\n    if (cssResult) {\n      this.iconResult = cssResult;\n      return;\n    }\n\n    // 4. Try Unicode mapping\n    const unicodeResult = this.tryUnicodeIcon(effectiveIconName);\n    if (unicodeResult) {\n      this.iconResult = unicodeResult;\n      return;\n    }\n\n    // 5. Fallback to text abbreviation\n    this.iconResult = {\n      source: 'text',\n      content: this.generateTextAbbreviation(effectiveIconName)\n    };\n  }\n\n  private tryThirdPartyIcon(name: string): IconResult | null {\n    // This method is deprecated in favor of the icon registry\n    // Keeping for backward compatibility only\n    \n    // Legacy support for old custom: prefix before registry was available\n    if (name.startsWith('custom:')) {\n      console.warn('Using deprecated custom: prefix. Please use the icon registry instead.');\n      const iconName = name.replace('custom:', '');\n      const legacyIcons: Record<string, string> = {\n        'heart': `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n        </svg>`,\n        'rocket': `<svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M2.81 14.7l1.68-1.68L7.66 16.2 6.93 17.78 2.81 14.7zm16.55-11.45c-.78-.78-2.05-.78-2.83 0l-1.72 1.72c-.78.78-.78 2.05 0 2.83.78.78 2.05.78 2.83 0l1.72-1.72c.78-.78.78-2.05 0-2.83z\"/>\n        </svg>`\n      };\n      \n      if (legacyIcons[iconName]) {\n        return {\n          source: 'svg',\n          content: this.sanitizer.bypassSecurityTrustHtml(legacyIcons[iconName])\n        };\n      }\n    }\n\n    return null;\n  }\n\n  private tryCssIcon(name: string): IconResult | null {\n    // Font Awesome pattern\n    if (name.startsWith('fa-') || name.startsWith('fas-') || name.startsWith('far-')) {\n      return {\n        source: 'css',\n        content: name.startsWith('fa-') ? name : name.replace('-', ' fa-')\n      };\n    }\n\n    // Material Icons pattern\n    if (name.startsWith('mat-') || name.includes('material')) {\n      const materialName = name.replace('mat-', '').replace('material-', '');\n      return {\n        source: 'css',\n        content: `material-icons material-icons-${materialName}`\n      };\n    }\n\n    // Check if class exists in document\n    if (this.cssClassExists(name)) {\n      return {\n        source: 'css',\n        content: name\n      };\n    }\n\n    return null;\n  }\n\n  private tryUnicodeIcon(name: string): IconResult | null {\n    const unicodeMap: Record<string, string> = {\n      'home': '⌂',\n      'star': '★',\n      'check': '✓',\n      'close': '✕',\n      'warning': '⚠',\n      'info': 'ⓘ',\n      'arrow-left': '←',\n      'arrow-right': '→',\n      'arrow-up': '↑',\n      'arrow-down': '↓',\n      'menu': '☰',\n      'settings': '⚙',\n      'user': '👤',\n      'search': '🔍',\n      'heart': '♥',\n      'plus': '+',\n      'minus': '−',\n    };\n\n    const unicode = unicodeMap[name.toLowerCase()];\n    return unicode ? { source: 'unicode', content: unicode } : null;\n  }\n\n  private generateTextAbbreviation(name: string): string {\n    if (!name) return '?';\n    \n    // Handle hyphenated names (e.g., 'arrow-left' -> 'AL')\n    if (name.includes('-')) {\n      const parts = name.split('-');\n      return parts\n        .map(part => part.charAt(0).toUpperCase())\n        .slice(0, 2)\n        .join('');\n    }\n\n    // Default to first 2 characters\n    return name.substring(0, 2).toUpperCase();\n  }\n\n  private cssClassExists(className: string): boolean {\n    if (typeof document === 'undefined') return false;\n    \n    // For now, only return true for known CSS icon patterns\n    // In real implementation, consumers would override this method\n    return false; // Disable generic CSS class checking for now\n  }\n}","<div \n  class=\"ix-icon\"\n  [ngClass]=\"'ix-icon--' + size\"\n  [style.color]=\"color\"\n  [attr.aria-label]=\"effectiveAriaLabel\"\n  [attr.title]=\"tooltip\"\n  role=\"img\">\n  \n  \n  <ng-container [ngSwitch]=\"iconResult.source\">\n    <!-- Sprite icons (from generated sprite.svg) -->\n    <svg *ngSwitchCase=\"'sprite'\"\n         class=\"ix-icon__sprite\"\n         aria-hidden=\"true\">\n      <use [attr.href]=\"iconResult.spriteUrl\"></use>\n    </svg>\n\n    <!-- SVG content (from third-party libraries or assets) -->\n    <div *ngSwitchCase=\"'svg'\"\n         class=\"ix-icon__svg\"\n         #svgContainer>\n    </div>\n\n    <!-- CSS class icons (Font Awesome, Material Icons, etc.) -->\n    <i *ngSwitchCase=\"'css'\"\n       class=\"ix-icon__css\"\n       [class]=\"iconResult.content\"\n       aria-hidden=\"true\">\n    </i>\n\n    <!-- Unicode characters -->\n    <span *ngSwitchCase=\"'unicode'\"\n          class=\"ix-icon__unicode\"\n          aria-hidden=\"true\">{{ iconResult.content }}</span>\n\n    <!-- Text abbreviation fallback -->\n    <span *ngSwitchDefault\n          class=\"ix-icon__text\"\n          aria-hidden=\"true\">{{ iconResult.content }}</span>\n  </ng-container>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IxIconComponent, IconSize, IconLibraryType } from '../ix-icon/ix-icon.component';\n\n@Component({\n  selector: 'ix-icon-button',\n  standalone: true,\n  imports: [CommonModule, IxIconComponent],\n  templateUrl: './ix-icon-button.component.html',\n  styleUrls: ['./ix-icon-button.component.scss'],\n})\nexport class IxIconButtonComponent {\n  // Button-related inputs\n  @Input()\n  disabled = false;\n\n  @Input()\n  ariaLabel?: string;\n\n  // Icon-related inputs\n  @Input()\n  name: string = '';\n\n  @Input()\n  size: IconSize = 'md';\n\n  @Input()\n  color?: string;\n\n  @Input()\n  tooltip?: string;\n\n  @Input()\n  library?: IconLibraryType;\n\n  @Output()\n  onClick = new EventEmitter<MouseEvent>();\n\n  public get classes(): string[] {\n    return ['ix-icon-button'];\n  }\n\n  public get effectiveAriaLabel(): string {\n    return this.ariaLabel || this.name || 'Icon button';\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [disabled]=\"disabled\"\n  [attr.aria-label]=\"effectiveAriaLabel\"\n  [attr.title]=\"tooltip\"\n>\n  <ix-icon\n    [name]=\"name\"\n    [size]=\"size\"\n    [color]=\"color\"\n    [library]=\"library\"\n    [ariaLabel]=\"effectiveAriaLabel\">\n  </ix-icon>\n</button>\n","export enum InputType {\n  Email = 'email',\n  Password = 'password',\n  PlainText = 'text',\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit, inject, Input, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { InputType } from '../enums/input-type.enum';\n\n@Component({\n  selector: 'ix-input',\n  standalone: true,\n  imports: [CommonModule, FormsModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxInputComponent),\n      multi: true\n    }\n  ],\n  templateUrl: './ix-input.component.html',\n  styleUrl: './ix-input.component.scss',\n})\nexport class IxInputComponent implements AfterViewInit, ControlValueAccessor {\n  @ViewChild('inputEl') inputEl!: ElementRef<HTMLInputElement | HTMLTextAreaElement>;\n\n  @Input() inputType: InputType = InputType.PlainText;\n  @Input() placeholder = 'Enter your name';\n  @Input() testId?: string;\n  @Input() disabled = false;\n  @Input() multiline: boolean = false;\n  @Input() rows: number = 3;\n\n  id = 'ix-input';\n  value = '';\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n  private focusMonitor = inject(FocusMonitor);\n\n  ngAfterViewInit() {\n    this.focusMonitor.monitor(this.inputEl);\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: any): void {\n    this.value = value || '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Component methods\n  onValueChange(event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLTextAreaElement;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n}\n","<div class=\"ix-input-container\">\n  <!-- Regular input field -->\n  <input\n    *ngIf=\"!multiline\"\n    #inputEl\n    [id]=\"id\"\n    [value]=\"value\"\n    [type]=\"inputType\"\n    [attr.placeholder]=\"placeholder\"\n    [attr.data-testid]=\"testId\"\n    [disabled]=\"disabled\"\n    (input)=\"onValueChange($event)\"\n    (blur)=\"onBlur()\"\n    class=\"ix-input\"\n  />\n  \n  <!-- Textarea field -->\n  <textarea\n    *ngIf=\"multiline\"\n    #inputEl\n    [id]=\"id\"\n    [value]=\"value\"\n    [attr.placeholder]=\"placeholder\"\n    [attr.data-testid]=\"testId\"\n    [rows]=\"rows\"\n    [disabled]=\"disabled\"\n    (input)=\"onValueChange($event)\"\n    (blur)=\"onBlur()\"\n    class=\"ix-input ix-textarea\"\n  ></textarea>\n</div>\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'input[ixInput], textarea[ixInput], div[ixInput]',\n  standalone: true,\n  host: {\n    'class': 'ix-input-directive'\n  }\n})\nexport class IxInputDirective {\n  constructor() {}\n}","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\n\nexport type ChipColor = 'primary' | 'secondary' | 'accent';\n\n@Component({\n  selector: 'ix-chip',\n  standalone: true,\n  imports: [CommonModule, A11yModule, IxIconComponent],\n  templateUrl: './ix-chip.component.html',\n  styleUrls: ['./ix-chip.component.scss'],\n})\nexport class IxChipComponent implements AfterViewInit {\n  @ViewChild('chipEl') chipEl!: ElementRef<HTMLElement>;\n\n  @Input() label = 'Chip';\n  @Input() icon?: string;\n  @Input() closable = true;\n  @Input() disabled = false;\n  @Input() color: ChipColor = 'primary';\n  @Input() testId?: string;\n\n  @Output() onClose = new EventEmitter<void>();\n  @Output() onClick = new EventEmitter<MouseEvent>();\n\n  private focusMonitor = inject(FocusMonitor);\n\n  ngAfterViewInit() {\n    this.focusMonitor.monitor(this.chipEl)\n      .subscribe(origin => {\n        if (origin) {\n          console.log(`Chip focused via: ${origin}`);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.chipEl);\n  }\n\n  public get classes(): string[] {\n    const classes = ['ix-chip', `ix-chip--${this.color}`];\n    \n    if (this.disabled) {\n      classes.push('ix-chip--disabled');\n    }\n    \n    if (this.closable) {\n      classes.push('ix-chip--closable');\n    }\n    \n    return classes;\n  }\n\n  public handleClick(event: MouseEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    this.onClick.emit(event);\n  }\n\n  public handleClose(event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n    this.onClose.emit();\n  }\n\n  public handleKeyDown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    \n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.onClick.emit(event as any);\n    }\n    \n    if (this.closable && (event.key === 'Delete' || event.key === 'Backspace')) {\n      event.preventDefault();\n      this.onClose.emit();\n    }\n  }\n}","<div\n  #chipEl\n  [ngClass]=\"classes\"\n  [attr.data-testid]=\"testId\"\n  [attr.aria-label]=\"label\"\n  [attr.aria-disabled]=\"disabled\"\n  [attr.tabindex]=\"disabled ? -1 : 0\"\n  role=\"button\"\n  (click)=\"handleClick($event)\"\n  (keydown)=\"handleKeyDown($event)\"\n>\n  <ix-icon *ngIf=\"icon\" [name]=\"icon\" class=\"ix-chip__icon\" size=\"sm\"></ix-icon>\n  <span class=\"ix-chip__label\">{{ label }}</span>\n  <button\n    *ngIf=\"closable\"\n    type=\"button\"\n    class=\"ix-chip__close\"\n    [attr.aria-label]=\"'Remove ' + label\"\n    [disabled]=\"disabled\"\n    (click)=\"handleClose($event)\"\n  >\n    <span class=\"ix-chip__close-icon\">×</span>\n  </button>\n</div>","import { Component, ViewChild, ElementRef, AfterViewInit, OnDestroy, inject, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\n\nexport type SlideToggleColor = 'primary' | 'accent' | 'warn';\n\n@Component({\n  selector: 'ix-slide-toggle',\n  standalone: true,\n  imports: [CommonModule, FormsModule, A11yModule],\n  templateUrl: './ix-slide-toggle.component.html',\n  styleUrl: './ix-slide-toggle.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxSlideToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class IxSlideToggleComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  @ViewChild('toggleEl') toggleEl!: ElementRef<HTMLInputElement>;\n\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() label?: string;\n  @Input() disabled = false;\n  @Input() required = false;\n  @Input() color: SlideToggleColor = 'primary';\n  @Input() testId?: string;\n  @Input() ariaLabel?: string;\n  @Input() ariaLabelledby?: string;\n  @Input() checked = false;\n\n  @Output() change = new EventEmitter<boolean>();\n  @Output() toggleChange = new EventEmitter<boolean>();\n\n  id = `ix-slide-toggle-${Math.random().toString(36).substr(2, 9)}`;\n\n  private focusMonitor = inject(FocusMonitor);\n  private onChange = (_: boolean) => {};\n  private onTouched = () => {};\n\n  ngAfterViewInit() {\n    if (this.toggleEl) {\n      this.focusMonitor.monitor(this.toggleEl)\n        .subscribe(origin => {\n          // Focus monitoring for accessibility\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.toggleEl) {\n      this.focusMonitor.stopMonitoring(this.toggleEl);\n    }\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: boolean): void {\n    this.checked = value !== null && value !== undefined ? value : false;\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onToggleChange(event: Event): void {\n    event.stopPropagation();\n    \n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    \n    this.onChange(this.checked);\n    this.onTouched();\n    this.change.emit(this.checked);\n    this.toggleChange.emit(this.checked);\n  }\n\n  onLabelClick(): void {\n    if (!this.disabled && this.toggleEl) {\n      this.toggleEl.nativeElement.click();\n    }\n  }\n\n  get classes(): string[] {\n    const classes = ['ix-slide-toggle'];\n    \n    if (this.disabled) {\n      classes.push('ix-slide-toggle--disabled');\n    }\n    \n    if (this.checked) {\n      classes.push('ix-slide-toggle--checked');\n    }\n    \n    classes.push(`ix-slide-toggle--${this.color}`);\n    classes.push(`ix-slide-toggle--label-${this.labelPosition}`);\n\n    return classes;\n  }\n\n  get effectiveAriaLabel(): string | undefined {\n    return this.ariaLabel || (this.label ? undefined : 'Toggle');\n  }\n}","<div [ngClass]=\"classes\" [attr.data-testid]=\"testId\">\n  <label [for]=\"id\" class=\"ix-slide-toggle__label\">\n    \n    <!-- Label before toggle -->\n    <span \n      *ngIf=\"label && labelPosition === 'before'\" \n      class=\"ix-slide-toggle__label-text ix-slide-toggle__label-text--before\"\n      (click)=\"onLabelClick()\">\n      {{ label }}\n    </span>\n\n    <!-- Toggle track and thumb -->\n    <div class=\"ix-slide-toggle__bar\">\n      <input\n        #toggleEl\n        type=\"checkbox\"\n        [id]=\"id\"\n        [checked]=\"checked\"\n        [disabled]=\"disabled\"\n        [required]=\"required\"\n        [attr.aria-label]=\"effectiveAriaLabel\"\n        [attr.aria-labelledby]=\"ariaLabelledby\"\n        class=\"ix-slide-toggle__input\"\n        (change)=\"onToggleChange($event)\"\n      />\n      \n      <div class=\"ix-slide-toggle__track\">\n        <div class=\"ix-slide-toggle__track-fill\"></div>\n      </div>\n      \n      <div class=\"ix-slide-toggle__thumb-container\">\n        <div class=\"ix-slide-toggle__thumb\">\n          <div class=\"ix-slide-toggle__ripple\"></div>\n          <!-- State icon -->\n          <div class=\"ix-slide-toggle__icon\">\n            <svg \n              *ngIf=\"checked\" \n              class=\"ix-slide-toggle__check-icon\"\n              viewBox=\"0 0 24 24\" \n              width=\"16\" \n              height=\"16\">\n              <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" fill=\"currentColor\"/>\n            </svg>\n            <svg \n              *ngIf=\"!checked\" \n              class=\"ix-slide-toggle__minus-icon\"\n              viewBox=\"0 0 24 24\" \n              width=\"16\" \n              height=\"16\">\n              <path d=\"M19 13H5v-2h14v2z\" fill=\"currentColor\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Label after toggle -->\n    <span \n      *ngIf=\"label && labelPosition === 'after'\" \n      class=\"ix-slide-toggle__label-text ix-slide-toggle__label-text--after\"\n      (click)=\"onLabelClick()\">\n      {{ label }}\n    </span>\n\n  </label>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter, TemplateRef, ViewChild, OnInit, ViewContainerRef } from '@angular/core';\nimport { CdkMenu, CdkMenuItem, CdkMenuTrigger } from '@angular/cdk/menu';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\n\nexport interface IxMenuItem {\n  id: string;\n  label: string;\n  icon?: string;\n  iconLibrary?: 'material' | 'mdi' | 'custom' | 'lucide';\n  disabled?: boolean;\n  separator?: boolean;\n  action?: () => void;\n  children?: IxMenuItem[];\n  shortcut?: string;\n}\n\n@Component({\n  selector: 'ix-menu',\n  standalone: true,\n  imports: [CommonModule, CdkMenu, CdkMenuItem, CdkMenuTrigger, IxIconComponent],\n  templateUrl: './ix-menu.component.html',\n  styleUrls: ['./ix-menu.component.scss'],\n})\nexport class IxMenuComponent implements OnInit {\n  @Input() items: IxMenuItem[] = [];\n  @Input() contextMenu = false; // Enable context menu mode (right-click)\n\n  @Output() menuItemClick = new EventEmitter<IxMenuItem>();\n  @Output() menuOpen = new EventEmitter<void>();\n  @Output() menuClose = new EventEmitter<void>();\n\n  @ViewChild('menuTemplate', { read: TemplateRef }) menuTemplate!: TemplateRef<any>;\n  @ViewChild('contextMenuTemplate', { read: TemplateRef }) contextMenuTemplate!: TemplateRef<any>;\n\n  private contextOverlayRef?: OverlayRef;\n\n  constructor(\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit(): void {\n    // Component initialization\n  }\n\n  onMenuItemClick(item: IxMenuItem): void {\n    if (!item.disabled && (!item.children || item.children.length === 0)) {\n      this.menuItemClick.emit(item);\n      if (item.action) {\n        item.action();\n      }\n      // Close context menu if it's open\n      if (this.contextOverlayRef) {\n        this.closeContextMenu();\n      }\n    }\n  }\n\n  hasChildren(item: IxMenuItem): boolean {\n    return !!(item.children && item.children.length > 0);\n  }\n\n  onMenuOpen(): void {\n    this.menuOpen.emit();\n  }\n\n  onMenuClose(): void {\n    this.menuClose.emit();\n  }\n\n  /**\n   * Get the menu template for use by the trigger directive\n   */\n  public getMenuTemplate(): TemplateRef<any> | null {\n    if (this.contextMenu) {\n      return this.contextMenuTemplate || null;\n    }\n    return this.menuTemplate || null;\n  }\n\n  public openContextMenuAt(x: number, y: number): void {\n    if (this.contextMenu && this.contextMenuTemplate) {\n      // Close any existing context menu\n      this.closeContextMenu();\n      \n      // Create overlay at cursor position\n      const positionStrategy = this.overlay.position()\n        .flexibleConnectedTo({ x, y })\n        .withPositions([\n          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top' },\n          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n          { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'top' },\n          { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' }\n        ]);\n\n      this.contextOverlayRef = this.overlay.create({\n        positionStrategy,\n        scrollStrategy: this.overlay.scrollStrategies.close(),\n        hasBackdrop: true,\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n      });\n\n      // Create portal and attach to overlay\n      const portal = new TemplatePortal(this.contextMenuTemplate, this.viewContainerRef);\n      this.contextOverlayRef.attach(portal);\n\n      // Handle backdrop click to close menu\n      this.contextOverlayRef.backdropClick().subscribe(() => {\n        this.closeContextMenu();\n      });\n\n      this.onMenuOpen();\n    }\n  }\n\n  private closeContextMenu(): void {\n    if (this.contextOverlayRef) {\n      this.contextOverlayRef.dispose();\n      this.contextOverlayRef = undefined;\n      this.onMenuClose();\n    }\n  }\n\n  onContextMenu(event: MouseEvent): void {\n    if (this.contextMenu) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Open at cursor position\n      this.openContextMenuAt(event.clientX, event.clientY);\n    }\n  }\n\n  trackByItemId(index: number, item: IxMenuItem): string {\n    return item.id;\n  }\n}","<!-- Context menu content slot -->\n<div *ngIf=\"contextMenu\" class=\"ix-menu-context-content\" (contextmenu)=\"onContextMenu($event)\">\n  <ng-content></ng-content>\n</div>\n\n  <!-- Context menu template for overlay -->\n  <ng-template #contextMenuTemplate>\n    <div class=\"ix-menu\" cdkMenu>\n      <ng-container *ngFor=\"let item of items; trackBy: trackByItemId\">\n        <div\n          *ngIf=\"item.separator; else menuItem\"\n          class=\"ix-menu-separator\"\n          role=\"separator\"\n        ></div>\n        \n        <ng-template #menuItem>\n          <button\n            *ngIf=\"!item.children || item.children.length === 0; else nestedMenuItem\"\n            cdkMenuItem\n            [disabled]=\"item.disabled\"\n            [class.disabled]=\"item.disabled\"\n            class=\"ix-menu-item\"\n            (click)=\"onMenuItemClick(item)\"\n            type=\"button\"\n          >\n            <ix-icon *ngIf=\"item.icon\" [name]=\"item.icon\" [library]=\"item.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n            <span class=\"ix-menu-item-label\">{{ item.label }}</span>\n            <span *ngIf=\"item.shortcut\" class=\"ix-menu-item-shortcut\">{{ item.shortcut }}</span>\n          </button>\n          \n          <ng-template #nestedMenuItem>\n            <button\n              cdkMenuItem\n              [cdkMenuTriggerFor]=\"nestedMenu\"\n              [disabled]=\"item.disabled\"\n              [class.disabled]=\"item.disabled\"\n              class=\"ix-menu-item ix-menu-item--nested\"\n              type=\"button\"\n            >\n              <ix-icon *ngIf=\"item.icon\" [name]=\"item.icon\" [library]=\"item.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n              <span class=\"ix-menu-item-label\">{{ item.label }}</span>\n              <span *ngIf=\"item.shortcut\" class=\"ix-menu-item-shortcut\">{{ item.shortcut }}</span>\n              <span class=\"ix-menu-item-arrow\">▶</span>\n            </button>\n            \n            <ng-template #nestedMenu>\n              <div class=\"ix-menu ix-menu--nested\" cdkMenu>\n                <ng-container *ngFor=\"let nestedItem of item.children; trackBy: trackByItemId\">\n                  <div\n                    *ngIf=\"nestedItem.separator; else nestedMenuItemTemplate\"\n                    class=\"ix-menu-separator\"\n                    role=\"separator\"\n                  ></div>\n                  \n                  <ng-template #nestedMenuItemTemplate>\n                    <button\n                      *ngIf=\"!nestedItem.children || nestedItem.children.length === 0; else deepNestedMenuItem\"\n                      cdkMenuItem\n                      [disabled]=\"nestedItem.disabled\"\n                      [class.disabled]=\"nestedItem.disabled\"\n                      class=\"ix-menu-item\"\n                      (click)=\"onMenuItemClick(nestedItem)\"\n                      type=\"button\"\n                    >\n                      <ix-icon *ngIf=\"nestedItem.icon\" [name]=\"nestedItem.icon\" [library]=\"nestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                      <span class=\"ix-menu-item-label\">{{ nestedItem.label }}</span>\n                      <span *ngIf=\"nestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ nestedItem.shortcut }}</span>\n                    </button>\n                    \n                    <ng-template #deepNestedMenuItem>\n                      <button\n                        cdkMenuItem\n                        [cdkMenuTriggerFor]=\"deepNestedMenu\"\n                        [disabled]=\"nestedItem.disabled\"\n                        [class.disabled]=\"nestedItem.disabled\"\n                        class=\"ix-menu-item ix-menu-item--nested\"\n                        type=\"button\"\n                      >\n                        <ix-icon *ngIf=\"nestedItem.icon\" [name]=\"nestedItem.icon\" [library]=\"nestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                        <span class=\"ix-menu-item-label\">{{ nestedItem.label }}</span>\n                        <span *ngIf=\"nestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ nestedItem.shortcut }}</span>\n                        <span class=\"ix-menu-item-arrow\">▶</span>\n                      </button>\n                      \n                      <ng-template #deepNestedMenu>\n                        <div class=\"ix-menu ix-menu--nested\" cdkMenu>\n                          <ng-container *ngFor=\"let deepNestedItem of nestedItem.children; trackBy: trackByItemId\">\n                            <div\n                              *ngIf=\"deepNestedItem.separator; else deepNestedMenuItemTemplate\"\n                              class=\"ix-menu-separator\"\n                              role=\"separator\"\n                            ></div>\n                            \n                            <ng-template #deepNestedMenuItemTemplate>\n                              <button\n                                cdkMenuItem\n                                [disabled]=\"deepNestedItem.disabled\"\n                                [class.disabled]=\"deepNestedItem.disabled\"\n                                class=\"ix-menu-item\"\n                                (click)=\"onMenuItemClick(deepNestedItem)\"\n                                type=\"button\"\n                              >\n                                <ix-icon *ngIf=\"deepNestedItem.icon\" [name]=\"deepNestedItem.icon\" [library]=\"deepNestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                                <span class=\"ix-menu-item-label\">{{ deepNestedItem.label }}</span>\n                                <span *ngIf=\"deepNestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ deepNestedItem.shortcut }}</span>\n                              </button>\n                            </ng-template>\n                          </ng-container>\n                        </div>\n                      </ng-template>\n                    </ng-template>\n                  </ng-template>\n                </ng-container>\n              </div>\n            </ng-template>\n          </ng-template>\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <!-- Regular menu template -->\n  <ng-template #menuTemplate>\n    <div class=\"ix-menu\" cdkMenu>\n      <ng-container *ngFor=\"let item of items; trackBy: trackByItemId\">\n        <div\n          *ngIf=\"item.separator; else menuItem\"\n          class=\"ix-menu-separator\"\n          role=\"separator\"\n        ></div>\n        \n        <ng-template #menuItem>\n          <button\n            *ngIf=\"!item.children || item.children.length === 0; else nestedMenuItem\"\n            cdkMenuItem\n            [disabled]=\"item.disabled\"\n            [class.disabled]=\"item.disabled\"\n            class=\"ix-menu-item\"\n            (click)=\"onMenuItemClick(item)\"\n            type=\"button\"\n          >\n            <ix-icon *ngIf=\"item.icon\" [name]=\"item.icon\" [library]=\"item.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n            <span class=\"ix-menu-item-label\">{{ item.label }}</span>\n            <span *ngIf=\"item.shortcut\" class=\"ix-menu-item-shortcut\">{{ item.shortcut }}</span>\n          </button>\n          \n          <ng-template #nestedMenuItem>\n            <button\n              cdkMenuItem\n              [cdkMenuTriggerFor]=\"nestedMenu\"\n              [disabled]=\"item.disabled\"\n              [class.disabled]=\"item.disabled\"\n              class=\"ix-menu-item ix-menu-item--nested\"\n              type=\"button\"\n            >\n              <ix-icon *ngIf=\"item.icon\" [name]=\"item.icon\" [library]=\"item.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n              <span class=\"ix-menu-item-label\">{{ item.label }}</span>\n              <span *ngIf=\"item.shortcut\" class=\"ix-menu-item-shortcut\">{{ item.shortcut }}</span>\n              <span class=\"ix-menu-item-arrow\">▶</span>\n            </button>\n            \n            <ng-template #nestedMenu>\n              <div class=\"ix-menu ix-menu--nested\" cdkMenu>\n                <ng-container *ngFor=\"let nestedItem of item.children; trackBy: trackByItemId\">\n                  <div\n                    *ngIf=\"nestedItem.separator; else nestedMenuItemTemplate\"\n                    class=\"ix-menu-separator\"\n                    role=\"separator\"\n                  ></div>\n                  \n                  <ng-template #nestedMenuItemTemplate>\n                    <button\n                      *ngIf=\"!nestedItem.children || nestedItem.children.length === 0; else deepNestedMenuItem\"\n                      cdkMenuItem\n                      [disabled]=\"nestedItem.disabled\"\n                      [class.disabled]=\"nestedItem.disabled\"\n                      class=\"ix-menu-item\"\n                      (click)=\"onMenuItemClick(nestedItem)\"\n                      type=\"button\"\n                    >\n                      <ix-icon *ngIf=\"nestedItem.icon\" [name]=\"nestedItem.icon\" [library]=\"nestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                      <span class=\"ix-menu-item-label\">{{ nestedItem.label }}</span>\n                      <span *ngIf=\"nestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ nestedItem.shortcut }}</span>\n                    </button>\n                    \n                    <ng-template #deepNestedMenuItem>\n                      <button\n                        cdkMenuItem\n                        [cdkMenuTriggerFor]=\"deepNestedMenu\"\n                        [disabled]=\"nestedItem.disabled\"\n                        [class.disabled]=\"nestedItem.disabled\"\n                        class=\"ix-menu-item ix-menu-item--nested\"\n                        type=\"button\"\n                      >\n                        <ix-icon *ngIf=\"nestedItem.icon\" [name]=\"nestedItem.icon\" [library]=\"nestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                        <span class=\"ix-menu-item-label\">{{ nestedItem.label }}</span>\n                        <span *ngIf=\"nestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ nestedItem.shortcut }}</span>\n                        <span class=\"ix-menu-item-arrow\">▶</span>\n                      </button>\n                      \n                      <ng-template #deepNestedMenu>\n                        <div class=\"ix-menu ix-menu--nested\" cdkMenu>\n                          <ng-container *ngFor=\"let deepNestedItem of nestedItem.children; trackBy: trackByItemId\">\n                            <div\n                              *ngIf=\"deepNestedItem.separator; else deepNestedMenuItemTemplate\"\n                              class=\"ix-menu-separator\"\n                              role=\"separator\"\n                            ></div>\n                            \n                            <ng-template #deepNestedMenuItemTemplate>\n                              <button\n                                cdkMenuItem\n                                [disabled]=\"deepNestedItem.disabled\"\n                                [class.disabled]=\"deepNestedItem.disabled\"\n                                class=\"ix-menu-item\"\n                                (click)=\"onMenuItemClick(deepNestedItem)\"\n                                type=\"button\"\n                              >\n                                <ix-icon *ngIf=\"deepNestedItem.icon\" [name]=\"deepNestedItem.icon\" [library]=\"deepNestedItem.iconLibrary\" size=\"sm\" class=\"ix-menu-item-icon\"></ix-icon>\n                                <span class=\"ix-menu-item-label\">{{ deepNestedItem.label }}</span>\n                                <span *ngIf=\"deepNestedItem.shortcut\" class=\"ix-menu-item-shortcut\">{{ deepNestedItem.shortcut }}</span>\n                              </button>\n                            </ng-template>\n                          </ng-container>\n                        </div>\n                      </ng-template>\n                    </ng-template>\n                  </ng-template>\n                </ng-container>\n              </div>\n            </ng-template>\n          </ng-template>\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-template>","import { Directive, Input, ElementRef, ViewContainerRef, HostListener } from '@angular/core';\nimport { Overlay, OverlayRef, ConnectedPosition } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { IxMenuComponent } from './ix-menu.component';\n\n/**\n * Directive that attaches a menu to any element.\n * Usage: <button [ixMenuTriggerFor]=\"menu\">Open Menu</button>\n */\n@Directive({\n  selector: '[ixMenuTriggerFor]',\n  standalone: true,\n  exportAs: 'ixMenuTrigger'\n})\nexport class IxMenuTriggerDirective {\n  @Input('ixMenuTriggerFor') menu!: IxMenuComponent;\n  @Input() ixMenuPosition: 'above' | 'below' | 'before' | 'after' = 'below';\n\n  private overlayRef?: OverlayRef;\n  private isMenuOpen = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.isMenuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  }\n\n  openMenu(): void {\n    if (!this.menu || this.isMenuOpen) {\n      return;\n    }\n\n    // Get menu template\n    const menuTemplate = this.menu.getMenuTemplate();\n    if (!menuTemplate) {\n      return;\n    }\n\n    // Create overlay\n    const positionStrategy = this.overlay.position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions(this.getPositions());\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      width: 'auto',\n      height: 'auto',\n      minWidth: '160px',\n      maxWidth: '300px'\n    });\n\n    // Create portal and attach\n    const portal = new TemplatePortal(menuTemplate, this.viewContainerRef);\n    this.overlayRef.attach(portal);\n\n    this.isMenuOpen = true;\n\n    // Handle backdrop click\n    this.overlayRef.backdropClick().subscribe(() => {\n      this.closeMenu();\n    });\n\n    // Notify menu component\n    this.menu.onMenuOpen();\n  }\n\n  closeMenu(): void {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n      this.isMenuOpen = false;\n      this.menu.onMenuClose();\n    }\n  }\n\n  private getPositions(): ConnectedPosition[] {\n    switch (this.ixMenuPosition) {\n      case 'above':\n        return [\n          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' }\n        ];\n      case 'below':\n        return [\n          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' }\n        ];\n      case 'before':\n        return [\n          { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' }\n        ];\n      case 'after':\n        return [\n          { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' }\n        ];\n      default:\n        return [\n          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' }\n        ];\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { IxButtonComponent } from '../ix-button/ix-button.component';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\nimport { IxIconButtonComponent } from '../ix-icon-button/ix-icon-button.component';\nimport { IxSlideToggleComponent } from '../ix-slide-toggle/ix-slide-toggle.component';\nimport { IxMenuComponent, IxMenuItem } from '../ix-menu/ix-menu.component';\nimport { IxMenuTriggerDirective } from '../ix-menu/ix-menu-trigger.directive';\nimport { IxIconRegistryService } from '../ix-icon/ix-icon-registry.service';\nimport {\n  IxCardAction,\n  IxCardControl,\n  IxCardHeaderStatus,\n  IxCardFooterLink\n} from './ix-card.interfaces';\nimport { mdiDotsVertical } from '@mdi/js';\n\n@Component({\n  selector: 'ix-card',\n  standalone: true,\n  imports: [CommonModule, IxButtonComponent, IxIconComponent, IxIconButtonComponent, IxSlideToggleComponent, IxMenuComponent, IxMenuTriggerDirective],\n  templateUrl: './ix-card.component.html',\n  styleUrls: ['./ix-card.component.scss'],\n})\nexport class IxCardComponent {\n  constructor(private iconRegistry: IxIconRegistryService) {\n    // Register MDI icons used by this component\n    this.registerMdiIcons();\n  }\n  @Input()\n  title?: string;\n\n  @Input()\n  titleLink?: string; // Makes title navigable\n\n  @Input()\n  elevation: 'none' | 'low' | 'medium' | 'high' = 'medium';\n\n  @Input()\n  padding: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  bordered = false;\n\n  @Input()\n  background = true;\n\n  // Header elements (top-right) - Always render in header\n  @Input()\n  headerStatus?: IxCardHeaderStatus;\n\n  @Input()\n  headerControl?: IxCardControl; // Slide toggle - ALWAYS in header\n\n  @Input()\n  headerMenu?: IxMenuItem[];\n\n  // Footer elements (bottom-right) - Always render in footer\n  @Input()\n  primaryAction?: IxCardAction;\n\n  @Input()\n  secondaryAction?: IxCardAction;\n\n  @Input()\n  footerLink?: IxCardFooterLink;\n\n  /**\n   * Register MDI icon library with all icons used by the card component\n   * This makes the component self-contained with zero configuration required\n   */\n  private registerMdiIcons(): void {\n    const mdiIcons: Record<string, string> = {\n      'dots-vertical': mdiDotsVertical,\n    };\n\n    // Register MDI library with resolver for card icons\n    this.iconRegistry.registerLibrary({\n      name: 'mdi',\n      resolver: (iconName: string) => {\n        const pathData = mdiIcons[iconName];\n        if (!pathData) {\n          return null;\n        }\n        return `<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"${pathData}\"/></svg>`;\n      }\n    });\n  }\n\n  public get classes(): string[] {\n    const elevationClass = `ix-card--elevation-${this.elevation}`;\n    const paddingClass = `ix-card--padding-${this.padding}`;\n    const borderedClass = this.bordered ? 'ix-card--bordered' : '';\n    const backgroundClass = this.background ? 'ix-card--background' : '';\n\n    return ['ix-card', elevationClass, paddingClass, borderedClass, backgroundClass].filter(Boolean);\n  }\n\n  public get hasHeader(): boolean {\n    return !!(this.title || this.headerStatus || this.headerControl || this.headerMenu);\n  }\n\n  public get hasFooter(): boolean {\n    return !!(this.primaryAction || this.secondaryAction || this.footerLink);\n  }\n\n  onTitleClick(): void {\n    if (this.titleLink) {\n      window.location.href = this.titleLink;\n    }\n  }\n\n  onControlChange(checked: boolean): void {\n    if (this.headerControl) {\n      this.headerControl.handler(checked);\n    }\n  }\n\n  onHeaderMenuItemClick(item: IxMenuItem): void {\n    // Handler is called automatically via IxMenuItem.action\n  }\n\n  getStatusClass(type?: string): string {\n    return type ? `ix-card__status--${type}` : 'ix-card__status--neutral';\n  }\n}","<div [ngClass]=\"classes\">\n  <!-- Header section -->\n  <div class=\"ix-card__header\" *ngIf=\"hasHeader\">\n    <div class=\"ix-card__header-left\">\n      <h3\n        class=\"ix-card__title\"\n        [class.ix-card__title--link]=\"titleLink\"\n        (click)=\"onTitleClick()\"\n        *ngIf=\"title\">\n        {{ title }}\n      </h3>\n    </div>\n\n    <div class=\"ix-card__header-right\">\n      <!-- Header Status -->\n      <div\n        class=\"ix-card__status\"\n        [ngClass]=\"getStatusClass(headerStatus?.type)\"\n        *ngIf=\"headerStatus\">\n        {{ headerStatus.label }}\n      </div>\n\n      <!-- Header Control (Slide Toggle) -->\n      <div class=\"ix-card__control\" *ngIf=\"headerControl\">\n        <ix-slide-toggle\n          [label]=\"headerControl.label\"\n          [checked]=\"headerControl.checked\"\n          [disabled]=\"headerControl.disabled || false\"\n          (change)=\"onControlChange($event)\">\n        </ix-slide-toggle>\n      </div>\n\n      <!-- Header Menu -->\n      <div class=\"ix-card__menu\" *ngIf=\"headerMenu && headerMenu.length\">\n        <ix-icon-button\n          name=\"dots-vertical\"\n          library=\"mdi\"\n          size=\"md\"\n          [ixMenuTriggerFor]=\"cardMenu\"\n          ariaLabel=\"Card menu\">\n        </ix-icon-button>\n        <ix-menu\n          #cardMenu\n          [items]=\"headerMenu\"\n          (menuItemClick)=\"onHeaderMenuItemClick($event)\">\n        </ix-menu>\n      </div>\n    </div>\n  </div>\n\n  <!-- Content section -->\n  <div class=\"ix-card__content\">\n    <ng-content></ng-content>\n  </div>\n\n  <!-- Footer section -->\n  <div class=\"ix-card__footer\" *ngIf=\"hasFooter\">\n    <div class=\"ix-card__footer-left\">\n      <button\n        *ngIf=\"footerLink\"\n        type=\"button\"\n        class=\"ix-card__footer-link\"\n        (click)=\"footerLink.handler()\">\n        {{ footerLink.label }}\n      </button>\n    </div>\n\n    <div class=\"ix-card__footer-right\">\n      <ix-button\n        *ngIf=\"secondaryAction\"\n        [label]=\"secondaryAction.label\"\n        variant=\"outline\"\n        color=\"default\"\n        [disabled]=\"secondaryAction.disabled || false\"\n        (click)=\"secondaryAction.handler()\">\n      </ix-button>\n\n      <ix-button\n        *ngIf=\"primaryAction\"\n        [label]=\"primaryAction.label\"\n        variant=\"filled\"\n        color=\"primary\"\n        [disabled]=\"primaryAction.disabled || false\"\n        (click)=\"primaryAction.handler()\">\n      </ix-button>\n    </div>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'ix-expansion-panel',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-expansion-panel.component.html',\n  styleUrls: ['./ix-expansion-panel.component.scss'],\n  animations: [\n    trigger('expandCollapse', [\n      state('collapsed', style({\n        height: '0px',\n        opacity: 0,\n        overflow: 'hidden',\n        display: 'none'\n      })),\n      state('expanded', style({\n        height: '*',\n        opacity: 1,\n        overflow: 'visible',\n        display: 'block'\n      })),\n      transition('collapsed => expanded', [\n        style({ display: 'block', height: '0px', opacity: 0 }),\n        animate('300ms cubic-bezier(0.4, 0, 0.2, 1)', style({ height: '*', opacity: 1 }))\n      ]),\n      transition('expanded => collapsed', [\n        animate('300ms cubic-bezier(0.4, 0, 0.2, 1)', style({ height: '0px', opacity: 0 })),\n        style({ display: 'none' })\n      ])\n    ])\n  ]\n})\nexport class IxExpansionPanelComponent {\n  @Input()\n  title?: string;\n\n  @Input()\n  elevation: 'none' | 'low' | 'medium' | 'high' = 'medium';\n\n  @Input()\n  padding: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  bordered = false;\n\n  @Input()\n  background = true;\n\n  @Input()\n  expanded = false;\n\n  @Input()\n  disabled = false;\n\n  @Input()\n  titleStyle: 'header' | 'body' | 'link' = 'header';\n\n  @Output()\n  expandedChange = new EventEmitter<boolean>();\n\n  @Output()\n  toggleEvent = new EventEmitter<void>();\n\n  public readonly contentId = `ix-expansion-panel-content-${Math.random().toString(36).substr(2, 9)}`;\n\n  public toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n    \n    this.expanded = !this.expanded;\n    this.expandedChange.emit(this.expanded);\n    this.toggleEvent.emit();\n  }\n\n  public get classes(): string[] {\n    const elevationClass = `ix-expansion-panel--elevation-${this.elevation}`;\n    const paddingClass = `ix-expansion-panel--padding-${this.padding}`;\n    const borderedClass = this.bordered ? 'ix-expansion-panel--bordered' : '';\n    const backgroundClass = this.background ? 'ix-expansion-panel--background' : '';\n    const expandedClass = this.expanded ? 'ix-expansion-panel--expanded' : '';\n    const disabledClass = this.disabled ? 'ix-expansion-panel--disabled' : '';\n    const titleStyleClass = `ix-expansion-panel--title-${this.titleStyle}`;\n    \n    return [\n      'ix-expansion-panel', \n      elevationClass, \n      paddingClass, \n      borderedClass, \n      backgroundClass,\n      expandedClass,\n      disabledClass,\n      titleStyleClass\n    ].filter(Boolean);\n  }\n}","<div [ngClass]=\"classes\">\n  <button class=\"ix-expansion-panel__header\"\n          [disabled]=\"disabled\"\n          (click)=\"toggle()\"\n          [attr.aria-expanded]=\"expanded\"\n          [attr.aria-controls]=\"contentId\"\n          [attr.aria-disabled]=\"disabled\">\n    <div class=\"ix-expansion-panel__title\" *ngIf=\"title\">\n      {{ title }}\n    </div>\n    <ng-content select=\"[slot=title]\"></ng-content>\n    \n    <div class=\"ix-expansion-panel__indicator\">\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <path d=\"m6 9 6 6 6-6\"/>\n      </svg>\n    </div>\n  </button>\n  \n  <div class=\"ix-expansion-panel__content\" \n       [id]=\"contentId\"\n       [attr.aria-hidden]=\"!expanded\"\n       [@expandCollapse]=\"expanded ? 'expanded' : 'collapsed'\">\n    <ng-content></ng-content>\n  </div>\n</div>","import { Component, ViewChild, ElementRef, AfterViewInit, OnDestroy, inject, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'ix-checkbox',\n  standalone: true,\n  imports: [CommonModule, FormsModule, A11yModule],\n  templateUrl: './ix-checkbox.component.html',\n  styleUrl: './ix-checkbox.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxCheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class IxCheckboxComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  @ViewChild('checkboxEl') checkboxEl!: ElementRef<HTMLInputElement>;\n\n  @Input() label = 'Checkbox';\n  @Input() hideLabel = false;\n  @Input() disabled = false;\n  @Input() required = false;\n  @Input() indeterminate = false;\n  @Input() testId?: string;\n  @Input() error: string | null = null;\n  @Input() checked = false;\n\n  @Output() change = new EventEmitter<boolean>();\n\n  id = `ix-checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n  private focusMonitor = inject(FocusMonitor);\n  private onChange = (_: boolean) => {};\n  private onTouched = () => {};\n\n  ngAfterViewInit() {\n    if (this.checkboxEl) {\n      this.focusMonitor.monitor(this.checkboxEl)\n        .subscribe(origin => {\n          // Focus monitoring for accessibility\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkboxEl) {\n      this.focusMonitor.stopMonitoring(this.checkboxEl);\n    }\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: boolean): void {\n    this.checked = value !== null && value !== undefined ? value : false;\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onCheckboxChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.onChange(this.checked);\n    this.onTouched();\n    this.change.emit(this.checked);\n  }\n\n  get classes(): string[] {\n    const classes = ['ix-checkbox'];\n    \n    if (this.disabled) {\n      classes.push('ix-checkbox--disabled');\n    }\n    \n    if (this.error) {\n      classes.push('ix-checkbox--error');\n    }\n    \n    if (this.indeterminate) {\n      classes.push('ix-checkbox--indeterminate');\n    }\n\n    return classes;\n  }\n}","<div [ngClass]=\"classes\">\n  <label [for]=\"id\" class=\"ix-checkbox__label\">\n    <input\n      #checkboxEl\n      type=\"checkbox\"\n      [id]=\"id\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [required]=\"required\"\n      [indeterminate]=\"indeterminate\"\n      [attr.data-testid]=\"testId\"\n      [attr.aria-describedby]=\"error ? id + '-error' : null\"\n      [attr.aria-invalid]=\"error ? 'true' : null\"\n      class=\"ix-checkbox__input\"\n      (change)=\"onCheckboxChange($event)\"\n    />\n    <span class=\"ix-checkbox__checkmark\"></span>\n    <span class=\"ix-checkbox__text\" *ngIf=\"!hideLabel\">{{ label }}</span>\n  </label>\n  \n  @if (error) {\n    <div \n      [id]=\"id + '-error'\" \n      class=\"ix-checkbox__error\"\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      {{ error }}\n    </div>\n  }\n</div>","import { Component, ViewChild, ElementRef, AfterViewInit, OnDestroy, inject, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, A11yModule } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'ix-radio',\n  standalone: true,\n  imports: [CommonModule, FormsModule, A11yModule],\n  templateUrl: './ix-radio.component.html',\n  styleUrl: './ix-radio.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxRadioComponent),\n      multi: true\n    }\n  ]\n})\nexport class IxRadioComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  @ViewChild('radioEl') radioEl!: ElementRef<HTMLInputElement>;\n\n  @Input() label = 'Radio';\n  @Input() value: any = '';\n  @Input() name?: string;\n  @Input() disabled = false;\n  @Input() required = false;\n  @Input() testId?: string;\n  @Input() error: string | null = null;\n\n  @Output() change = new EventEmitter<any>();\n\n  id = `ix-radio-${Math.random().toString(36).substr(2, 9)}`;\n  checked = false;\n\n  private focusMonitor = inject(FocusMonitor);\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  ngAfterViewInit() {\n    if (this.radioEl) {\n      this.focusMonitor.monitor(this.radioEl)\n        .subscribe(origin => {\n          // Focus monitoring for accessibility\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.radioEl) {\n      this.focusMonitor.stopMonitoring(this.radioEl);\n    }\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: any): void {\n    this.checked = value !== null && value !== undefined && value === this.value;\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onRadioChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    if (target.checked) {\n      this.onChange(this.value);\n      this.onTouched();\n      this.change.emit(this.value);\n    }\n  }\n\n  get classes(): string[] {\n    const classes = ['ix-radio'];\n    \n    if (this.disabled) {\n      classes.push('ix-radio--disabled');\n    }\n    \n    if (this.error) {\n      classes.push('ix-radio--error');\n    }\n\n    return classes;\n  }\n}","<div [ngClass]=\"classes\">\n  <label [for]=\"id\" class=\"ix-radio__label\">\n    <input\n      #radioEl\n      type=\"radio\"\n      [id]=\"id\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [required]=\"required\"\n      [attr.data-testid]=\"testId\"\n      [attr.aria-describedby]=\"error ? id + '-error' : null\"\n      [attr.aria-invalid]=\"error ? 'true' : null\"\n      class=\"ix-radio__input\"\n      (change)=\"onRadioChange($event)\"\n    />\n    <span class=\"ix-radio__checkmark\"></span>\n    <span class=\"ix-radio__text\">{{ label }}</span>\n  </label>\n  \n  @if (error) {\n    <div \n      [id]=\"id + '-error'\" \n      class=\"ix-radio__error\"\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      {{ error }}\n    </div>\n  }\n</div>","import { Component, Input, Output, EventEmitter, ElementRef, inject, TemplateRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'ix-tab',\n  standalone: true,\n  imports: [CommonModule, A11yModule],\n  templateUrl: './ix-tab.component.html',\n  styleUrl: './ix-tab.component.scss'\n})\nexport class IxTabComponent implements AfterContentInit {\n  @Input() label = '';\n  @Input() disabled = false;\n  @Input() icon?: string;\n  @Input() iconTemplate?: TemplateRef<any>;\n  @Input() testId?: string;\n\n  @Output() selected = new EventEmitter<void>();\n\n  @ContentChild('iconContent') iconContent?: TemplateRef<any>;\n\n  // Internal properties set by parent IxTabsComponent\n  index = 0;\n  isActive = false;\n  tabsComponent?: any; // Will be set by parent\n\n  elementRef = inject(ElementRef<HTMLElement>);\n  \n  hasIconContent = false;\n\n  ngAfterContentInit() {\n    this.hasIconContent = !!this.iconContent;\n  }\n\n  onClick() {\n    if (!this.disabled) {\n      this.selected.emit();\n    }\n  }\n\n  onKeydown(event: KeyboardEvent) {\n    if (this.tabsComponent) {\n      this.tabsComponent.onKeydown(event, this.index);\n    }\n  }\n\n  get classes(): string {\n    const classes = ['ix-tab'];\n    \n    if (this.isActive) {\n      classes.push('ix-tab--active');\n    }\n    \n    if (this.disabled) {\n      classes.push('ix-tab--disabled');\n    }\n\n    return classes.join(' ');\n  }\n\n  get tabIndex(): number {\n    return this.isActive ? 0 : -1;\n  }\n\n  get hasIcon(): boolean {\n    return !!(this.iconContent || this.iconTemplate || this.icon);\n  }\n}","<button\n  [ngClass]=\"classes\"\n  [attr.data-testid]=\"testId\"\n  [attr.aria-selected]=\"isActive\"\n  [attr.aria-disabled]=\"disabled\"\n  [attr.tabindex]=\"tabIndex\"\n  [disabled]=\"disabled\"\n  role=\"tab\"\n  type=\"button\"\n  (click)=\"onClick()\"\n  (keydown)=\"onKeydown($event)\"\n>\n  <span class=\"ix-tab__icon\" *ngIf=\"hasIcon\">\n    <ng-container *ngIf=\"iconContent; else templateIcon\">\n      <ng-container *ngTemplateOutlet=\"iconContent\"></ng-container>\n    </ng-container>\n    <ng-template #templateIcon>\n      <ng-container *ngIf=\"iconTemplate; else stringIcon\">\n        <ng-container *ngTemplateOutlet=\"iconTemplate\"></ng-container>\n      </ng-container>\n    </ng-template>\n    <ng-template #stringIcon>\n      <span [innerHTML]=\"icon\"></span>\n    </ng-template>\n  </span>\n  <span class=\"ix-tab__label\">\n    {{ label }}\n    <ng-content></ng-content>\n  </span>\n</button>","import { Component, Input, TemplateRef, ViewChild, ElementRef, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'ix-tab-panel',\n  standalone: true,\n  imports: [CommonModule, A11yModule],\n  templateUrl: './ix-tab-panel.component.html',\n  styleUrl: './ix-tab-panel.component.scss'\n})\nexport class IxTabPanelComponent {\n  @Input() label = '';\n  @Input() lazyLoad = false;\n  @Input() testId?: string;\n\n  @ViewChild('content', { static: true }) content!: TemplateRef<any>;\n\n  // Internal properties set by parent IxTabsComponent\n  index = 0;\n  isActive = false;\n  hasBeenActive = false;\n\n  elementRef = inject(ElementRef<HTMLElement>);\n\n  get classes(): string {\n    const classes = ['ix-tab-panel'];\n    \n    if (this.isActive) {\n      classes.push('ix-tab-panel--active');\n    }\n    \n    if (!this.isActive) {\n      classes.push('ix-tab-panel--hidden');\n    }\n\n    return classes.join(' ');\n  }\n\n  get shouldRender(): boolean {\n    if (!this.lazyLoad) {\n      return true;\n    }\n    \n    // For lazy loading, only render if it's currently active or has been active before\n    return this.isActive || this.hasBeenActive;\n  }\n\n  onActivate() {\n    this.hasBeenActive = true;\n  }\n}","<div\n  [ngClass]=\"classes\"\n  [attr.data-testid]=\"testId\"\n  [attr.aria-hidden]=\"!isActive\"\n  [attr.aria-labelledby]=\"'tab-' + index\"\n  role=\"tabpanel\"\n  [attr.tabindex]=\"isActive ? 0 : -1\"\n>\n  <ng-container *ngIf=\"shouldRender\">\n    <div class=\"ix-tab-panel__content\">\n      <ng-content></ng-content>\n    </div>\n  </ng-container>\n</div>","import { Component, ContentChildren, QueryList, AfterContentInit, Input, Output, EventEmitter, ChangeDetectionStrategy, inject, ChangeDetectorRef, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor, A11yModule, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, HOME, END, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { IxTabComponent } from '../ix-tab/ix-tab.component';\nimport { IxTabPanelComponent } from '../ix-tab-panel/ix-tab-panel.component';\n\nexport interface TabChangeEvent {\n  index: number;\n  tab: IxTabComponent;\n  previousIndex: number;\n}\n\n@Component({\n  selector: 'ix-tabs',\n  standalone: true,\n  imports: [CommonModule, A11yModule, IxTabComponent, IxTabPanelComponent],\n  templateUrl: './ix-tabs.component.html',\n  styleUrl: './ix-tabs.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IxTabsComponent implements AfterContentInit, AfterViewInit {\n  @ContentChildren(IxTabComponent) tabs!: QueryList<IxTabComponent>;\n  @ContentChildren(IxTabPanelComponent) panels!: QueryList<IxTabPanelComponent>;\n  @ViewChild('tabHeader') tabHeader!: ElementRef<HTMLElement>;\n\n  @Input() selectedIndex = 0;\n  @Input() orientation: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() highlightPosition: 'left' | 'right' | 'top' | 'bottom' = 'bottom';\n\n  @Output() selectedIndexChange = new EventEmitter<number>();\n  @Output() tabChange = new EventEmitter<TabChangeEvent>();\n\n  highlightBarLeft = 0;\n  highlightBarWidth = 0;\n  highlightBarTop = 0;\n  highlightBarHeight = 0; // Start hidden\n  highlightBarVisible = false;\n\n  private focusMonitor = inject(FocusMonitor);\n  private liveAnnouncer = inject(LiveAnnouncer);\n  private cdr = inject(ChangeDetectorRef);\n\n  ngAfterContentInit() {\n    this.initializeTabs();\n    this.selectTab(this.selectedIndex);\n\n    // Listen for tab changes\n    this.tabs.changes.subscribe(() => {\n      this.initializeTabs();\n      this.updateHighlightBar();\n    });\n  }\n\n  ngAfterViewInit() {\n    // Wait for next tick to ensure DOM is fully rendered\n    setTimeout(() => {\n      this.updateHighlightBar();\n      this.highlightBarVisible = true;\n      this.cdr.detectChanges();\n    }, 0);\n  }\n\n\n  ngOnDestroy() {\n    this.tabs.forEach(tab => {\n      if (tab.elementRef) {\n        this.focusMonitor.stopMonitoring(tab.elementRef);\n      }\n    });\n  }\n\n  private initializeTabs() {\n    this.tabs.forEach((tab, index) => {\n      tab.index = index;\n      tab.isActive = index === this.selectedIndex;\n      tab.tabsComponent = this;\n\n      // Set up focus monitoring\n      if (tab.elementRef) {\n        this.focusMonitor.monitor(tab.elementRef)\n          .subscribe(origin => {\n            if (origin) {\n              console.log(`Tab ${index} focused via: ${origin}`);\n            }\n          });\n      }\n\n      // Set up click handlers\n      tab.selected.subscribe(() => {\n        if (!tab.disabled) {\n          this.selectTab(index);\n        }\n      });\n    });\n\n    this.panels.forEach((panel, index) => {\n      panel.index = index;\n      panel.isActive = index === this.selectedIndex;\n    });\n\n    // Trigger change detection to update DOM\n    this.cdr.detectChanges();\n  }\n\n  selectTab(index: number) {\n    if (index < 0 || index >= this.tabs.length) {\n      return;\n    }\n\n    const tab = this.tabs.get(index);\n    if (tab && tab.disabled) {\n      return;\n    }\n\n    const previousIndex = this.selectedIndex;\n    this.selectedIndex = index;\n\n    // Update tab states\n    this.tabs.forEach((tab, i) => {\n      tab.isActive = i === index;\n    });\n\n    // Update panel states\n    this.panels.forEach((panel, i) => {\n      panel.isActive = i === index;\n      if (i === index) {\n        panel.onActivate();\n      }\n    });\n\n    // Trigger change detection to update DOM\n    this.cdr.detectChanges();\n\n    // Update highlight bar\n    this.updateHighlightBar();\n\n    // Emit events\n    this.selectedIndexChange.emit(index);\n    if (tab) {\n      this.tabChange.emit({\n        index,\n        tab,\n        previousIndex\n      });\n\n    }\n  }\n\n  private updateHighlightBar() {\n    if (!this.tabHeader || !this.tabs || this.tabs.length === 0) {\n      return;\n    }\n\n    const activeTab = this.tabs.get(this.selectedIndex);\n    if (!activeTab || !activeTab.elementRef) {\n      return;\n    }\n\n    const tabElement = activeTab.elementRef.nativeElement;\n    const headerElement = this.tabHeader.nativeElement;\n    \n    // Get the position and dimensions of the active tab relative to the header\n    const tabRect = tabElement.getBoundingClientRect();\n    const headerRect = headerElement.getBoundingClientRect();\n    \n    if (this.orientation === 'vertical') {\n      // For vertical tabs, animate top position and height\n      this.highlightBarTop = tabRect.top - headerRect.top;\n      this.highlightBarHeight = tabRect.height;\n      // Position highlight bar based on highlightPosition\n      if (this.highlightPosition === 'left') {\n        this.highlightBarLeft = tabRect.left - headerRect.left;\n        this.highlightBarWidth = 3;\n      } else { // right\n        this.highlightBarLeft = (tabRect.right - headerRect.left) - 3;\n        this.highlightBarWidth = 3;\n      }\n    } else {\n      // For horizontal tabs, animate left position and width\n      this.highlightBarLeft = tabRect.left - headerRect.left;\n      this.highlightBarWidth = tabRect.width;\n      // Position highlight bar based on highlightPosition\n      if (this.highlightPosition === 'top') {\n        this.highlightBarTop = tabRect.top - headerRect.top;\n        this.highlightBarHeight = 2;\n      } else { // bottom\n        this.highlightBarTop = (tabRect.bottom - headerRect.top) - 2;\n        this.highlightBarHeight = 2;\n      }\n    }\n\n\n    // Trigger change detection to update the highlight bar position\n    this.cdr.detectChanges();\n  }\n\n  onKeydown(event: KeyboardEvent, currentIndex: number) {\n\n    let targetIndex = currentIndex;\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        if (this.orientation === 'horizontal') {\n          targetIndex = this.getPreviousEnabledTabIndex(currentIndex);\n        } else {\n          return; // No action for vertical tabs\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.orientation === 'horizontal') {\n          targetIndex = this.getNextEnabledTabIndex(currentIndex);\n        } else {\n          return; // No action for vertical tabs\n        }\n        break;\n      case UP_ARROW:\n        if (this.orientation === 'vertical') {\n          targetIndex = this.getPreviousEnabledTabIndex(currentIndex);\n        } else {\n          return; // No action for horizontal tabs\n        }\n        break;\n      case DOWN_ARROW:\n        if (this.orientation === 'vertical') {\n          targetIndex = this.getNextEnabledTabIndex(currentIndex);\n        } else {\n          return; // No action for horizontal tabs\n        }\n        break;\n      case HOME:\n        targetIndex = this.getFirstEnabledTabIndex();\n        break;\n      case END:\n        targetIndex = this.getLastEnabledTabIndex();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectTab(currentIndex);\n        event.preventDefault();\n        return;\n      default:\n        return;\n    }\n\n    if (targetIndex !== currentIndex) {\n      this.focusTab(targetIndex);\n      event.preventDefault();\n    }\n  }\n\n  private getPreviousEnabledTabIndex(currentIndex: number): number {\n    for (let i = currentIndex - 1; i >= 0; i--) {\n      if (!this.tabs.get(i)?.disabled) {\n        return i;\n      }\n    }\n    return this.getLastEnabledTabIndex();\n  }\n\n  private getNextEnabledTabIndex(currentIndex: number): number {\n    for (let i = currentIndex + 1; i < this.tabs.length; i++) {\n      if (!this.tabs.get(i)?.disabled) {\n        return i;\n      }\n    }\n    return this.getFirstEnabledTabIndex();\n  }\n\n  private getFirstEnabledTabIndex(): number {\n    for (let i = 0; i < this.tabs.length; i++) {\n      if (!this.tabs.get(i)?.disabled) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  private getLastEnabledTabIndex(): number {\n    for (let i = this.tabs.length - 1; i >= 0; i--) {\n      if (!this.tabs.get(i)?.disabled) {\n        return i;\n      }\n    }\n    return this.tabs.length - 1;\n  }\n\n  private focusTab(index: number) {\n    const tab = this.tabs.get(index);\n    if (tab && tab.elementRef) {\n      tab.elementRef.nativeElement.focus();\n    }\n  }\n\n\n  get classes(): string {\n    const classes = ['ix-tabs'];\n    \n    if (this.orientation === 'vertical') {\n      classes.push('ix-tabs--vertical');\n    } else {\n      classes.push('ix-tabs--horizontal');\n    }\n    \n    // Add highlight position class\n    classes.push(`ix-tabs--highlight-${this.highlightPosition}`);\n    \n    return classes.join(' ');\n  }\n}\n","<div [ngClass]=\"classes\" role=\"tablist\" [attr.aria-orientation]=\"orientation\">\n  <div class=\"ix-tabs__header\" #tabHeader>\n    <ng-content select=\"ix-tab\"></ng-content>\n    <div class=\"ix-tabs__highlight-bar\" \n         *ngIf=\"highlightBarVisible\"\n         [style.left.px]=\"highlightBarLeft\"\n         [style.width.px]=\"highlightBarWidth\"\n         [style.top.px]=\"highlightBarTop\"\n         [style.height.px]=\"highlightBarHeight\">\n    </div>\n  </div>\n  \n  <div class=\"ix-tabs__content\">\n    <ng-content select=\"ix-tab-panel\"></ng-content>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { PlatformType } from '../enums/modifier-keys.enum';\n\n@Component({\n  selector: 'ix-keyboard-shortcut',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-keyboard-shortcut.component.html',\n  styleUrls: ['./ix-keyboard-shortcut.component.scss'],\n})\nexport class IxKeyboardShortcutComponent implements OnInit, OnChanges {\n  @Input() shortcut: string = '';\n  @Input() platform: PlatformType = 'auto';\n  @Input() separator: string = '';\n\n  displayShortcut: string = '';\n\n  ngOnInit(): void {\n    this.displayShortcut = this.formatShortcut(this.shortcut);\n  }\n\n  ngOnChanges(): void {\n    this.displayShortcut = this.formatShortcut(this.shortcut);\n  }\n\n  private formatShortcut(shortcut: string): string {\n    if (!shortcut) return '';\n\n    const detectedPlatform = this.platform === 'auto' ? this.detectPlatform() : this.platform;\n    \n    // Convert Mac-style shortcuts to platform-appropriate format\n    if (detectedPlatform === 'windows' || detectedPlatform === 'linux') {\n      return this.convertToWindows(shortcut);\n    }\n    \n    // Return Mac format by default\n    return shortcut;\n  }\n\n  private detectPlatform(): 'mac' | 'windows' | 'linux' {\n    const userAgent = navigator.userAgent.toLowerCase();\n    \n    if (userAgent.includes('mac')) {\n      return 'mac';\n    } else if (userAgent.includes('win')) {\n      return 'windows';\n    } else if (userAgent.includes('linux')) {\n      return 'linux';\n    }\n    \n    return 'mac'; // Default to Mac\n  }\n\n  private convertToWindows(macShortcut: string): string {\n    return macShortcut\n      .replace(/⌘/g, 'Ctrl')\n      .replace(/⌥/g, 'Alt')\n      .replace(/⇧/g, 'Shift')\n      .replace(/⌃/g, 'Ctrl')\n      // Add + between modifiers if not present\n      .replace(/(?<=[a-zA-Z])(?=[A-Z])/g, '+')\n      .replace(/(?<=[a-zA-Z])(?=[a-z])/g, '+');\n  }\n\n\n  get shortcutKeys(): string[] {\n    if (!this.displayShortcut) return [];\n    \n    // Split by common separators\n    const separators = ['+', ' ', ''];\n    let keys: string[] = [];\n    \n    // For Mac-style shortcuts without separators\n    if (this.displayShortcut.includes('⌘') || this.displayShortcut.includes('⌥') || this.displayShortcut.includes('⇧')) {\n      const macSymbols = ['⌘', '⌥', '⇧', '⌃'];\n      let remaining = this.displayShortcut;\n      \n      for (const symbol of macSymbols) {\n        if (remaining.includes(symbol)) {\n          keys.push(symbol);\n          remaining = remaining.replace(symbol, '');\n        }\n      }\n      \n      // Add remaining characters as individual keys\n      if (remaining) {\n        keys.push(remaining);\n      }\n    } else {\n      // For Windows/Linux style shortcuts with + separators\n      keys = this.displayShortcut.split('+');\n    }\n    \n    return keys.filter(key => key.trim() !== '');\n  }\n}","<span class=\"ix-keyboard-shortcut\" [attr.aria-label]=\"'Keyboard shortcut: ' + displayShortcut\">\n  <ng-container *ngFor=\"let key of shortcutKeys; let last = last\">\n    <kbd class=\"ix-key\">{{ key }}</kbd>\n    <span *ngIf=\"!last\" class=\"ix-key-separator\">{{ separator || '+' }}</span>\n  </ng-container>\n</span>","import { CommonModule } from '@angular/common';\nimport { Component, Input, ContentChild, AfterContentInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'ix-form-field',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-form-field.component.html',\n  styleUrls: ['./ix-form-field.component.scss']\n})\nexport class IxFormFieldComponent implements AfterContentInit {\n  @Input() label = '';\n  @Input() hint = '';\n  @Input() required = false;\n  @Input() testId = '';\n\n  @ContentChild(NgControl, { static: false }) control?: NgControl;\n\n  protected hasError = false;\n  protected errorMessage = '';\n\n  ngAfterContentInit(): void {\n    if (this.control) {\n      // Listen for control status changes\n      this.control.statusChanges?.subscribe(() => {\n        this.updateErrorState();\n      });\n      \n      // Initial error state check\n      this.updateErrorState();\n    }\n  }\n\n  private updateErrorState(): void {\n    if (this.control) {\n      this.hasError = !!(this.control.invalid && (this.control.dirty || this.control.touched));\n      this.errorMessage = this.getErrorMessage();\n    }\n  }\n\n  private getErrorMessage(): string {\n    if (!this.control?.errors) return '';\n\n    const errors = this.control.errors;\n    \n    // Return the first error message found\n    if (errors['required']) return 'This field is required';\n    if (errors['email']) return 'Please enter a valid email address';\n    if (errors['minlength']) return `Minimum length is ${errors['minlength'].requiredLength}`;\n    if (errors['maxlength']) return `Maximum length is ${errors['maxlength'].requiredLength}`;\n    if (errors['pattern']) return 'Please enter a valid format';\n    if (errors['min']) return `Minimum value is ${errors['min'].min}`;\n    if (errors['max']) return `Maximum value is ${errors['max'].max}`;\n\n    // Return custom error message if available\n    return Object.keys(errors)[0] || 'Invalid input';\n  }\n\n  get showError(): boolean {\n    return this.hasError && !!this.errorMessage;\n  }\n\n  get showHint(): boolean {\n    return !!this.hint && !this.showError;\n  }\n}","<div class=\"ix-form-field\" [attr.data-testid]=\"testId\">\n  <!-- Label -->\n  <label *ngIf=\"label\" class=\"ix-form-field-label\" [class.required]=\"required\">\n    {{ label }}\n    <span *ngIf=\"required\" class=\"required-asterisk\" aria-label=\"required\">*</span>\n  </label>\n\n  <!-- Form Control Content -->\n  <div class=\"ix-form-field-wrapper\">\n    <ng-content></ng-content>\n  </div>\n\n  <!-- Hint or Error Message -->\n  <div class=\"ix-form-field-subscript\">\n    <div \n      *ngIf=\"showError\" \n      class=\"ix-form-field-error\" \n      role=\"alert\"\n      aria-live=\"polite\">\n      {{ errorMessage }}\n    </div>\n    <div \n      *ngIf=\"showHint\" \n      class=\"ix-form-field-hint\">\n      {{ hint }}\n    </div>\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter, forwardRef, HostListener, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport interface IxSelectOption {\n  value: any;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface IxSelectOptionGroup {\n  label: string;\n  options: IxSelectOption[];\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'ix-select',\n  standalone: true,\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxSelectComponent),\n      multi: true\n    }\n  ],\n  templateUrl: './ix-select.component.html',\n  styleUrls: ['./ix-select.component.scss']\n})\nexport class IxSelectComponent implements ControlValueAccessor {\n  @Input() options: IxSelectOption[] = [];\n  @Input() optionGroups: IxSelectOptionGroup[] = [];\n  @Input() placeholder = 'Select an option';\n  @Input() disabled = false;\n  @Input() testId = '';\n\n  @Output() selectionChange = new EventEmitter<any>();\n\n  protected isOpen = false;\n  public selectedValue: any = null;\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // ControlValueAccessor implementation\n  writeValue(value: any): void {\n    this.selectedValue = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Component methods\n  toggleDropdown(): void {\n    if (this.disabled) return;\n    this.isOpen = !this.isOpen;\n    if (!this.isOpen) {\n      this.onTouched();\n    }\n  }\n\n  closeDropdown(): void {\n    this.isOpen = false;\n    this.onTouched();\n  }\n\n  onOptionClick(option: IxSelectOption): void {\n    this.selectOption(option);\n  }\n\n  selectOption(option: IxSelectOption): void {\n    if (option.disabled) return;\n\n    this.selectedValue = option.value;\n    this.onChange(option.value);\n    this.selectionChange.emit(option.value);\n    this.closeDropdown();\n    this.cdr.markForCheck(); // Trigger change detection\n  }\n\n  isSelected(option: IxSelectOption): boolean {\n    return this.compareValues(this.selectedValue, option.value);\n  }\n\n  getDisplayText(): string {\n    if (this.selectedValue === null || this.selectedValue === undefined) {\n      return this.placeholder;\n    }\n    const option = this.findOptionByValue(this.selectedValue);\n    return option ? option.label : this.selectedValue;\n  }\n\n  private findOptionByValue(value: any): IxSelectOption | undefined {\n    // Search in regular options first\n    const regularOption = this.options.find(opt => this.compareValues(opt.value, value));\n    if (regularOption) return regularOption;\n\n    // Search in option groups\n    for (const group of this.optionGroups) {\n      const groupOption = group.options.find(opt => this.compareValues(opt.value, value));\n      if (groupOption) return groupOption;\n    }\n\n    return undefined;\n  }\n\n  hasAnyOptions(): boolean {\n    return this.options.length > 0 || this.optionGroups.length > 0;\n  }\n\n  private compareValues(a: any, b: any): boolean {\n    if (a === b) return true;\n    if (typeof a === 'object' && typeof b === 'object' && a !== null && b !== null) {\n      return JSON.stringify(a) === JSON.stringify(b);\n    }\n    return false;\n  }\n\n  // Click outside to close\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: Event): void {\n    if (!this.elementRef.nativeElement.contains(event.target as Node)) {\n      this.closeDropdown();\n    }\n  }\n\n  // Keyboard navigation\n  onKeydown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        if (!this.isOpen) {\n          this.toggleDropdown();\n          event.preventDefault();\n        }\n        break;\n      case 'Escape':\n        if (this.isOpen) {\n          this.closeDropdown();\n          event.preventDefault();\n        }\n        break;\n      case 'ArrowDown':\n        if (!this.isOpen) {\n          this.toggleDropdown();\n        }\n        event.preventDefault();\n        break;\n    }\n  }\n}\n","<div class=\"ix-select-container\" [attr.data-testid]=\"testId\">\n  <!-- Select Trigger -->\n  <div \n    class=\"ix-select-trigger\"\n    [class.disabled]=\"disabled\"\n    [class.open]=\"isOpen\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-haspopup]=\"true\"\n    [attr.aria-label]=\"placeholder\"\n    role=\"combobox\"\n    tabindex=\"0\"\n    (click)=\"toggleDropdown()\"\n    (keydown)=\"onKeydown($event)\">\n    \n    <!-- Display Text -->\n    <span \n      class=\"ix-select-text\"\n      [class.placeholder]=\"selectedValue === null || selectedValue === undefined\">\n      {{ getDisplayText() }}\n    </span>\n\n    <!-- Dropdown Arrow -->\n    <div class=\"ix-select-arrow\" [class.open]=\"isOpen\">\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polyline points=\"6,9 12,15 18,9\"></polyline>\n      </svg>\n    </div>\n  </div>\n\n  <!-- Dropdown Menu -->\n  <div \n    *ngIf=\"isOpen\" \n    class=\"ix-select-dropdown\"\n    role=\"listbox\">\n    \n    <!-- Options List -->\n    <div class=\"ix-select-options\">\n      <!-- Regular Options -->\n      <div \n        *ngFor=\"let option of options\"\n        class=\"ix-select-option\"\n        [class.selected]=\"isSelected(option)\"\n        [class.disabled]=\"option.disabled\"\n        [attr.aria-selected]=\"isSelected(option)\"\n        [attr.aria-disabled]=\"option.disabled\"\n        role=\"option\"\n        (mousedown)=\"$event.preventDefault()\"\n        (click)=\"onOptionClick(option)\">\n        \n        {{ option.label }}\n      </div>\n\n      <!-- Option Groups -->\n      <ng-container *ngFor=\"let group of optionGroups; let isFirst = first\">\n        <!-- Group Separator (not shown before first group if we have regular options) -->\n        <div \n          *ngIf=\"!isFirst || options.length > 0\"\n          class=\"ix-select-separator\"\n          role=\"separator\">\n        </div>\n\n        <!-- Group Label -->\n        <div \n          class=\"ix-select-group-label\"\n          [class.disabled]=\"group.disabled\">\n          {{ group.label }}\n        </div>\n\n        <!-- Group Options -->\n        <div \n          *ngFor=\"let option of group.options\"\n          class=\"ix-select-option\"\n          [class.selected]=\"isSelected(option)\"\n          [class.disabled]=\"option.disabled || group.disabled\"\n          [attr.aria-selected]=\"isSelected(option)\"\n          [attr.aria-disabled]=\"option.disabled || group.disabled\"\n          role=\"option\"\n          (mousedown)=\"$event.preventDefault()\"\n          (click)=\"onOptionClick(option)\">\n          \n          {{ option.label }}\n        </div>\n      </ng-container>\n\n      <!-- No Options Message -->\n      <div \n        *ngIf=\"!hasAnyOptions()\" \n        class=\"ix-select-no-options\">\n        No options available\n      </div>\n    </div>\n  </div>\n</div>","/**\n * Marks an icon name for inclusion in the sprite generation.\n *\n * This is an identity function that simply returns the icon name unchanged.\n * Its purpose is to provide a marker that the build scripts can detect when\n * scanning for icons that need to be included in the sprite.\n *\n * Use this when icon names are computed dynamically or come from variables,\n * to ensure they're included in the sprite at build time.\n *\n * @example\n * ```typescript\n * // Static icon name - automatically detected from template\n * <ix-icon name=\"folder\"></ix-icon>\n *\n * // Dynamic icon name - needs iconMarker() to be detected\n * const iconName = condition ? iconMarker('edit') : iconMarker('delete');\n * <ix-icon [name]=\"iconName\"></ix-icon>\n *\n * // Array of dynamic icons\n * const actions = [\n *   { name: 'Save', icon: iconMarker('save') },\n *   { name: 'Cancel', icon: iconMarker('close') }\n * ];\n * ```\n *\n * @param iconName - The icon name to mark for sprite inclusion\n * @returns The same icon name (identity function)\n */\nexport function iconMarker(iconName: string): string {\n  return iconName;\n}\n","/**\n * Lucide Icons Integration Helper\n * \n * This helper provides easy integration with Lucide icons.\n * Usage:\n * \n * ```typescript\n * import { setupLucideIntegration } from 'truenas-ui';\n * import * as LucideIcons from 'lucide';\n * \n * // In your app.module.ts or main.ts\n * setupLucideIntegration(LucideIcons);\n * \n * // Now you can use lucide icons in templates:\n * // <ix-icon name=\"lucide:home\"></ix-icon>\n * // <ix-icon name=\"lucide:user-circle\"></ix-icon>\n * ```\n */\n\nimport { inject } from '@angular/core';\nimport { IxIconRegistryService, IconLibrary } from '../ix-icon-registry.service';\n\nexport interface LucideIconOptions {\n  size?: number;\n  color?: string;\n  strokeWidth?: number;\n  fill?: string;\n  stroke?: string;\n}\n\n/**\n * Set up Lucide icons integration with the icon registry\n * \n * @param lucideIcons - The Lucide icons object (import * as LucideIcons from 'lucide')\n * @param defaultOptions - Default options for all Lucide icons\n * \n * @example\n * ```typescript\n * import * as LucideIcons from 'lucide';\n * import { setupLucideIntegration } from 'truenas-ui';\n * \n * setupLucideIntegration(LucideIcons, {\n *   size: 24,\n *   strokeWidth: 2,\n *   color: 'currentColor'\n * });\n * ```\n */\nexport function setupLucideIntegration(\n  lucideIcons: any,\n  defaultOptions: LucideIconOptions = {}\n): void {\n  const registry = inject(IxIconRegistryService);\n  \n  const lucideLibrary: IconLibrary = {\n    name: 'lucide',\n    resolver: (iconName: string, options: LucideIconOptions = {}) => {\n      // Convert kebab-case to PascalCase (home-icon -> HomeIcon)\n      const pascalCase = iconName\n        .split('-')\n        .map(part => part.charAt(0).toUpperCase() + part.slice(1))\n        .join('');\n      \n      const iconFunction = lucideIcons[pascalCase];\n      \n      if (iconFunction && typeof iconFunction === 'function') {\n        try {\n          // Merge default options with provided options\n          const mergedOptions = {\n            size: 24,\n            color: 'currentColor',\n            strokeWidth: 2,\n            ...defaultOptions,\n            ...options\n          };\n          \n          // Call the Lucide icon function to get SVG element\n          const svgElement = iconFunction(mergedOptions);\n          \n          if (svgElement && svgElement.outerHTML) {\n            return svgElement.outerHTML;\n          }\n        } catch (error) {\n          console.warn(`Failed to render Lucide icon '${iconName}':`, error);\n        }\n      }\n      \n      return null;\n    },\n    defaultOptions\n  };\n  \n  registry.registerLibrary(lucideLibrary);\n}\n\n/**\n * Alternative setup function that allows manual registration\n * Use this if you want more control over which icons are available\n * \n * @example\n * ```typescript\n * import { Home, User, Settings } from 'lucide';\n * import { createLucideLibrary } from 'truenas-ui';\n * \n * const lucideLibrary = createLucideLibrary({\n *   home: Home,\n *   user: User,\n *   settings: Settings\n * });\n * \n * // Register manually\n * iconRegistry.registerLibrary(lucideLibrary);\n * ```\n */\nexport function createLucideLibrary(\n  icons: Record<string, any>,\n  defaultOptions: LucideIconOptions = {}\n): IconLibrary {\n  return {\n    name: 'lucide',\n    resolver: (iconName: string, options: LucideIconOptions = {}) => {\n      const iconFunction = icons[iconName];\n      \n      if (iconFunction && typeof iconFunction === 'function') {\n        try {\n          const mergedOptions = {\n            size: 24,\n            color: 'currentColor',\n            strokeWidth: 2,\n            ...defaultOptions,\n            ...options\n          };\n          \n          const svgElement = iconFunction(mergedOptions);\n          \n          if (svgElement && svgElement.outerHTML) {\n            return svgElement.outerHTML;\n          }\n        } catch (error) {\n          console.warn(`Failed to render Lucide icon '${iconName}':`, error);\n        }\n      }\n      \n      return null;\n    },\n    defaultOptions\n  };\n}\n\n/**\n * Register common Lucide icons individually\n * Useful when you only want specific icons to reduce bundle size\n * \n * @example\n * ```typescript\n * import { Home, User, Settings, Heart, Star } from 'lucide';\n * import { registerLucideIcons } from 'truenas-ui';\n * \n * registerLucideIcons({\n *   home: Home,\n *   user: User,\n *   settings: Settings,\n *   heart: Heart,\n *   star: Star\n * });\n * ```\n */\nexport function registerLucideIcons(icons: Record<string, any>): void {\n  const registry = inject(IxIconRegistryService);\n  \n  Object.entries(icons).forEach(([name, iconFunction]) => {\n    if (typeof iconFunction === 'function') {\n      try {\n        const svgElement = iconFunction({\n          size: 24,\n          color: 'currentColor',\n          strokeWidth: 2\n        });\n        \n        if (svgElement && svgElement.outerHTML) {\n          registry.registerIcon(`lucide-${name}`, svgElement.outerHTML);\n        }\n      } catch (error) {\n        console.warn(`Failed to register Lucide icon '${name}':`, error);\n      }\n    }\n  });\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IxIconRegistryService } from '../ix-icon/ix-icon-registry.service';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * Service for loading and registering TrueNAS custom icons\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TruenasIconsService {\n  private iconsLoaded = false;\n  private iconBasePath = 'truenas-ui/src/assets/icons/';\n\n  constructor(\n    private http: HttpClient,\n    private iconRegistry: IxIconRegistryService\n  ) {}\n\n  /**\n   * Load and register all TrueNAS custom icons\n   * Call this in your app initialization (APP_INITIALIZER or main component)\n   *\n   * @param basePath Optional custom base path for icons (defaults to 'truenas-ui/src/assets/icons/')\n   * @returns Promise that resolves when all icons are loaded\n   */\n  async loadIcons(basePath?: string): Promise<void> {\n    if (this.iconsLoaded) {\n      return;\n    }\n\n    if (basePath) {\n      this.iconBasePath = basePath;\n    }\n\n    try {\n      // List of TrueNAS custom icons to load\n      const iconFiles = [\n        { name: 'tn-dataset', file: 'dataset.svg' }\n        // Add more icons here as needed\n      ];\n\n      // Load all icons in parallel\n      const loadPromises = iconFiles.map(async ({ name, file }) => {\n        try {\n          const svgContent = await firstValueFrom(\n            this.http.get(`${this.iconBasePath}${file}`, { responseType: 'text' })\n          );\n          this.iconRegistry.registerIcon(name, svgContent);\n        } catch (error) {\n          console.warn(`Failed to load TrueNAS icon '${name}' from ${file}:`, error);\n        }\n      });\n\n      await Promise.all(loadPromises);\n      this.iconsLoaded = true;\n    } catch (error) {\n      console.error('Failed to load TrueNAS custom icons:', error);\n    }\n  }\n\n  /**\n   * Register a single custom icon from SVG content\n   * Use this for inline registration without HTTP\n   */\n  registerIcon(name: string, svgContent: string): void {\n    this.iconRegistry.registerIcon(name, svgContent);\n  }\n\n  /**\n   * Check if icons have been loaded\n   */\n  isLoaded(): boolean {\n    return this.iconsLoaded;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-list.component.html',\n  styleUrl: './ix-list.component.scss',\n  host: {\n    'class': 'ix-list',\n    '[class.ix-list--dense]': 'dense',\n    '[class.ix-list--disabled]': 'disabled',\n    'role': 'list'\n  }\n})\nexport class IxListComponent {\n  @Input() dense = false;\n  @Input() disabled = false;\n}","<ng-content></ng-content>","import { Component, Input, Output, EventEmitter, ElementRef, AfterContentInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-list-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-list-item.component.html',\n  styleUrl: './ix-list-item.component.scss',\n  host: {\n    'class': 'ix-list-item',\n    '[class.ix-list-item--disabled]': 'disabled',\n    '[class.ix-list-item--clickable]': 'clickable',\n    '[class.ix-list-item--two-line]': 'hasSecondaryText',\n    '[class.ix-list-item--three-line]': 'hasThirdText',\n    'role': 'listitem',\n    '(click)': 'onClick($event)'\n  }\n})\nexport class IxListItemComponent implements AfterContentInit {\n  @Input() disabled = false;\n  @Input() clickable = false;\n\n  @Output() itemClick = new EventEmitter<Event>();\n\n  hasLeadingContent = false;\n  hasSecondaryTextContent = false;\n  hasTrailingContent = false;\n  hasPrimaryTextDirective = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterContentInit(): void {\n    this.checkContentProjection();\n  }\n\n  private checkContentProjection(): void {\n    const element = this.elementRef.nativeElement;\n    \n    // Check for leading content (icons/avatars)\n    this.hasLeadingContent = !!(\n      element.querySelector('[ixListIcon]') || \n      element.querySelector('[ixListAvatar]')\n    );\n\n    // Check for secondary text content\n    this.hasSecondaryTextContent = !!(\n      element.querySelector('[ixListItemLine]') ||\n      element.querySelector('[ixListItemSecondary]')\n    );\n\n    // Check for trailing content\n    this.hasTrailingContent = !!element.querySelector('[ixListItemTrailing]');\n\n    // Check for primary text directive\n    this.hasPrimaryTextDirective = !!(\n      element.querySelector('[ixListItemTitle]') ||\n      element.querySelector('[ixListItemPrimary]')\n    );\n  }\n\n  get hasSecondaryText(): boolean {\n    return this.hasSecondaryTextContent;\n  }\n\n  get hasThirdText(): boolean {\n    // For now, we'll consider third line as having more than one secondary line\n    const element = this.elementRef.nativeElement;\n    const secondaryElements = element.querySelectorAll('[ixListItemLine], [ixListItemSecondary]');\n    return secondaryElements.length > 1;\n  }\n\n  onClick(event: Event): void {\n    if (!this.disabled && this.clickable) {\n      this.itemClick.emit(event);\n    }\n  }\n}","<div class=\"ix-list-item__content\">\n  <!-- Leading icon/avatar slot -->\n  <div class=\"ix-list-item__leading\" *ngIf=\"hasLeadingContent\">\n    <ng-content select=\"[ixListIcon], [ixListAvatar]\"></ng-content>\n  </div>\n\n  <!-- Text content -->\n  <div class=\"ix-list-item__text\">\n    <!-- Primary text -->\n    <div class=\"ix-list-item__primary-text\">\n      <ng-content select=\"[ixListItemTitle], [ixListItemPrimary]\"></ng-content>\n      <ng-content *ngIf=\"!hasPrimaryTextDirective\"></ng-content>\n    </div>\n    \n    <!-- Secondary text -->\n    <div class=\"ix-list-item__secondary-text\" *ngIf=\"hasSecondaryTextContent\">\n      <ng-content select=\"[ixListItemLine], [ixListItemSecondary]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Trailing content slot -->\n  <div class=\"ix-list-item__trailing\" *ngIf=\"hasTrailingContent\">\n    <ng-content select=\"[ixListItemTrailing]\"></ng-content>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-list-subheader',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-list-subheader.component.html',\n  styleUrl: './ix-list-subheader.component.scss',\n  host: {\n    'class': 'ix-list-subheader',\n    '[class.ix-list-subheader--inset]': 'inset',\n    'role': 'heading',\n    'aria-level': '3'\n  }\n})\nexport class IxListSubheaderComponent {\n  @Input() inset = false;\n}","<ng-content></ng-content>","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ixListIcon]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-icon'\n  }\n})\nexport class IxListIconDirective {}\n\n@Directive({\n  selector: '[ixListAvatar]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-avatar'\n  }\n})\nexport class IxListAvatarDirective {}\n\n@Directive({\n  selector: '[ixListItemTitle]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-item-title'\n  }\n})\nexport class IxListItemTitleDirective {}\n\n@Directive({\n  selector: '[ixListItemLine]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-item-line'\n  }\n})\nexport class IxListItemLineDirective {}\n\n@Directive({\n  selector: '[ixListItemPrimary]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-item-primary'\n  }\n})\nexport class IxListItemPrimaryDirective {}\n\n@Directive({\n  selector: '[ixListItemSecondary]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-item-secondary'\n  }\n})\nexport class IxListItemSecondaryDirective {}\n\n@Directive({\n  selector: '[ixListItemTrailing]',\n  standalone: true,\n  host: {\n    'class': 'ix-list-item-trailing'\n  }\n})\nexport class IxListItemTrailingDirective {}\n\n@Directive({\n  selector: 'ix-divider, [ixDivider]',\n  standalone: true,\n  host: {\n    'class': 'ix-divider',\n    'role': 'separator'\n  }\n})\nexport class IxDividerDirective {}","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-divider',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-divider.component.html',\n  styleUrl: './ix-divider.component.scss',\n  host: {\n    'class': 'ix-divider',\n    '[class.ix-divider--vertical]': 'vertical',\n    '[class.ix-divider--inset]': 'inset',\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"'\n  }\n})\nexport class IxDividerComponent {\n  @Input() vertical = false;\n  @Input() inset = false;\n}","","import { Component, Input, Output, EventEmitter, HostListener, ElementRef, AfterContentInit, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IxCheckboxComponent } from '../ix-checkbox/ix-checkbox.component';\n\n@Component({\n  selector: 'ix-list-option',\n  standalone: true,\n  imports: [CommonModule, IxCheckboxComponent],\n  templateUrl: './ix-list-option.component.html',\n  styleUrl: './ix-list-option.component.scss',\n  host: {\n    'class': 'ix-list-option',\n    '[class.ix-list-option--selected]': 'selected',\n    '[class.ix-list-option--disabled]': 'disabled',\n    'role': 'option',\n    '[attr.aria-selected]': 'selected',\n    '[attr.aria-disabled]': 'disabled'\n  }\n})\nexport class IxListOptionComponent implements AfterContentInit {\n  @Input() value: any;\n  @Input() selected = false;\n  @Input() disabled = false;\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  @Output() selectionChange = new EventEmitter<boolean>();\n\n  // Reference to parent selection list (set by parent)\n  selectionList?: any;\n\n  hasLeadingContent = false;\n  hasSecondaryTextContent = false;\n  hasPrimaryTextDirective = false;\n\n  constructor(private elementRef: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this.checkContentProjection();\n  }\n\n  private checkContentProjection(): void {\n    const element = this.elementRef.nativeElement;\n    \n    // Check for leading content (icons/avatars)\n    this.hasLeadingContent = !!(\n      element.querySelector('[ixListIcon]') || \n      element.querySelector('[ixListAvatar]')\n    );\n\n    // Check for secondary text content\n    this.hasSecondaryTextContent = !!(\n      element.querySelector('[ixListItemLine]') ||\n      element.querySelector('[ixListItemSecondary]')\n    );\n\n    // Check for primary text directive\n    this.hasPrimaryTextDirective = !!(\n      element.querySelector('[ixListItemTitle]') ||\n      element.querySelector('[ixListItemPrimary]')\n    );\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: Event): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  @HostListener('keydown.enter', ['$event'])\n  onKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    this.toggle();\n  }\n\n  toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.selected = !this.selected;\n    this.cdr.detectChanges();\n    this.selectionChange.emit(this.selected);\n\n    // Notify parent selection list\n    if (this.selectionList) {\n      this.selectionList.onOptionSelectionChange();\n    }\n  }\n}","<div class=\"ix-list-option__content\">\n  <!-- Leading content (icons, avatars) -->\n  <div class=\"ix-list-option__leading\" *ngIf=\"hasLeadingContent\">\n    <ng-content select=\"[ixListIcon], [ixListAvatar]\"></ng-content>\n  </div>\n\n  <!-- Text content -->\n  <div class=\"ix-list-option__text\">\n    <div class=\"ix-list-option__primary-text\">\n      <ng-content select=\"[ixListItemTitle], [ixListItemPrimary]\"></ng-content>\n      <ng-content *ngIf=\"!hasPrimaryTextDirective\"></ng-content>\n    </div>\n    \n    <div class=\"ix-list-option__secondary-text\" *ngIf=\"hasSecondaryTextContent\">\n      <ng-content select=\"[ixListItemLine], [ixListItemSecondary]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Checkbox on the right -->\n  <div class=\"ix-list-option__checkbox\">\n    <ix-checkbox \n      [checked]=\"selected\"\n      [disabled]=\"disabled\"\n      [hideLabel]=\"true\"\n      (click)=\"$event.stopPropagation()\"\n      tabindex=\"-1\">\n    </ix-checkbox>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, AfterContentInit, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IxListOptionComponent } from '../ix-list-option/ix-list-option.component';\n\nexport interface IxSelectionChange {\n  source: IxSelectionListComponent;\n  options: IxListOptionComponent[];\n}\n\n@Component({\n  selector: 'ix-selection-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-selection-list.component.html',\n  styleUrl: './ix-selection-list.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxSelectionListComponent),\n      multi: true\n    }\n  ],\n  host: {\n    'class': 'ix-selection-list',\n    '[class.ix-selection-list--dense]': 'dense',\n    '[class.ix-selection-list--disabled]': 'disabled',\n    'role': 'listbox',\n    '[attr.aria-multiselectable]': 'multiple'\n  }\n})\nexport class IxSelectionListComponent implements AfterContentInit, ControlValueAccessor {\n  @Input() dense = false;\n  @Input() disabled = false;\n  @Input() multiple = true;\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  @Output() selectionChange = new EventEmitter<IxSelectionChange>();\n\n  @ContentChildren(forwardRef(() => IxListOptionComponent), { descendants: true })\n  options!: QueryList<IxListOptionComponent>;\n\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  ngAfterContentInit(): void {\n    this.options.forEach(option => {\n      option.selectionList = this;\n      option.color = this.color;\n    });\n\n    this.options.changes.subscribe(() => {\n      this.options.forEach(option => {\n        option.selectionList = this;\n        option.color = this.color;\n      });\n    });\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: any[]): void {\n    if (value && this.options) {\n      this.options.forEach(option => {\n        option.selected = value.includes(option.value);\n      });\n    }\n  }\n\n  registerOnChange(fn: (value: any[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (this.options) {\n      this.options.forEach(option => {\n        option.disabled = isDisabled;\n      });\n    }\n  }\n\n  onOptionSelectionChange(): void {\n    this.onTouched();\n    const selectedValues = this.options\n      .filter(option => option.selected)\n      .map(option => option.value);\n    \n    this.onChange(selectedValues);\n    \n    this.selectionChange.emit({\n      source: this,\n      options: this.options.filter(option => option.selected)\n    });\n  }\n\n  get selectedOptions(): IxListOptionComponent[] {\n    return this.options ? this.options.filter(option => option.selected) : [];\n  }\n}","<ng-content></ng-content>","import { Directive, Input, TemplateRef, ContentChild } from '@angular/core';\n\n@Directive({\n  selector: '[ixHeaderCellDef]',\n  standalone: true\n})\nexport class IxHeaderCellDefDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n  selector: '[ixCellDef]',\n  standalone: true\n})\nexport class IxCellDefDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({\n  selector: '[ixColumnDef]',\n  standalone: true,\n  exportAs: 'ixColumnDef'\n})\nexport class IxTableColumnDirective {\n  @Input('ixColumnDef') name!: string;\n\n  @ContentChild(IxHeaderCellDefDirective, { read: TemplateRef })\n  headerTemplate?: TemplateRef<any>;\n\n  @ContentChild(IxCellDefDirective, { read: TemplateRef })\n  cellTemplate?: TemplateRef<any>;\n}","import { Component, Input, ContentChildren, QueryList, AfterContentInit, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IxTableColumnDirective } from '../ix-table-column/ix-table-column.directive';\n\nexport interface IxTableDataSource<T = any> {\n  data: T[];\n  connect?(): T[];\n  disconnect?(): void;\n}\n\n@Component({\n  selector: 'ix-table',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-table.component.html',\n  styleUrl: './ix-table.component.scss',\n  host: {\n    'class': 'ix-table'\n  }\n})\nexport class IxTableComponent implements AfterContentInit {\n  @Input() dataSource: IxTableDataSource | any[] = [];\n  @Input() displayedColumns: string[] = [];\n\n  @ContentChildren(IxTableColumnDirective) columnDefs!: QueryList<IxTableColumnDirective>;\n\n  private columnDefMap = new Map<string, IxTableColumnDirective>();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this.processColumnDefs();\n    this.columnDefs.changes.subscribe(() => {\n      this.processColumnDefs();\n    });\n  }\n\n  private processColumnDefs(): void {\n    this.columnDefMap.clear();\n    this.columnDefs.forEach(columnDef => {\n      if (columnDef.name) {\n        this.columnDefMap.set(columnDef.name, columnDef);\n      }\n    });\n    this.cdr.detectChanges();\n  }\n\n  get data(): any[] {\n    if (Array.isArray(this.dataSource)) {\n      return this.dataSource;\n    }\n    return this.dataSource?.data || this.dataSource?.connect?.() || [];\n  }\n\n  getColumnDef(columnName: string): IxTableColumnDirective | undefined {\n    return this.columnDefMap.get(columnName);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}","<table class=\"ix-table__table\">\n  <!-- Header Row -->\n  <thead class=\"ix-table__header\">\n    <tr class=\"ix-table__header-row\">\n      <th \n        *ngFor=\"let column of displayedColumns\" \n        class=\"ix-table__header-cell\"\n        [attr.data-column]=\"column\">\n        <ng-container \n          *ngIf=\"getColumnDef(column)?.headerTemplate\"\n          [ngTemplateOutlet]=\"getColumnDef(column)?.headerTemplate || null\">\n        </ng-container>\n        <span *ngIf=\"!getColumnDef(column)?.headerTemplate\">{{ column }}</span>\n      </th>\n    </tr>\n  </thead>\n\n  <!-- Data Rows -->\n  <tbody class=\"ix-table__body\">\n    <tr \n      *ngFor=\"let row of data; trackBy: trackByIndex\" \n      class=\"ix-table__row\">\n      <td \n        *ngFor=\"let column of displayedColumns\" \n        class=\"ix-table__cell\"\n        [attr.data-column]=\"column\">\n        <ng-container \n          *ngIf=\"getColumnDef(column)?.cellTemplate\"\n          [ngTemplateOutlet]=\"getColumnDef(column)?.cellTemplate || null\"\n          [ngTemplateOutletContext]=\"{ $implicit: row, column: column }\">\n        </ng-container>\n        <span *ngIf=\"!getColumnDef(column)?.cellTemplate\">{{ row[column] }}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, IterableDiffers, ViewContainerRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTree, CdkTreeModule } from '@angular/cdk/tree';\n\n// Re-export CDK Tree types for convenience\nexport { FlatTreeControl } from '@angular/cdk/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nexport { ArrayDataSource } from '@angular/cdk/collections';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Flat node with expandable and level information */\nexport interface IxFlatTreeNode<T = any> {\n  data: T;\n  expandable: boolean;\n  level: number;\n}\n\n/**\n * Tree flattener to convert normal type of node to node with children & level information.\n */\nexport class IxTreeFlattener<T, F> {\n  constructor(\n    public transformFunction: (node: T, level: number) => F,\n    public getLevel: (node: F) => number,\n    public isExpandable: (node: F) => boolean,\n    public getChildren: (node: T) => T[] | null | undefined\n  ) {}\n\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes));\n    return resultNodes;\n  }\n\n  private _flattenNode(node: T, level: number, resultNodes: F[]): void {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (childrenNodes) {\n        childrenNodes.forEach(child => this._flattenNode(child, level + 1, resultNodes));\n      }\n    }\n  }\n}\n\n/**\n * Data source for flat tree.\n */\nexport class IxTreeFlatDataSource<T, F> extends DataSource<F> {\n  private _flattenedData = new BehaviorSubject<F[]>([]);\n  private _expandedData = new BehaviorSubject<F[]>([]);\n  private _data = new BehaviorSubject<T[]>([]);\n\n  constructor(\n    private _treeControl: FlatTreeControl<F>,\n    private _treeFlattener: IxTreeFlattener<T, F>\n  ) {\n    super();\n  }\n\n  get data() { return this._data.value; }\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  connect(): Observable<F[]> {\n    return merge(\n      this._treeControl.expansionModel.changed,\n      this._flattenedData\n    ).pipe(map(() => {\n      this._expandedData.next(this._getExpandedNodesWithLevel());\n      return this._expandedData.value;\n    }));\n  }\n\n  disconnect() {}\n\n  private _getExpandedNodesWithLevel(): F[] {\n    const expandedNodes: F[] = [];\n    const flatNodes = this._flattenedData.value;\n\n    for (let i = 0; i < flatNodes.length; i++) {\n      const node = flatNodes[i];\n      expandedNodes.push(node);\n\n      if (!this._treeControl.isExpanded(node)) {\n        // Skip children if node is not expanded\n        const currentLevel = this._treeFlattener.getLevel(node);\n        let j = i + 1;\n        while (j < flatNodes.length && this._treeFlattener.getLevel(flatNodes[j]) > currentLevel) {\n          j++;\n        }\n        i = j - 1;\n      }\n    }\n\n    return expandedNodes;\n  }\n}\n\n@Component({\n  selector: 'ix-tree',\n  standalone: true,\n  imports: [CommonModule, CdkTreeModule],\n  exportAs: 'ixTree',\n  providers: [\n    { provide: CdkTree, useExisting: IxTreeComponent }\n  ],\n  templateUrl: './ix-tree.component.html',\n  styleUrl: './ix-tree.component.scss',\n  host: {\n    'class': 'ix-tree',\n    'role': 'tree'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class IxTreeComponent<T, K = T> extends CdkTree<T, K> {\n  constructor(\n    differs: IterableDiffers,\n    changeDetectorRef: ChangeDetectorRef,\n    viewContainer: ViewContainerRef\n  ) {\n    super(differs, changeDetectorRef, viewContainer);\n  }\n}","<ng-container cdkTreeNodeOutlet></ng-container>","import { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeNode, CdkTreeNodeDef, CdkTree, CDK_TREE_NODE_OUTLET_NODE, CdkTreeModule } from '@angular/cdk/tree';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\n\n@Component({\n  selector: 'ix-tree-node',\n  standalone: true,\n  imports: [CommonModule, CdkTreeModule, IxIconComponent],\n  exportAs: 'ixTreeNode',\n  providers: [\n    { provide: CdkTreeNode, useExisting: IxTreeNodeComponent }\n  ],\n  templateUrl: './ix-tree-node.component.html',\n  styleUrl: './ix-tree-node.component.scss',\n  host: {\n    'class': 'ix-tree-node-wrapper',\n    '[attr.aria-level]': 'level + 1',\n    '[attr.aria-expanded]': 'isExpandable ? isExpanded : null',\n    'role': 'treeitem'\n  },\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IxTreeNodeComponent<T, K = T> extends CdkTreeNode<T, K> {\n  constructor(\n    elementRef: ElementRef<HTMLElement>,\n    @Optional() tree: CdkTree<T, K>,\n    @Optional() @Inject(CDK_TREE_NODE_OUTLET_NODE) data?: T,\n    @Optional() changeDetectorRef?: ChangeDetectorRef\n  ) {\n    super(elementRef, tree, data, changeDetectorRef);\n  }\n\n  /** The tree node's level in the tree */\n  override get level(): number {\n    return this._tree?.treeControl?.getLevel ? this._tree.treeControl.getLevel(this.data) : 0;\n  }\n\n  /** Whether the tree node is expandable */\n  override get isExpandable(): boolean {\n    return this._tree?.treeControl?.isExpandable ? this._tree.treeControl.isExpandable(this.data) : false;\n  }\n\n  /** Whether the tree node is expanded */\n  override get isExpanded(): boolean {\n    return this._tree?.treeControl ? this._tree.treeControl.isExpanded(this.data) : false;\n  }\n}","<div class=\"ix-tree-node\" \n     [class.ix-tree-node--expandable]=\"isExpandable\"\n     [attr.aria-level]=\"level + 1\"\n     [attr.aria-expanded]=\"isExpandable ? isExpanded : null\"\n     [style.cursor]=\"isExpandable ? 'pointer' : 'default'\"\n     cdkTreeNodeToggle\n     role=\"treeitem\">\n  \n  <div class=\"ix-tree-node__content\">\n    <!-- Arrow icon for expandable nodes -->\n    <div \n      *ngIf=\"isExpandable\"\n      class=\"ix-tree-node__toggle\"\n      [class.ix-tree-node__toggle--expanded]=\"isExpanded\">\n      <ix-icon\n        [name]=\"isExpanded ? 'chevron-down' : 'chevron-right'\"\n        library=\"mdi\"\n        size=\"sm\"\n        style=\"transition: transform 0.2s ease;\">\n      </ix-icon>\n    </div>\n    \n    <!-- Spacer for non-expandable nodes -->\n    <div *ngIf=\"!isExpandable\" class=\"ix-tree-node__spacer\"></div>\n    \n    <!-- Node content -->\n    <div class=\"ix-tree-node__text\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>","import { Directive } from '@angular/core';\nimport { CdkTreeNodeOutlet } from '@angular/cdk/tree';\n\n@Directive({\n  selector: '[ixTreeNodeOutlet]',\n  standalone: true,\n  hostDirectives: [{\n    directive: CdkTreeNodeOutlet,\n    inputs: [],\n    outputs: []\n  }]\n})\nexport class IxTreeNodeOutletDirective {}","import { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Optional, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkNestedTreeNode, CdkTreeNode, CdkTreeNodeDef, CdkTree, CDK_TREE_NODE_OUTLET_NODE, CdkTreeModule, CdkTreeNodeOutlet } from '@angular/cdk/tree';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\nimport { IxTreeNodeOutletDirective } from './ix-tree-node-outlet.directive';\n\n@Component({\n  selector: 'ix-nested-tree-node',\n  standalone: true,\n  imports: [CommonModule, CdkTreeModule, IxIconComponent, IxTreeNodeOutletDirective],\n  exportAs: 'ixNestedTreeNode',\n  providers: [\n    { provide: CdkNestedTreeNode, useExisting: IxNestedTreeNodeComponent },\n    { provide: CdkTreeNode, useExisting: IxNestedTreeNodeComponent }\n  ],\n  templateUrl: './ix-nested-tree-node.component.html',\n  styleUrl: './ix-nested-tree-node.component.scss',\n  host: {\n    'class': 'ix-nested-tree-node-wrapper',\n    '[attr.aria-level]': 'level + 1',\n    '[attr.aria-expanded]': 'isExpandable ? isExpanded : null',\n    'role': 'treeitem'\n  },\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IxNestedTreeNodeComponent<T, K = T> extends CdkNestedTreeNode<T, K> {\n  constructor(\n    elementRef: ElementRef<HTMLElement>,\n    @Optional() tree: CdkTree<T, K>,\n    @Optional() @Inject(CDK_TREE_NODE_OUTLET_NODE) data?: T,\n    @Optional() changeDetectorRef?: ChangeDetectorRef\n  ) {\n    super(elementRef, tree, data, changeDetectorRef);\n  }\n\n  /** The tree node's level in the tree */\n  override get level(): number {\n    if (this._tree?.treeControl?.getLevel) {\n      // Legacy treeControl approach\n      return this._tree.treeControl.getLevel(this.data);\n    } else if (this._tree && 'getLevel' in this._tree && typeof (this._tree as any).getLevel === 'function') {\n      // Modern childrenAccessor approach - use tree's getLevel method\n      return (this._tree as any).getLevel(this.data);\n    }\n    return 0;\n  }\n\n  /** Whether the tree node is expandable */\n  override get isExpandable(): boolean {\n    if (this._tree?.treeControl?.isExpandable) {\n      // Legacy treeControl approach\n      return this._tree.treeControl.isExpandable(this.data);\n    } else if (this._tree && 'childrenAccessor' in this._tree && (this._tree as any).childrenAccessor) {\n      // Modern childrenAccessor approach\n      const childrenAccessor = (this._tree as any).childrenAccessor;\n      const children = childrenAccessor(this.data);\n      // Handle both array and observable results\n      if (Array.isArray(children)) {\n        return children.length > 0;\n      }\n      return false; // For now, don't handle Observable case\n    }\n    return false;\n  }\n\n  /** Whether the tree node is expanded */\n  override get isExpanded(): boolean {\n    if (this._tree?.treeControl) {\n      // Legacy treeControl approach\n      return this._tree.treeControl.isExpanded(this.data);\n    } else if (this._tree && 'isExpanded' in this._tree && typeof (this._tree as any).isExpanded === 'function') {\n      // Modern childrenAccessor approach - use tree's isExpanded method\n      return (this._tree as any).isExpanded(this.data);\n    }\n    return false;\n  }\n}\n","<div class=\"ix-nested-tree-node__content\">\n  <!-- Toggle button for expandable nodes (provided by component) -->\n  <button\n    *ngIf=\"isExpandable\"\n    class=\"ix-nested-tree-node__toggle\"\n    [class.ix-nested-tree-node__toggle--expanded]=\"isExpanded\"\n    cdkTreeNodeToggle\n    [attr.aria-label]=\"'Toggle node'\"\n    type=\"button\">\n    <ix-icon\n      [name]=\"isExpanded ? 'chevron-down' : 'chevron-right'\"\n      library=\"mdi\"\n      size=\"sm\"\n      style=\"transition: transform 0.2s ease;\">\n    </ix-icon>\n  </button>\n\n  <!-- Spacer for non-expandable nodes to maintain alignment -->\n  <div *ngIf=\"!isExpandable\" class=\"ix-nested-tree-node__spacer\"></div>\n\n  <!-- Consumer content -->\n  <ng-content></ng-content>\n</div>\n\n<!-- Children container -->\n<div class=\"ix-nested-tree-node-container\" *ngIf=\"isExpandable\" [class.ix-tree-invisible]=\"!isExpanded\" role=\"group\">\n  <ng-content select=\"[slot=children]\"></ng-content>\n</div>","export enum ModifierKeys {\n  COMMAND = '⌘',\n  CMD = '⌘',\n  CTRL = 'Ctrl',\n  CONTROL = 'Ctrl',\n  ALT = '⌥',\n  OPTION = '⌥',\n  OPT = '⌥',\n  SHIFT = '⇧',\n  META = '⌘',\n  SUPER = '⌘',\n}\n\nexport enum WindowsModifierKeys {\n  CTRL = 'Ctrl',\n  CONTROL = 'Ctrl',\n  ALT = 'Alt',\n  SHIFT = 'Shift',\n  WIN = 'Win',\n  WINDOWS = 'Win',\n}\n\nexport enum LinuxModifierKeys {\n  CTRL = 'Ctrl',\n  CONTROL = 'Ctrl',\n  ALT = 'Alt',\n  SHIFT = 'Shift',\n  SUPER = 'Super',\n  META = 'Meta',\n}\n\nexport type PlatformType = 'mac' | 'windows' | 'linux' | 'auto';","export enum CommonShortcuts {\n  // File operations\n  NEW = '⌘N',\n  OPEN = '⌘O',\n  SAVE = '⌘S',\n  SAVE_AS = '⇧⌘S',\n  PRINT = '⌘P',\n  CLOSE = '⌘W',\n  QUIT = '⌘Q',\n  \n  // Edit operations\n  UNDO = '⌘Z',\n  REDO = '⇧⌘Z',\n  CUT = '⌘X',\n  COPY = '⌘C',\n  PASTE = '⌘V',\n  SELECT_ALL = '⌘A',\n  \n  // Search operations\n  FIND = '⌘F',\n  FIND_NEXT = '⌘G',\n  FIND_PREVIOUS = '⇧⌘G',\n  REPLACE = '⌥⌘F',\n  \n  // View operations\n  ZOOM_IN = '⌘=',\n  ZOOM_OUT = '⌘-',\n  ZOOM_RESET = '⌘0',\n  FULL_SCREEN = '⌃⌘F',\n  \n  // Navigation\n  BACK = '⌘[',\n  FORWARD = '⌘]',\n  RELOAD = '⌘R',\n  HOME = '⌘H',\n  \n  // Window operations\n  NEW_WINDOW = '⇧⌘N',\n  NEW_TAB = '⌘T',\n  CLOSE_TAB = '⌘W',\n  MINIMIZE = '⌘M',\n  \n  // Application\n  PREFERENCES = '⌘,',\n  HELP = '⌘?',\n  ABOUT = '⌘I',\n}\n\nexport enum WindowsShortcuts {\n  // File operations\n  NEW = 'Ctrl+N',\n  OPEN = 'Ctrl+O',\n  SAVE = 'Ctrl+S',\n  SAVE_AS = 'Ctrl+Shift+S',\n  PRINT = 'Ctrl+P',\n  CLOSE = 'Ctrl+W',\n  QUIT = 'Alt+F4',\n  \n  // Edit operations\n  UNDO = 'Ctrl+Z',\n  REDO = 'Ctrl+Y',\n  CUT = 'Ctrl+X',\n  COPY = 'Ctrl+C',\n  PASTE = 'Ctrl+V',\n  SELECT_ALL = 'Ctrl+A',\n  \n  // Search operations\n  FIND = 'Ctrl+F',\n  FIND_NEXT = 'F3',\n  FIND_PREVIOUS = 'Shift+F3',\n  REPLACE = 'Ctrl+H',\n  \n  // View operations\n  ZOOM_IN = 'Ctrl+=',\n  ZOOM_OUT = 'Ctrl+-',\n  ZOOM_RESET = 'Ctrl+0',\n  FULL_SCREEN = 'F11',\n  \n  // Navigation\n  BACK = 'Alt+Left',\n  FORWARD = 'Alt+Right',\n  RELOAD = 'Ctrl+R',\n  HOME = 'Alt+Home',\n  \n  // Window operations\n  NEW_WINDOW = 'Ctrl+Shift+N',\n  NEW_TAB = 'Ctrl+T',\n  CLOSE_TAB = 'Ctrl+W',\n  MINIMIZE = 'Win+M',\n  \n  // Application\n  PREFERENCES = 'Ctrl+,',\n  HELP = 'F1',\n  ABOUT = 'Alt+H+A',\n}\n\nexport enum LinuxShortcuts {\n  // File operations\n  NEW = 'Ctrl+N',\n  OPEN = 'Ctrl+O',\n  SAVE = 'Ctrl+S',\n  SAVE_AS = 'Ctrl+Shift+S',\n  PRINT = 'Ctrl+P',\n  CLOSE = 'Ctrl+W',\n  QUIT = 'Ctrl+Q',\n  \n  // Edit operations\n  UNDO = 'Ctrl+Z',\n  REDO = 'Ctrl+Shift+Z',\n  CUT = 'Ctrl+X',\n  COPY = 'Ctrl+C',\n  PASTE = 'Ctrl+V',\n  SELECT_ALL = 'Ctrl+A',\n  \n  // Search operations\n  FIND = 'Ctrl+F',\n  FIND_NEXT = 'Ctrl+G',\n  FIND_PREVIOUS = 'Ctrl+Shift+G',\n  REPLACE = 'Ctrl+H',\n  \n  // View operations\n  ZOOM_IN = 'Ctrl+=',\n  ZOOM_OUT = 'Ctrl+-',\n  ZOOM_RESET = 'Ctrl+0',\n  FULL_SCREEN = 'F11',\n  \n  // Navigation\n  BACK = 'Alt+Left',\n  FORWARD = 'Alt+Right',\n  RELOAD = 'Ctrl+R',\n  HOME = 'Alt+Home',\n  \n  // Window operations\n  NEW_WINDOW = 'Ctrl+Shift+N',\n  NEW_TAB = 'Ctrl+T',\n  CLOSE_TAB = 'Ctrl+W',\n  MINIMIZE = 'Ctrl+H',\n  \n  // Application\n  PREFERENCES = 'Ctrl+,',\n  HELP = 'F1',\n  ABOUT = 'Ctrl+I',\n}","import { ModifierKeys, WindowsModifierKeys, LinuxModifierKeys, PlatformType } from '../enums/modifier-keys.enum';\n\nexport class ShortcutBuilder {\n  private keysList: string[] = [];\n  private targetPlatform: PlatformType = 'mac';\n\n  constructor(platform: PlatformType = 'mac') {\n    this.targetPlatform = platform;\n  }\n\n  /**\n   * Add Command key (⌘ on Mac, Ctrl on Windows/Linux)\n   */\n  command(): ShortcutBuilder {\n    switch (this.targetPlatform) {\n      case 'mac':\n        this.keysList.push(ModifierKeys.COMMAND);\n        break;\n      case 'windows':\n        this.keysList.push(WindowsModifierKeys.CTRL);\n        break;\n      case 'linux':\n        this.keysList.push(LinuxModifierKeys.CTRL);\n        break;\n      default:\n        this.keysList.push(ModifierKeys.COMMAND);\n    }\n    return this;\n  }\n\n  /**\n   * Add Ctrl key\n   */\n  ctrl(): ShortcutBuilder {\n    switch (this.targetPlatform) {\n      case 'mac':\n        this.keysList.push('⌃');\n        break;\n      case 'windows':\n        this.keysList.push(WindowsModifierKeys.CTRL);\n        break;\n      case 'linux':\n        this.keysList.push(LinuxModifierKeys.CTRL);\n        break;\n      default:\n        this.keysList.push('⌃');\n    }\n    return this;\n  }\n\n  /**\n   * Add Shift key (⇧ on Mac, Shift on Windows/Linux)\n   */\n  shift(): ShortcutBuilder {\n    switch (this.targetPlatform) {\n      case 'mac':\n        this.keysList.push(ModifierKeys.SHIFT);\n        break;\n      case 'windows':\n        this.keysList.push(WindowsModifierKeys.SHIFT);\n        break;\n      case 'linux':\n        this.keysList.push(LinuxModifierKeys.SHIFT);\n        break;\n      default:\n        this.keysList.push(ModifierKeys.SHIFT);\n    }\n    return this;\n  }\n\n  /**\n   * Add Alt/Option key (⌥ on Mac, Alt on Windows/Linux)\n   */\n  alt(): ShortcutBuilder {\n    switch (this.targetPlatform) {\n      case 'mac':\n        this.keysList.push(ModifierKeys.ALT);\n        break;\n      case 'windows':\n        this.keysList.push(WindowsModifierKeys.ALT);\n        break;\n      case 'linux':\n        this.keysList.push(LinuxModifierKeys.ALT);\n        break;\n      default:\n        this.keysList.push(ModifierKeys.ALT);\n    }\n    return this;\n  }\n\n  /**\n   * Add Option key (alias for alt on Mac)\n   */\n  option(): ShortcutBuilder {\n    return this.alt();\n  }\n\n  /**\n   * Add Windows/Super key\n   */\n  windows(): ShortcutBuilder {\n    switch (this.targetPlatform) {\n      case 'mac':\n        this.keysList.push(ModifierKeys.COMMAND);\n        break;\n      case 'windows':\n        this.keysList.push(WindowsModifierKeys.WINDOWS);\n        break;\n      case 'linux':\n        this.keysList.push(LinuxModifierKeys.SUPER);\n        break;\n      default:\n        this.keysList.push(ModifierKeys.COMMAND);\n    }\n    return this;\n  }\n\n  /**\n   * Add a regular key (letter, number, or special key)\n   */\n  key(key: string): ShortcutBuilder {\n    this.keysList.push(key);\n    return this;\n  }\n\n  /**\n   * Add multiple keys at once\n   */\n  keys(...keys: string[]): ShortcutBuilder {\n    this.keysList.push(...keys);\n    return this;\n  }\n\n  /**\n   * Reset the builder to start over\n   */\n  reset(): ShortcutBuilder {\n    this.keysList = [];\n    return this;\n  }\n\n  /**\n   * Build the final shortcut string\n   */\n  build(): string {\n    if (this.keysList.length === 0) {\n      return '';\n    }\n\n    if (this.targetPlatform === 'mac') {\n      // Mac style: no separators between keys\n      return this.keysList.join('');\n    } else {\n      // Windows/Linux style: + separators between keys\n      return this.keysList.join('+');\n    }\n  }\n\n  /**\n   * Get the current keys array (for debugging)\n   */\n  getKeys(): string[] {\n    return [...this.keysList];\n  }\n\n  /**\n   * Get the current platform\n   */\n  getPlatform(): PlatformType {\n    return this.targetPlatform;\n  }\n\n  /**\n   * Change the target platform\n   */\n  setPlatform(platform: PlatformType): ShortcutBuilder {\n    this.targetPlatform = platform;\n    return this;\n  }\n}\n\n/**\n * Create a new ShortcutBuilder instance\n */\nexport function createShortcut(platform: PlatformType = 'mac'): ShortcutBuilder {\n  return new ShortcutBuilder(platform);\n}\n\n/**\n * Quick builder functions for common patterns\n */\nexport const QuickShortcuts = {\n  /**\n   * Create a simple Command+Key shortcut\n   */\n  cmd(key: string, platform: PlatformType = 'mac'): string {\n    return createShortcut(platform).command().key(key).build();\n  },\n\n  /**\n   * Create a Shift+Command+Key shortcut\n   */\n  shiftCmd(key: string, platform: PlatformType = 'mac'): string {\n    return createShortcut(platform).shift().command().key(key).build();\n  },\n\n  /**\n   * Create an Alt+Command+Key shortcut\n   */\n  altCmd(key: string, platform: PlatformType = 'mac'): string {\n    return createShortcut(platform).alt().command().key(key).build();\n  },\n\n  /**\n   * Create a Ctrl+Key shortcut\n   */\n  ctrl(key: string, platform: PlatformType = 'mac'): string {\n    return createShortcut(platform).ctrl().key(key).build();\n  },\n\n  /**\n   * Create an Alt+Key shortcut\n   */\n  alt(key: string, platform: PlatformType = 'mac'): string {\n    return createShortcut(platform).alt().key(key).build();\n  },\n};","/* eslint-disable @typescript-eslint/naming-convention */\nexport const kb = 1000;\nexport const Mb = 1000 ** 2;\nexport const Gb = 1000 ** 3;\nexport const Tb = 1000 ** 4;\nexport const Pb = 1000 ** 5;\nexport const Eb = 1000 ** 6;\nexport const Zb = 1000 ** 7;\nexport const Yb = 1000 ** 8;\n","/* eslint-disable @typescript-eslint/naming-convention */\nexport const KiB = 1024;\nexport const MiB = 1024 ** 2;\nexport const GiB = 1024 ** 3;\nexport const TiB = 1024 ** 4;\nexport const PiB = 1024 ** 5;\nexport const EiB = 1024 ** 6;\nexport const ZiB = 1024 ** 7;\nexport const YiB = 1024 ** 8;\n","import {\n  Gb, kb, Mb, Tb, Pb, Eb, Zb, Yb,\n} from './bits.constant';\nimport {\n  GiB, KiB, MiB, PiB, TiB, EiB, ZiB, YiB,\n} from './bytes.constant';\n\nexport function normalizeFileSize(\n  value: number,\n  baseUnit: 'b' | 'B' = 'B',\n  base: 10 | 2 = 2,\n): [formatted: number, unit: string] {\n  return base === 10 ? normalizeFileSizeBase10(value, baseUnit) : normalizeFileSizeBase2(value, baseUnit);\n}\n\nexport function buildNormalizedFileSize(\n  value: number,\n  baseUnit: 'b' | 'B' = 'B',\n  base: 10 | 2 = 2,\n): string {\n  const [formatted, unit] = normalizeFileSize(value, baseUnit, base);\n  return `${formatted} ${unit}`;\n}\n\nexport function convertStringDiskSizeToBytes(input: string): number | null {\n  const sizeRegex = /^(\\d+(\\.\\d+)?)([KMGTP](?:i)?(?:B)?)?$/i;\n  const match = input.replace(/\\s+/g, '').match(sizeRegex);\n\n  if (!match) {\n    return null;\n  }\n\n  const value = parseFloat(match[1]);\n  let unit = match[3]?.toUpperCase() || '';\n\n  const units = [\n    'B', 'Gb', 'kb', 'Mb', 'Tb', 'Pb', 'Eb', 'Zb', 'Yb',\n    'GiB', 'KiB', 'MiB', 'PiB', 'TiB', 'EiB', 'ZiB', 'YiB',\n  ];\n\n  unit = units.find((item) => item.toUpperCase().includes(unit.toUpperCase())) || 'B';\n\n  const unitMultipliers: Record<string, number> = {\n    B: 1,\n    KIB: KiB,\n    MIB: MiB,\n    GIB: GiB,\n    TIB: TiB,\n    PIB: PiB,\n    EIB: EiB,\n    ZIB: ZiB,\n    YIB: YiB,\n    KB: KiB,\n    MB: MiB,\n    GB: GiB,\n    TB: TiB,\n    PB: PiB,\n    EB: EiB,\n    ZB: ZiB,\n    YB: YiB,\n  };\n\n  return value * (unitMultipliers[unit.toUpperCase()] || 1);\n}\n\nfunction normalizeFileSizeBase2(value: number, baseUnit: 'b' | 'B'): [formatted: number, unit: string] {\n  let formatted = value;\n  let increment = 1;\n  while (formatted >= KiB && increment < YiB) {\n    increment *= KiB;\n    formatted = value / increment;\n  }\n  formatted = Math.round((formatted + Number.EPSILON) * 100) / 100;\n  switch (increment) {\n    case KiB:\n      return [formatted, 'Ki' + baseUnit];\n    case MiB:\n      return [formatted, 'Mi' + baseUnit];\n    case GiB:\n      return [formatted, 'Gi' + baseUnit];\n    case TiB:\n      return [formatted, 'Ti' + baseUnit];\n    case PiB:\n      return [formatted, 'Pi' + baseUnit];\n    case EiB:\n      return [formatted, 'Ei' + baseUnit];\n    case ZiB:\n      return [formatted, 'Zi' + baseUnit];\n    case YiB:\n      return [formatted, 'Yi' + baseUnit];\n    default:\n      return [formatted, baseUnit];\n  }\n}\n\nfunction normalizeFileSizeBase10(value: number, baseUnit: 'b' | 'B'): [formatted: number, unit: string] {\n  let formatted = value;\n  let increment = 1;\n  while (formatted >= kb && increment < Yb) {\n    increment *= kb;\n    formatted = value / increment;\n  }\n  formatted = Math.round((formatted + Number.EPSILON) * 100) / 100;\n  switch (increment) {\n    case kb:\n      return [formatted, 'k' + baseUnit];\n    case Mb:\n      return [formatted, 'M' + baseUnit];\n    case Gb:\n      return [formatted, 'G' + baseUnit];\n    case Tb:\n      return [formatted, 'T' + baseUnit];\n    case Pb:\n      return [formatted, 'P' + baseUnit];\n    case Eb:\n      return [formatted, 'E' + baseUnit];\n    case Zb:\n      return [formatted, 'Z' + baseUnit];\n    case Yb:\n      return [formatted, 'Y' + baseUnit];\n    default:\n      return [formatted, baseUnit];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { buildNormalizedFileSize } from './file-size.utils';\n\n@Pipe({\n  name: 'ixFileSize',\n  standalone: true,\n})\nexport class FileSizePipe implements PipeTransform {\n  transform(value: number): string {\n    return buildNormalizedFileSize(value, 'B', 2);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ixStripMntPrefix',\n  standalone: true,\n})\nexport class StripMntPrefixPipe implements PipeTransform {\n  transform(path: string | null | undefined): string {\n    if (!path) return '';\n\n    if (path.startsWith('/mnt/')) {\n      return path.substring(4); // Remove \"/mnt\" prefix -> \"/mnt/foo\" becomes \"/foo\"\n    } else if (path === '/mnt') {\n      return '/'; // Show root as just \"/\"\n    }\n\n    return path;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PathSegment } from '../../ix-file-picker/ix-file-picker.interfaces';\n\n@Pipe({\n  name: 'ixTruncatePath',\n  standalone: true,\n})\nexport class TruncatePathPipe implements PipeTransform {\n  transform(path: string): PathSegment[] {\n    // At root /mnt, show just \"/\"\n    if (!path || path === '/mnt') {\n      return [{ name: '/', path: '/mnt' }];\n    }\n\n    // For subdirectories, show \"..\" (parent) and current directory\n    const segments: PathSegment[] = [];\n\n    // Calculate parent path\n    const lastSlashIndex = path.lastIndexOf('/');\n    const parentPath = lastSlashIndex > 0 ? path.substring(0, lastSlashIndex) : '/mnt';\n\n    // Get current directory name\n    const currentDirName = path.substring(lastSlashIndex + 1);\n\n    // Add parent navigation (..) and current directory\n    segments.push({ name: '..', path: parentPath });\n    segments.push({ name: currentDirName, path: path });\n\n    return segments;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { NgIf } from '@angular/common';\n\nexport type SpinnerMode = 'determinate' | 'indeterminate';\n\n@Component({\n  selector: 'ix-spinner',\n  standalone: true,\n  imports: [NgIf],\n  templateUrl: './ix-spinner.component.html',\n  styleUrls: ['./ix-spinner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'ix-spinner',\n    '[class.ix-spinner-indeterminate]': 'mode === \"indeterminate\"',\n    '[class.ix-spinner-determinate]': 'mode === \"determinate\"',\n    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n    'role': 'progressbar',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.aria-labelledby]': 'ariaLabelledby || null'\n  }\n})\nexport class IxSpinnerComponent {\n  @Input() mode: SpinnerMode = 'indeterminate';\n  @Input() value: number = 0;\n  @Input() diameter: number = 40;\n  @Input() strokeWidth: number = 4;\n  @Input() ariaLabel: string | null = null;\n  @Input() ariaLabelledby: string | null = null;\n\n  get radius(): number {\n    return (this.diameter - this.strokeWidth) / 2;\n  }\n\n  get circumference(): number {\n    return 2 * Math.PI * this.radius;\n  }\n\n  get strokeDasharray(): string {\n    return `${this.circumference} ${this.circumference}`;\n  }\n\n  get strokeDashoffset(): number {\n    if (this.mode === 'indeterminate') {\n      return 0;\n    }\n    const progress = Math.max(0, Math.min(100, this.value));\n    return this.circumference - (progress / 100) * this.circumference;\n  }\n\n  get viewBox(): string {\n    const size = this.diameter;\n    return `0 0 ${size} ${size}`;\n  }\n}","<svg \n  [attr.width]=\"diameter\" \n  [attr.height]=\"diameter\" \n  [attr.viewBox]=\"viewBox\"\n  class=\"ix-spinner-svg\">\n  <circle\n    class=\"ix-spinner-circle\"\n    [attr.cx]=\"diameter / 2\"\n    [attr.cy]=\"diameter / 2\"\n    [attr.r]=\"radius\"\n    [attr.stroke-width]=\"strokeWidth\"\n    [attr.stroke-dasharray]=\"strokeDasharray\"\n    [attr.stroke-dashoffset]=\"strokeDashoffset\"\n    fill=\"none\">\n  </circle>\n</svg>","import { Component, Input, OnInit, OnDestroy, ViewEncapsulation, ElementRef, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ix-branded-spinner',\n  standalone: true,\n  templateUrl: './ix-branded-spinner.component.html',\n  styleUrls: ['./ix-branded-spinner.component.scss'],  \n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'ix-branded-spinner',\n    'role': 'progressbar',\n    '[attr.aria-label]': 'ariaLabel || \"Loading...\"'\n  }\n})\nexport class IxBrandedSpinnerComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() ariaLabel: string | null = null;\n\n  private paths: SVGPathElement[] = [];\n  private animationId: number | null = null;\n  private isAnimating = false;\n\n  // Animation timing constants from reference implementation\n  private readonly duration = 300; // time to draw each individual path\n  private readonly delayStep = 500; // delay between starting each path  \n  private readonly cyclePause = 1200; // pause after all paths are drawn\n  private readonly emptyPause = 100; // brief pause with no strokes\n\n  constructor(private elementRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit(): void {\n    this.isAnimating = true;\n  }\n\n  ngAfterViewInit(): void {\n    this.paths = Array.from(this.elementRef.nativeElement.querySelectorAll('path.exploded'));\n    this.startProgressLoop();\n  }\n\n  ngOnDestroy(): void {\n    this.isAnimating = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n\n  private startProgressLoop(): void {\n    if (!this.isAnimating || this.paths.length === 0) return;\n\n    // Reset all paths to invisible\n    this.paths.forEach((path) => {\n      // Check if getTotalLength exists (not available in Jest/JSDom)\n      const length = typeof path.getTotalLength === 'function' ? path.getTotalLength() : 200;\n      path.style.strokeDasharray = length.toString();\n      path.style.strokeDashoffset = length.toString();\n      path.style.fillOpacity = '0';\n    });\n\n    this.animateSequence();\n  }\n\n  private animateSequence(): void {\n    if (!this.isAnimating) return;\n\n    let startTime: number;\n    const totalDrawTime = (this.paths.length - 1) * this.delayStep + this.duration;\n\n    const animate = (timestamp: number) => {\n      if (!this.isAnimating) return;\n\n      if (!startTime) startTime = timestamp;\n      const elapsed = timestamp - startTime;\n\n      let allDone = true;\n\n      // Animate each path with staggered delays\n      this.paths.forEach((path, index) => {\n        const delay = index * this.delayStep;\n        // Check if getTotalLength exists (not available in Jest/JSDom)\n        const length = typeof path.getTotalLength === 'function' ? path.getTotalLength() : 200;\n\n        if (elapsed < delay) {\n          allDone = false;\n          return;\n        }\n\n        const progress = Math.min((elapsed - delay) / this.duration, 1);\n        const offset = this.tween(length, 0, progress);\n        path.style.strokeDashoffset = offset.toString();\n\n        if (progress < 1) {\n          allDone = false;\n        }\n      });\n\n      if (!allDone) {\n        this.animationId = requestAnimationFrame(animate);\n      } else {\n        // All paths drawn, now pause with complete logo\n        setTimeout(() => {\n          if (this.isAnimating) {\n            // Hide all paths briefly\n            this.paths.forEach((path) => {\n              // Check if getTotalLength exists (not available in Jest/JSDom)\n              const length = typeof path.getTotalLength === 'function' ? path.getTotalLength() : 200;\n              path.style.strokeDashoffset = length.toString();\n            });\n\n            // Start next cycle after brief empty pause\n            setTimeout(() => {\n              if (this.isAnimating) {\n                this.startProgressLoop();\n              }\n            }, this.emptyPause);\n          }\n        }, this.cyclePause);\n      }\n    };\n\n    this.animationId = requestAnimationFrame(animate);\n  }\n\n  private tween(from: number, to: number, progress: number): number {\n    return from + (to - from) * progress;\n  }\n}","<div class=\"ix-branded-spinner-container\">\n  <svg \n    viewBox=\"0 -7 62 62\" \n    preserveAspectRatio=\"xMidYMid meet\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"ix-branded-spinner-logo\">\n    \n    <!-- EXPLODED LOGO PATHS -->\n    <path class=\"exploded center\" fill=\"#AFADAE\" d=\"m41.79 24.13-11.26 6.51-11.28-6.51 11.28-6.51 11.26 6.51Z\" />\n    <path class=\"exploded top-left\" fill=\"#35BEEB\" d=\"M27.86 0v13.01l-13.93 8.04-11.28-6.5L27.86 0Z\" />\n    <path class=\"exploded bottom-right\" fill=\"#35BEEB\" d=\"M61.03 19.16v13.01L33.19 48.25V35.24l27.84-16.08Z\" />\n    <path class=\"exploded bottom-left\" fill=\"#0A95D3\" d=\"M27.86 35.24v13L0 32.17v-13l12.59 7.26s.03.02.05.03l15.23 8.79-.01-.01Z\" />\n    <path class=\"exploded top-right\" fill=\"#0A95D3\" d=\"m58.38 14.55-11.27 6.51-13.92-8.05V0l25.19 14.55Z\" />\n  </svg>\n</div>","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate' | 'buffer';\n\n@Component({\n  selector: 'ix-progress-bar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './ix-progress-bar.component.html',\n  styleUrls: ['./ix-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'ix-progress-bar',\n    '[class.ix-progress-bar-determinate]': 'mode === \"determinate\"',\n    '[class.ix-progress-bar-indeterminate]': 'mode === \"indeterminate\"',\n    '[class.ix-progress-bar-buffer]': 'mode === \"buffer\"',\n    'role': 'progressbar',\n    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.aria-labelledby]': 'ariaLabelledby || null'\n  }\n})\nexport class IxProgressBarComponent {\n  @Input() mode: ProgressBarMode = 'determinate';\n  @Input() value: number = 0;\n  @Input() bufferValue: number = 0;\n  @Input() ariaLabel: string | null = null;\n  @Input() ariaLabelledby: string | null = null;\n\n  /**\n   * Gets the transform value for the primary progress bar\n   */\n  get primaryTransform(): string {\n    if (this.mode === 'determinate' || this.mode === 'buffer') {\n      const clampedValue = Math.max(0, Math.min(100, this.value));\n      const scale = clampedValue / 100;\n      return `scaleX(${scale})`;\n    }\n    // For indeterminate mode, don't apply inline transform - CSS animation handles it\n    if (this.mode === 'indeterminate') {\n      return '';\n    }\n    return 'scaleX(0)';\n  }\n\n  /**\n   * Gets the positioning and size for the buffer dots animation\n   */\n  get bufferStyles(): { width: string; right: string } {\n    if (this.mode === 'buffer') {\n      const buffer = Math.max(0, Math.min(100, this.bufferValue));\n      \n      // Buffer takes up bufferValue% of total width, positioned from right\n      return {\n        width: `${buffer}%`,\n        right: '0px'\n      };\n    }\n    return { width: '0%', right: '0px' };\n  }\n\n  /**\n   * Gets the transform value for the buffer progress bar (deprecated - use bufferStyles)\n   */\n  get bufferTransform(): string {\n    return 'scaleX(0)'; // Hide the old buffer bar\n  }\n}","<!-- Background/buffer layer -->\n<div class=\"ix-progress-bar-buffer\" aria-hidden=\"true\">\n  <!-- Buffer bar hidden in new implementation -->\n  <!-- Buffer dots for buffer mode -->\n  <div class=\"ix-progress-bar-buffer-dots\" \n       *ngIf=\"mode === 'buffer'\"\n       [style.width]=\"bufferStyles.width\"\n       [style.right]=\"bufferStyles.right\"></div>\n</div>\n\n<!-- Primary bar -->\n<div class=\"ix-progress-bar-bar ix-progress-bar-primary-bar\" aria-hidden=\"true\">\n  <span class=\"ix-progress-bar-bar-inner\" \n        [style.transform]=\"primaryTransform\"></span>\n</div>\n\n<!-- Secondary bar (for indeterminate mode) -->\n<div class=\"ix-progress-bar-bar ix-progress-bar-secondary-bar\" aria-hidden=\"true\" *ngIf=\"mode === 'indeterminate'\">\n  <span class=\"ix-progress-bar-bar-inner\"></span>\n</div>\n\n","import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\n\n@Component({\n  selector: 'ix-particle-progress-bar',\n  standalone: true,\n  templateUrl: './ix-particle-progress-bar.component.html',\n  styleUrls: ['./ix-particle-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'ix-particle-progress-bar'\n  }\n})\nexport class IxParticleProgressBarComponent implements AfterViewInit, OnDestroy {\n  @Input() speed: 'slow' | 'medium' | 'fast' | 'ludicrous' = 'medium';\n  @Input() color: string = 'hsla(198, 100%, 42%, 1)';\n  @Input() height = 40;\n  @Input() width = 600;\n  @Input() fill = 300;\n\n  @ViewChild('canvas', { static: true }) canvasRef!: ElementRef<HTMLCanvasElement>;\n\n  private ctx!: CanvasRenderingContext2D;\n  private particles: any[] = [];\n  private shades: string[] = [];\n  private animationId?: number;\n\n  private get speedConfig() {\n    const baseConfig = {\n      slow: { speedMin: 0.5, speedMax: 1.5 },\n      medium: { speedMin: 1, speedMax: 2.5 },\n      fast: { speedMin: 2, speedMax: 4 },\n      ludicrous: { speedMin: 4, speedMax: 8 }\n    }[this.speed];\n\n    // Calculate dynamic fade rate based on travel distance\n    // Particles should fade out over the full travel distance (minus border radius buffer)\n    const travelDistance = Math.max(this.fill - 12, 20); // Distance from x=50 to x=50+fill-12 (avoid border radius), minimum 20px\n    const averageSpeed = (baseConfig.speedMin + baseConfig.speedMax) / 2;\n    const estimatedFrames = travelDistance / averageSpeed; // Approximate frames to travel the distance\n    const fadeRate = 1 / estimatedFrames; // Fade from 1 to 0 over the travel distance\n\n    return {\n      ...baseConfig,\n      fadeRate: Math.max(fadeRate, 0.001) // Minimum fade rate to prevent too slow fading\n    };\n  }\n\n  /**\n   * Calculate the gradient offset so the transition only happens in the last 100px\n   */\n  get gradientTransitionStart(): number {\n    if (this.fill <= 100) {\n      return 0; // If fill is 100px or less, transition starts immediately\n    }\n    return ((this.fill - 100) / this.fill) * 100; // Transparent until last 100px\n  }\n\n  /**\n   * Get the color for the progress bar (uses the exact same color as input)\n   */\n  get progressBarColor(): string {\n    return this.color;\n  }\n\n  ngAfterViewInit(): void {\n    this.ctx = this.canvasRef.nativeElement.getContext('2d')!;\n    this.shades = this.generateDarkerShades(this.color, 4);\n    this.animate();\n  }\n\n  ngOnDestroy(): void {\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n  }\n\n  private animate() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    for (let i = 0; i < this.particles.length; i++) {\n      const p = this.particles[i];\n      this.ctx.beginPath();\n      // If color contains ALPHA placeholder, replace it; otherwise use the color with current opacity\n      if (p.color.includes('ALPHA')) {\n        this.ctx.fillStyle = p.color.replace('ALPHA', p.opacity.toFixed(2));\n      } else {\n        // Parse the color and apply current opacity\n        const parsed = this.parseHSLA(p.color);\n        this.ctx.fillStyle = `hsla(${parsed.h}, ${(parsed.s * 100).toFixed(0)}%, ${(parsed.l * 100).toFixed(0)}%, ${p.opacity.toFixed(2)})`;\n      }\n      this.ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2);\n      this.ctx.fill();\n\n      p.x += p.speed;\n      p.opacity -= this.speedConfig.fadeRate;\n\n      if (p.x > 50 + this.fill - 12 || p.opacity <= 0) {\n        this.particles.splice(i, 1);\n        i--;\n      }\n    }\n\n    for (let j = 0; j < 3; j++) {\n      if (Math.random() < 0.8) this.spawnParticle();\n    }\n\n    this.animationId = requestAnimationFrame(() => this.animate());\n  }\n\n  private spawnParticle() {\n    const { speedMin, speedMax } = this.speedConfig;\n    const color = this.shades[Math.floor(Math.random() * this.shades.length)];\n    const speed = speedMin + Math.random() * (speedMax - speedMin);\n    this.particles.push({\n      x: 50,\n      y: this.height / 2 + (Math.random() * (this.height / 2) - this.height / 4),\n      radius: Math.random() * 2 + 1,\n      speed,\n      opacity: 1,\n      color\n    });\n  }\n\n  private parseHSLA(hsla: string): { h: number; s: number; l: number; a: number } {\n    const match = hsla.match(/hsla?\\(([\\d.]+),\\s*([\\d.]+)%?,\\s*([\\d.]+)%?(?:,\\s*([\\d.]+))?\\)/i);\n    if (!match) throw new Error('Invalid HSLA color');\n    return {\n      h: parseFloat(match[1]),\n      s: parseFloat(match[2]) / 100,\n      l: parseFloat(match[3]) / 100,\n      a: match[4] !== undefined ? parseFloat(match[4]) : 1\n    };\n  }\n\n  /**\n   * Convert any color format to HSLA\n   */\n  private convertToHSLA(color: string): { h: number; s: number; l: number; a: number } {\n    // Already HSLA format\n    if (color.startsWith('hsla') || color.startsWith('hsl')) {\n      return this.parseHSLA(color);\n    }\n\n    // Create a temporary element to get computed color\n    const tempDiv = document.createElement('div');\n    tempDiv.style.color = color;\n    document.body.appendChild(tempDiv);\n    const computedColor = getComputedStyle(tempDiv).color;\n    document.body.removeChild(tempDiv);\n\n    // Parse RGB/RGBA from computed style\n    const rgbaMatch = computedColor.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)/);\n    if (!rgbaMatch) {\n      throw new Error('Invalid color format');\n    }\n\n    const r = parseInt(rgbaMatch[1]) / 255;\n    const g = parseInt(rgbaMatch[2]) / 255;\n    const b = parseInt(rgbaMatch[3]) / 255;\n    const a = rgbaMatch[4] ? parseFloat(rgbaMatch[4]) : 1;\n\n    // Convert RGB to HSL\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const diff = max - min;\n    const sum = max + min;\n    const l = sum / 2;\n\n    let h = 0;\n    let s = 0;\n\n    if (diff !== 0) {\n      s = l > 0.5 ? diff / (2 - sum) : diff / sum;\n\n      switch (max) {\n        case r:\n          h = ((g - b) / diff) + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / diff + 2;\n          break;\n        case b:\n          h = (r - g) / diff + 4;\n          break;\n      }\n      h /= 6;\n    }\n\n    return {\n      h: Math.round(h * 360),\n      s: Math.round(s * 100) / 100,\n      l: Math.round(l * 100) / 100,\n      a\n    };\n  }\n\n  /**\n   * Generate darker shades of the input color for particle depth effect\n   */\n  private generateDarkerShades(color: string, count: number): string[] {\n    const baseHSLA = this.convertToHSLA(color);\n    const shades: string[] = [];\n\n    // Include the original color as the brightest shade\n    shades.push(`hsla(${baseHSLA.h}, ${(baseHSLA.s * 100).toFixed(0)}%, ${(baseHSLA.l * 100).toFixed(0)}%, ALPHA)`);\n\n    // Generate darker shades by reducing lightness\n    for (let i = 1; i < count; i++) {\n      const darkeningFactor = 0.85 - (i * 0.1); // More conservative darkening: 85%, 75%, 65%\n      const newLightness = Math.max(baseHSLA.l * darkeningFactor, Math.max(baseHSLA.l * 0.4, 0.2)); // Limit darkness to 40% of original or 20% minimum\n      shades.push(`hsla(${baseHSLA.h}, ${(baseHSLA.s * 100).toFixed(0)}%, ${(newLightness * 100).toFixed(0)}%, ALPHA)`);\n    }\n\n    return shades;\n  }\n\n}\n\n","<svg [attr.width]=\"width\" [attr.height]=\"height\">\n  <defs>\n    <linearGradient id=\"fadeToPrimary\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n      <stop offset=\"0%\" stop-color=\"transparent\" />\n      <stop [attr.offset]=\"gradientTransitionStart + '%'\" stop-color=\"transparent\" />\n      <stop offset=\"100%\" [attr.stop-color]=\"progressBarColor\" />\n    </linearGradient>\n  </defs>\n\n  <!-- Background bar -->\n  <rect x=\"50\" [attr.y]=\"height / 2 - height / 4\" [attr.width]=\"width - 100\" [attr.height]=\"height / 2\" [attr.rx]=\"height / 4\" fill=\"rgba(0,0,0,0.1)\" />\n\n  <!-- Fill bar -->\n  <rect\n    x=\"50\"\n    [attr.y]=\"height / 2 - height / 4\"\n    [attr.width]=\"fill\"\n    [attr.height]=\"height / 2\"\n    [attr.rx]=\"height / 4\"\n    fill=\"url(#fadeToPrimary)\"\n  />\n\n  <!-- Particle canvas -->\n  <foreignObject x=\"0\" y=\"0\" [attr.width]=\"width\" [attr.height]=\"height\">\n    <canvas #canvas [attr.width]=\"width\" [attr.height]=\"height\" style=\"pointer-events: none;\"></canvas>\n  </foreignObject>\n</svg>\n","import { Component, Input, Output, EventEmitter, computed, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-calendar-header',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"ix-calendar-header\">\n      <div class=\"ix-calendar-controls\">\n        <!-- Period label (visually hidden for screen readers) -->\n        <span aria-live=\"polite\" class=\"cdk-visually-hidden\" [id]=\"periodLabelId\">\n          {{ periodLabel() }}\n        </span>\n\n        <!-- Period button (month/year selector) -->\n        <button \n          type=\"button\"\n          class=\"ix-calendar-period-button\"\n          [attr.aria-label]=\"'Choose month and year'\"\n          [attr.aria-describedby]=\"periodLabelId\"\n          (click)=\"toggleView()\">\n          <span [attr.aria-hidden]=\"true\">{{ periodLabel() }}</span>\n          <svg viewBox=\"0 0 10 5\" focusable=\"false\" aria-hidden=\"true\" class=\"ix-calendar-arrow\">\n            <polygon points=\"0,0 5,5 10,0\"></polygon>\n          </svg>\n        </button>\n\n        <!-- Spacer -->\n        <div class=\"ix-calendar-spacer\"></div>\n\n        <!-- Previous button -->\n        <button \n          type=\"button\"\n          class=\"ix-calendar-previous-button\"\n          [attr.aria-label]=\"previousLabel()\"\n          (click)=\"onPreviousClick()\">\n          <svg viewBox=\"0 0 24 24\" focusable=\"false\" aria-hidden=\"true\">\n            <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path>\n          </svg>\n        </button>\n\n        <!-- Next button -->\n        <button \n          type=\"button\"\n          class=\"ix-calendar-next-button\"\n          [attr.aria-label]=\"nextLabel()\"\n          (click)=\"onNextClick()\">\n          <svg viewBox=\"0 0 24 24\" focusable=\"false\" aria-hidden=\"true\">\n            <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./ix-calendar-header.component.scss']\n})\nexport class IxCalendarHeaderComponent {\n  @Input() set currentDate(date: Date) {\n    this._currentDate.set(date);\n  }\n  get currentDate(): Date {\n    return this._currentDate();\n  }\n  \n  private _currentDate = signal<Date>(new Date());\n  @Input() currentView: 'month' | 'year' = 'month';\n\n  @Output() monthSelected = new EventEmitter<number>();\n  @Output() yearSelected = new EventEmitter<number>();\n  @Output() viewChanged = new EventEmitter<'month' | 'year'>();\n  @Output() previousClicked = new EventEmitter<void>();\n  @Output() nextClicked = new EventEmitter<void>();\n\n  private months = [\n    'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN',\n    'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'\n  ];\n\n  periodLabelId = `ix-calendar-period-label-${Math.floor(Math.random() * 10000)}`;\n\n  periodLabel = computed(() => {\n    const date = this._currentDate();\n    if (!date) return '';\n    \n    if (this.currentView === 'month') {\n      const month = this.months[date.getMonth()];\n      const year = date.getFullYear();\n      return `${month} ${year}`;\n    } else {\n      // For year view, show the year range (24 years like Material)\n      const currentYear = date.getFullYear();\n      const startYear = Math.floor(currentYear / 24) * 24;\n      const endYear = startYear + 23;\n      return `${startYear} – ${endYear}`;\n    }\n  });\n\n  previousLabel = computed(() => {\n    return this.currentView === 'month' ? 'Previous month' : 'Previous 24 years';\n  });\n\n  nextLabel = computed(() => {\n    return this.currentView === 'month' ? 'Next month' : 'Next 24 years';\n  });\n\n  toggleView(): void {\n    const newView = this.currentView === 'month' ? 'year' : 'month';\n    this.viewChanged.emit(newView);\n  }\n\n  onPreviousClick(): void {\n    this.previousClicked.emit();\n  }\n\n  onNextClick(): void {\n    this.nextClicked.emit();\n  }\n}","import { Component, Input, Output, EventEmitter, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DateRange } from '../ix-date-range-input/ix-date-range-input.component';\n\nexport interface CalendarCell {\n  value: number;\n  date: Date;\n  label: string;\n  ariaLabel: string;\n  enabled: boolean;\n  selected: boolean;\n  today: boolean;\n  compareStart?: boolean;\n  compareEnd?: boolean;\n  rangeStart?: boolean;\n  rangeEnd?: boolean;\n  inRange?: boolean;\n}\n\n@Component({\n  selector: 'ix-month-view',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <table role=\"grid\" class=\"ix-calendar-table\">\n      <!-- Table header with day names -->\n      <thead class=\"ix-calendar-table-header\">\n        <tr>\n          <th scope=\"col\" *ngFor=\"let day of weekdays\">\n            <span class=\"cdk-visually-hidden\">{{ day.long }}</span>\n            <span aria-hidden=\"true\">{{ day.short }}</span>\n          </th>\n        </tr>\n      </thead>\n\n      <!-- Table body with calendar cells -->\n      <tbody class=\"ix-calendar-body\">\n        <!-- Calendar rows -->\n        <tr role=\"row\" *ngFor=\"let row of calendarRows(); let rowIndex = index; trackBy: trackByRow\">\n          <td \n            *ngFor=\"let cell of row; let colIndex = index; trackBy: trackByDate\"\n            role=\"gridcell\"\n            class=\"ix-calendar-body-cell-container\"\n            [attr.data-ix-row]=\"rowIndex\"\n            [attr.data-ix-col]=\"colIndex\">\n            <button \n              *ngIf=\"cell.value > 0\"\n              type=\"button\"\n              class=\"ix-calendar-body-cell\"\n              [class.ix-calendar-body-selected]=\"cell.selected\"\n              [class.ix-calendar-body-today]=\"cell.today\"\n              [class.ix-calendar-body-active]=\"cell.selected\"\n              [class.ix-calendar-body-range-start]=\"cell.rangeStart\"\n              [class.ix-calendar-body-range-end]=\"cell.rangeEnd\"\n              [class.ix-calendar-body-in-range]=\"cell.inRange\"\n              [disabled]=\"!cell.enabled\"\n              [attr.tabindex]=\"cell.selected ? 0 : -1\"\n              [attr.aria-label]=\"cell.ariaLabel\"\n              [attr.aria-pressed]=\"cell.selected\"\n              [attr.aria-current]=\"cell.today ? 'date' : null\"\n              (click)=\"onCellClicked(cell)\">\n              <span class=\"ix-calendar-body-cell-content ix-focus-indicator\"\n                    [class.ix-calendar-body-selected]=\"cell.selected\"\n                    [class.ix-calendar-body-today]=\"cell.today\"\n                    [class.ix-calendar-body-range-start]=\"cell.rangeStart\"\n                    [class.ix-calendar-body-range-end]=\"cell.rangeEnd\"\n                    [class.ix-calendar-body-in-range]=\"cell.inRange\">\n                {{ cell.value }}\n              </span>\n              <span aria-hidden=\"true\" class=\"ix-calendar-body-cell-preview\"></span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  `,\n  styleUrls: ['./ix-month-view.component.scss']\n})\nexport class IxMonthViewComponent {\n  @Input() set activeDate(date: Date) {\n    this._activeDate.set(date);\n  }\n  get activeDate(): Date {\n    return this._activeDate();\n  }\n  \n  private _activeDate = signal<Date>(new Date());\n  @Input() selected?: Date | null;\n  @Input() minDate?: Date;\n  @Input() maxDate?: Date;\n  @Input() dateFilter?: (date: Date) => boolean;\n  \n  // Range mode inputs\n  @Input() rangeMode = false;\n  \n  @Input() set selectedRange(value: { start: Date | null; end: Date | null; selecting: 'start' | 'end' } | undefined) {\n    this._selectedRange.set(value);\n  }\n  get selectedRange() {\n    return this._selectedRange();\n  }\n  private _selectedRange = signal<{ start: Date | null; end: Date | null; selecting: 'start' | 'end' } | undefined>(undefined);\n\n  @Output() selectedChange = new EventEmitter<Date>();\n  @Output() activeDateChange = new EventEmitter<Date>();\n\n  readonly weekdays = [\n    { long: 'Sunday', short: 'S' },\n    { long: 'Monday', short: 'M' },\n    { long: 'Tuesday', short: 'T' },\n    { long: 'Wednesday', short: 'W' },\n    { long: 'Thursday', short: 'T' },\n    { long: 'Friday', short: 'F' },\n    { long: 'Saturday', short: 'S' },\n  ];\n\n  // Cell sizing now controlled via CSS custom properties in the SCSS file\n  \n\n  calendarRows = computed(() => {\n    const activeDate = this._activeDate();\n    // Include selectedRange signal in the computed dependency so it recalculates when range changes\n    const currentSelectedRange = this._selectedRange();\n    \n    if (!activeDate) return [];\n    \n    const year = activeDate.getFullYear();\n    const month = activeDate.getMonth();\n    const firstDate = new Date(year, month, 1);\n    const lastDate = new Date(year, month + 1, 0);\n    const startDayOfWeek = firstDate.getDay(); // 0 = Sunday, 1 = Monday, etc.\n    \n    const rows: CalendarCell[][] = [];\n    let currentRow: CalendarCell[] = [];\n    \n    // Add empty cells for days before month starts\n    for (let i = 0; i < startDayOfWeek; i++) {\n      currentRow.push(this.createEmptyCell());\n    }\n    \n    // Add all days of the month\n    for (let day = 1; day <= lastDate.getDate(); day++) {\n      const date = new Date(year, month, day);\n      currentRow.push(this.createCell(date, day));\n      \n      // If we have 7 cells, complete the row\n      if (currentRow.length === 7) {\n        rows.push(currentRow);\n        currentRow = [];\n      }\n    }\n    \n    // Fill remaining cells in last row if needed\n    if (currentRow.length > 0) {\n      while (currentRow.length < 7) {\n        currentRow.push(this.createEmptyCell());\n      }\n      rows.push(currentRow);\n    }\n    \n    return rows;\n  });\n\n  private createCell(date: Date, value: number): CalendarCell {\n    const today = new Date();\n    const isToday = this.isSameDate(date, today);\n    const isSelected = this.selected ? this.isSameDate(date, this.selected) : false;\n    const enabled = this.isDateEnabled(date);\n\n    // Range mode calculations\n    let rangeStart = false;\n    let rangeEnd = false;\n    let inRange = false;\n    \n    const currentRange = this._selectedRange();\n    if (this.rangeMode && currentRange) {\n      const { start, end } = currentRange;\n      \n      if (start && this.isSameDate(date, start)) {\n        rangeStart = true;\n      }\n      if (end && this.isSameDate(date, end)) {\n        rangeEnd = true;\n      }\n      if (start && end && date > start && date < end) {\n        inRange = true;\n      }\n    }\n\n    return {\n      value,\n      date: new Date(date),\n      label: date.getDate().toString(),\n      ariaLabel: this.formatAriaLabel(date, isSelected, isToday, rangeStart, rangeEnd, inRange),\n      enabled,\n      selected: isSelected,\n      today: isToday,\n      rangeStart,\n      rangeEnd,\n      inRange,\n    };\n  }\n\n  private createEmptyCell(): CalendarCell {\n    return {\n      value: 0,\n      date: new Date(),\n      label: '',\n      ariaLabel: '',\n      enabled: false,\n      selected: false,\n      today: false,\n    };\n  }\n\n  private isDateEnabled(date: Date): boolean {\n    if (this.minDate && date < this.minDate) return false;\n    if (this.maxDate && date > this.maxDate) return false;\n    if (this.dateFilter && !this.dateFilter(date)) return false;\n    return true;\n  }\n\n  private isSameDate(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear() &&\n           date1.getMonth() === date2.getMonth() &&\n           date1.getDate() === date2.getDate();\n  }\n\n  private formatAriaLabel(\n    date: Date, \n    isSelected: boolean, \n    isToday: boolean,\n    rangeStart?: boolean,\n    rangeEnd?: boolean,\n    inRange?: boolean\n  ): string {\n    let label = date.toLocaleDateString('en', { \n      weekday: 'long', \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n    \n    if (isSelected) label += ' (selected)';\n    if (isToday) label += ' (today)';\n    if (rangeStart) label += ' (range start)';\n    if (rangeEnd) label += ' (range end)';\n    if (inRange) label += ' (in range)';\n    \n    return label;\n  }\n\n  trackByDate(index: number, cell: CalendarCell): string {\n    return cell.date.toISOString();\n  }\n\n  trackByRow(index: number, row: CalendarCell[]): string {\n    return row.map(cell => cell.date.toISOString()).join(',');\n  }\n\n  onCellClicked(cell: CalendarCell): void {\n    if (cell.enabled && cell.value > 0) {\n      this.selectedChange.emit(cell.date);\n    }\n  }\n}","import { Component, Input, Output, EventEmitter, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface YearCell {\n  value: number;\n  year: number;\n  label: string;\n  ariaLabel: string;\n  enabled: boolean;\n  selected: boolean;\n  today: boolean;\n}\n\n@Component({\n  selector: 'ix-multi-year-view',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <table role=\"grid\" class=\"ix-calendar-table\">\n      <!-- Table body with year cells -->\n      <tbody class=\"ix-calendar-body\">\n        <tr role=\"row\" *ngFor=\"let row of yearRows(); let rowIndex = index; trackBy: trackByRow\">\n          <td \n            *ngFor=\"let cell of row; let colIndex = index; trackBy: trackByYear\"\n            role=\"gridcell\"\n            class=\"ix-calendar-body-cell-container\"\n            [attr.data-ix-row]=\"rowIndex\"\n            [attr.data-ix-col]=\"colIndex\"\n            [style.width.%]=\"cellWidth\"\n            [style.padding-top.%]=\"cellAspectRatio\"\n            [style.padding-bottom.%]=\"cellAspectRatio\">\n            <button \n              type=\"button\"\n              class=\"ix-calendar-body-cell\"\n              [class.ix-calendar-body-selected]=\"cell.selected\"\n              [class.ix-calendar-body-today]=\"cell.today\"\n              [class.ix-calendar-body-active]=\"cell.selected\"\n              [disabled]=\"!cell.enabled\"\n              [attr.tabindex]=\"cell.selected ? 0 : -1\"\n              [attr.aria-label]=\"cell.ariaLabel\"\n              [attr.aria-pressed]=\"cell.selected\"\n              [attr.aria-current]=\"cell.today ? 'date' : null\"\n              (click)=\"onYearClicked(cell)\">\n              <span class=\"ix-calendar-body-cell-content ix-focus-indicator\"\n                    [class.ix-calendar-body-selected]=\"cell.selected\"\n                    [class.ix-calendar-body-today]=\"cell.today\">\n                {{ cell.value }}\n              </span>\n              <span aria-hidden=\"true\" class=\"ix-calendar-body-cell-preview\"></span>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  `,\n  styleUrls: ['./ix-multi-year-view.component.scss']\n})\nexport class IxMultiYearViewComponent {\n  @Input() set activeDate(date: Date) {\n    this._activeDate.set(date);\n  }\n  get activeDate(): Date {\n    return this._activeDate();\n  }\n  \n  private _activeDate = signal<Date>(new Date());\n  @Input() selected?: Date | null;\n  @Input() minDate?: Date;\n  @Input() maxDate?: Date;\n  @Input() dateFilter?: (date: Date) => boolean;\n\n  @Output() selectedChange = new EventEmitter<Date>();\n  @Output() activeDateChange = new EventEmitter<Date>();\n\n  readonly cellWidth = 25; // 100/4 for 4 columns\n  readonly cellAspectRatio = 7.14286; // Same as Material\n  readonly yearsPerRow = 4;\n  readonly yearRowCount = 6; // Shows 24 years total (6 rows x 4 columns)\n\n  // Calculate the year range to display\n  yearRange = computed(() => {\n    const activeDate = this._activeDate();\n    const currentYear = activeDate.getFullYear();\n    \n    // Calculate the starting year for a 24-year range\n    // We want the active year to be roughly in the middle\n    const startYear = Math.floor(currentYear / 24) * 24;\n    \n    return { start: startYear, end: startYear + 23 };\n  });\n\n  yearRows = computed(() => {\n    const range = this.yearRange();\n    const rows: YearCell[][] = [];\n    \n    for (let row = 0; row < this.yearRowCount; row++) {\n      const yearRow: YearCell[] = [];\n      \n      for (let col = 0; col < this.yearsPerRow; col++) {\n        const year = range.start + (row * this.yearsPerRow) + col;\n        yearRow.push(this.createYearCell(year));\n      }\n      \n      rows.push(yearRow);\n    }\n    \n    return rows;\n  });\n\n  private createYearCell(year: number): YearCell {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const activeYear = this._activeDate().getFullYear();\n    const selectedYear = this.selected?.getFullYear();\n    \n    const isToday = year === currentYear;\n    const isSelected = year === selectedYear;\n    const isActive = year === activeYear;\n    const enabled = this.isYearEnabled(year);\n\n    return {\n      value: year,\n      year: year,\n      label: year.toString(),\n      ariaLabel: this.formatYearAriaLabel(year, isSelected, isToday),\n      enabled,\n      selected: isSelected,\n      today: isToday,\n    };\n  }\n\n  private isYearEnabled(year: number): boolean {\n    if (this.minDate && year < this.minDate.getFullYear()) return false;\n    if (this.maxDate && year > this.maxDate.getFullYear()) return false;\n    \n    // If we have a date filter, test January 1st of that year\n    if (this.dateFilter) {\n      const testDate = new Date(year, 0, 1);\n      if (!this.dateFilter(testDate)) return false;\n    }\n    \n    return true;\n  }\n\n  private formatYearAriaLabel(year: number, isSelected: boolean, isToday: boolean): string {\n    let label = year.toString();\n    \n    if (isSelected) label += ' (selected)';\n    if (isToday) label += ' (current year)';\n    \n    return label;\n  }\n\n  trackByYear(index: number, cell: YearCell): number {\n    return cell.year;\n  }\n\n  trackByRow(index: number, row: YearCell[]): string {\n    return row.map(cell => cell.year).join(',');\n  }\n\n  onYearClicked(cell: YearCell): void {\n    if (cell.enabled) {\n      // Create a new date with the selected year, keeping current month and day\n      const currentDate = this._activeDate();\n      const newDate = new Date(cell.year, currentDate.getMonth(), currentDate.getDate());\n      this.selectedChange.emit(newDate);\n    }\n  }\n}","import { Component, Input, Output, EventEmitter, signal, computed, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IxCalendarHeaderComponent } from './ix-calendar-header.component';\nimport { IxMonthViewComponent } from './ix-month-view.component';\nimport { IxMultiYearViewComponent } from './ix-multi-year-view.component';\nimport { DateRange } from '../ix-date-range-input/ix-date-range-input.component';\n\n@Component({\n  selector: 'ix-calendar',\n  standalone: true,\n  imports: [CommonModule, IxCalendarHeaderComponent, IxMonthViewComponent, IxMultiYearViewComponent],\n  template: `\n    <ix-calendar-header \n      [currentDate]=\"currentDate()\"\n      [currentView]=\"currentView()\"\n      (monthSelected)=\"onMonthSelected($event)\"\n      (yearSelected)=\"onYearSelected($event)\"\n      (viewChanged)=\"onViewChanged($event)\"\n      (previousClicked)=\"onPreviousClicked()\"\n      (nextClicked)=\"onNextClicked()\">\n    </ix-calendar-header>\n\n    <div class=\"ix-calendar-content\" cdkMonitorSubtreeFocus tabindex=\"-1\">\n      <ix-month-view \n        *ngIf=\"currentView() === 'month'\"\n        [activeDate]=\"currentDate()\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [minDate]=\"minDate\"\n        [maxDate]=\"maxDate\"\n        [rangeMode]=\"rangeMode\"\n        [selectedRange]=\"rangeMode ? rangeState() : undefined\"\n        (selectedChange)=\"onSelectedChange($event)\"\n        (activeDateChange)=\"onActiveDateChange($event)\">\n      </ix-month-view>\n      \n      <!-- Multi-year view -->\n      <ix-multi-year-view \n        *ngIf=\"currentView() === 'year'\"\n        [activeDate]=\"currentDate()\"\n        [selected]=\"selected\"\n        [dateFilter]=\"dateFilter\"\n        [minDate]=\"minDate\"\n        [maxDate]=\"maxDate\"\n        (selectedChange)=\"onYearSelectedFromView($event)\"\n        (activeDateChange)=\"onActiveDateChange($event)\">\n      </ix-multi-year-view>\n    </div>\n  `,\n  styleUrls: ['./ix-calendar.component.scss']\n})\nexport class IxCalendarComponent implements OnInit, OnChanges {\n  @Input() startView: 'month' | 'year' = 'month';\n  @Input() selected?: Date | null;\n  @Input() minDate?: Date;\n  @Input() maxDate?: Date;\n  @Input() dateFilter?: (date: Date) => boolean;\n  \n  // Range mode inputs\n  @Input() rangeMode = false;\n  @Input() selectedRange?: DateRange;\n\n  @Output() selectedChange = new EventEmitter<Date>();\n  @Output() activeDateChange = new EventEmitter<Date>();\n  @Output() viewChanged = new EventEmitter<'month' | 'year'>();\n  \n  // Range mode outputs\n  @Output() selectedRangeChange = new EventEmitter<DateRange>();\n\n  currentDate = signal<Date>(new Date());\n  currentView = signal<'month' | 'year'>('month');\n  \n  // Range selection state - this is the authoritative source for calendar display\n  public rangeState = signal<{\n    start: Date | null;\n    end: Date | null;\n    selecting: 'start' | 'end';\n  }>({\n    start: null,\n    end: null,\n    selecting: 'start'\n  });\n\n  // Track if user has interacted with calendar - once true, ignore external selectedRange\n  private userHasInteracted = false;\n\n  ngOnInit(): void {\n    this.currentView.set(this.startView);\n    \n    // Initialize range state if in range mode (this also handles currentDate)\n    if (this.rangeMode) {\n      this.initializeRangeState();\n    } else if (this.selected) {\n      // For single date mode, navigate to the selected date's month\n      this.currentDate.set(new Date(this.selected));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Only update range state from external selectedRange if user hasn't interacted yet\n    if (changes['selectedRange'] && !this.userHasInteracted && this.rangeMode) {\n      this.initializeRangeState();\n    }\n  }\n\n  private initializeRangeState(): void {\n    if (this.rangeMode) {\n      if (this.selectedRange) {\n        this.rangeState.set({\n          start: this.selectedRange.start,\n          end: this.selectedRange.end,\n          selecting: this.selectedRange.start && this.selectedRange.end ? 'start' : \n                    this.selectedRange.start ? 'end' : 'start'\n        });\n        \n        // Navigate to the month of the selected start date, or end date if no start date\n        const dateToShow = this.selectedRange.start || this.selectedRange.end;\n        if (dateToShow) {\n          this.currentDate.set(new Date(dateToShow));\n        }\n      } else {\n        // No selected range - initialize empty range state\n        this.rangeState.set({\n          start: null,\n          end: null,\n          selecting: 'start'\n        });\n      }\n    }\n  }\n\n  onMonthSelected(month: number): void {\n    const newDate = new Date(this.currentDate());\n    newDate.setMonth(month);\n    this.currentDate.set(newDate);\n    this.currentView.set('month');\n    this.viewChanged.emit('month');\n  }\n\n  onYearSelected(year: number): void {\n    const newDate = new Date(this.currentDate());\n    newDate.setFullYear(year);\n    this.currentDate.set(newDate);\n    this.activeDateChange.emit(newDate);\n  }\n\n  onViewChanged(view: 'month' | 'year'): void {\n    this.currentView.set(view);\n    this.viewChanged.emit(view);\n  }\n\n  onPreviousClicked(): void {\n    const current = this.currentDate();\n    let newDate: Date;\n    \n    if (this.currentView() === 'month') {\n      newDate = new Date(current.getFullYear(), current.getMonth() - 1, 1);\n    } else {\n      // For year view, navigate by 24-year ranges (like Material)\n      newDate = new Date(current.getFullYear() - 24, current.getMonth(), 1);\n    }\n    \n    this.currentDate.set(newDate);\n    this.activeDateChange.emit(newDate);\n  }\n\n  onNextClicked(): void {\n    const current = this.currentDate();\n    let newDate: Date;\n    \n    if (this.currentView() === 'month') {\n      newDate = new Date(current.getFullYear(), current.getMonth() + 1, 1);\n    } else {\n      // For year view, navigate by 24-year ranges (like Material)\n      newDate = new Date(current.getFullYear() + 24, current.getMonth(), 1);\n    }\n    \n    this.currentDate.set(newDate);\n    this.activeDateChange.emit(newDate);\n  }\n\n  onSelectedChange(date: Date): void {\n    if (this.rangeMode) {\n      this.handleRangeSelection(date);\n    } else {\n      this.selectedChange.emit(date);\n    }\n  }\n  \n  private handleRangeSelection(date: Date): void {\n    // Mark that user has interacted - calendar is now authoritative\n    this.userHasInteracted = true;\n    \n    const currentRange = this.rangeState();\n    \n    // If we already have a complete range (both start and end), clear and start fresh\n    if (currentRange.start && currentRange.end && currentRange.selecting === 'start') {\n      const newRangeState = {\n        start: date,\n        end: null,\n        selecting: 'end' as const\n      };\n      this.rangeState.set(newRangeState);\n      this.selectedRangeChange.emit({ start: date, end: null });\n      return;\n    }\n    \n    if (currentRange.selecting === 'start' || !currentRange.start) {\n      // First click or selecting start date - clear any previous range immediately\n      const newRangeState = {\n        start: date,\n        end: null,\n        selecting: 'end' as const\n      };\n      this.rangeState.set(newRangeState);\n      this.selectedRangeChange.emit({ start: date, end: null });\n    } else {\n      // Setting end date\n      const start = currentRange.start!;\n      \n      // If second date is earlier than first, treat it as new start date\n      if (date < start) {\n        const newRangeState = {\n          start: date,\n          end: null,\n          selecting: 'end' as const\n        };\n        this.rangeState.set(newRangeState);\n        this.selectedRangeChange.emit({ start: date, end: null });\n      } else {\n        // Valid end date - complete the range\n        const newRangeState = {\n          start: start,\n          end: date,\n          selecting: 'start' as const\n        };\n        this.rangeState.set(newRangeState);\n        this.selectedRangeChange.emit({ start: start, end: date });\n      }\n    }\n  }\n\n  onActiveDateChange(date: Date): void {\n    this.currentDate.set(date);\n    this.activeDateChange.emit(date);\n  }\n\n  onYearSelectedFromView(date: Date): void {\n    // When a year is selected from the multi-year view, update the current date\n    // and switch back to month view\n    this.currentDate.set(date);\n    this.currentView.set('month');\n    this.viewChanged.emit('month');\n    this.activeDateChange.emit(date);\n  }\n\n  /**\n   * Reset the calendar to accept external range values - called when calendar reopens\n   */\n  resetInteractionState(): void {\n    this.userHasInteracted = false;\n    // Reinitialize range state from selectedRange if provided\n    this.initializeRangeState();\n  }\n}","import { Component, Input, forwardRef, signal, computed, ViewChild, ElementRef, OnInit, ViewContainerRef, TemplateRef, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OverlayModule, Overlay, OverlayRef, ConnectedPosition } from '@angular/cdk/overlay';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { IxInputDirective } from '../ix-input/ix-input.directive';\nimport { IxCalendarComponent } from '../ix-calendar/ix-calendar.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'ix-date-input',\n  standalone: true,\n  imports: [CommonModule, IxInputDirective, IxCalendarComponent, OverlayModule, PortalModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxDateInputComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div class=\"ix-date-input-container\">\n      <div #wrapper ixInput class=\"ix-date-input-wrapper\" style=\"padding-right: 40px;\">\n        <!-- Date segments MM/DD/YYYY -->\n        <div class=\"ix-date-segment-group\">\n          <input \n            #monthInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-month\"\n            placeholder=\"MM\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('month')\"\n            (blur)=\"onSegmentBlur('month')\"\n            (keydown)=\"onSegmentKeydown($event, 'month')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #dayInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-day\"\n            placeholder=\"DD\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('day')\"\n            (blur)=\"onSegmentBlur('day')\"\n            (keydown)=\"onSegmentKeydown($event, 'day')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #yearInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-year\"\n            placeholder=\"YYYY\"\n            maxlength=\"4\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('year')\"\n            (blur)=\"onSegmentBlur('year')\"\n            (keydown)=\"onSegmentKeydown($event, 'year')\">\n        </div>\n        \n        <button \n          type=\"button\"\n          class=\"ix-date-input-toggle\"\n          (click)=\"openDatepicker()\"\n          [disabled]=\"disabled\"\n          aria-label=\"Open calendar\">\n          <span aria-hidden=\"true\">📅</span>\n        </button>\n      </div>\n      \n      <ng-template #calendarTemplate>\n        <ix-calendar\n          class=\"ix-calendar\"\n          [startView]=\"'month'\"\n          [rangeMode]=\"false\"\n          [selected]=\"value()\"\n          (selectedChange)=\"onDateSelected($event)\">\n        </ix-calendar>\n      </ng-template>\n    </div>\n  `,\n  styleUrl: './ix-date-input.component.scss',\n  host: {\n    'class': 'ix-date-input'\n  }\n})\nexport class IxDateInputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @Input() disabled = false;\n  @Input() placeholder = 'Select date';\n  @Input() min?: Date;\n  @Input() max?: Date;\n  @Input() dateFilter?: (date: Date) => boolean;\n\n  @ViewChild('monthInput') monthRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('dayInput') dayRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('yearInput') yearRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('calendarTemplate', { static: true }) calendarTemplate!: TemplateRef<any>;\n  @ViewChild(IxCalendarComponent) calendar!: IxCalendarComponent;\n  @ViewChild('wrapper') wrapperEl!: ElementRef<HTMLDivElement>;\n\n  private destroy$ = new Subject<void>();\n  private overlayRef?: OverlayRef;\n  private portal?: TemplatePortal;\n  isOpen = signal<boolean>(false);\n\n  private onChange = (value: Date | null) => {};\n  private onTouched = () => {};\n\n  value = signal<Date | null>(null);\n  \n  // Individual segment signals\n  month = signal<string>('');\n  day = signal<string>('');\n  year = signal<string>('');\n  \n  constructor(\n    private overlay: Overlay, \n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    // Initialize display values\n    this.updateDisplayValues();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.close();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: Date | null): void {\n    this.value.set(value);\n    this.updateDisplayValues();\n  }\n\n  registerOnChange(fn: (value: Date | null) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Segment event handlers\n  onSegmentFocus(segment: 'month' | 'day' | 'year'): void {\n    // Focus handling\n  }\n\n  onSegmentBlur(segment: 'month' | 'day' | 'year'): void {\n    this.onTouched();\n    // Only validate and update when we have complete values\n    const month = this.monthRef?.nativeElement?.value || '';\n    const day = this.dayRef?.nativeElement?.value || '';\n    const year = this.yearRef?.nativeElement?.value || '';\n    \n    // Only try to create a date if all segments have some value\n    if (month && day && year && year.length === 4) {\n      this.updateDateFromSegments();\n    }\n  }\n\n  onSegmentKeydown(event: KeyboardEvent, segment: 'month' | 'day' | 'year'): void {\n    const input = event.target as HTMLInputElement;\n    \n    // Handle navigation between segments\n    if (event.key === 'ArrowRight') {\n      if (input.selectionStart === input.value.length) {\n        event.preventDefault();\n        this.focusNextSegment(segment);\n      }\n    } else if (event.key === 'ArrowLeft') {\n      if (input.selectionStart === 0) {\n        event.preventDefault();\n        this.focusPrevSegment(segment);\n      }\n    } else if (event.key === 'Backspace') {\n      if (input.value === '' || input.selectionStart === 0) {\n        event.preventDefault();\n        this.focusPrevSegment(segment);\n      }\n    }\n  }\n\n  onDateSelected(date: Date): void {\n    this.updateDate(date);\n    // Close calendar after single date selection\n    this.close();\n  }\n\n  private updateDate(date: Date | null): void {\n    this.value.set(date);\n    this.updateDisplayValues();\n    this.onChange(date);\n  }\n\n  private updateDisplayValues(): void {\n    const date = this.value();\n    \n    if (date) {\n      const monthVal = (date.getMonth() + 1).toString().padStart(2, '0');\n      const dayVal = date.getDate().toString().padStart(2, '0');\n      const yearVal = date.getFullYear().toString();\n      \n      this.month.set(monthVal);\n      this.day.set(dayVal);\n      this.year.set(yearVal);\n      \n      // Update input elements\n      if (this.monthRef?.nativeElement) this.monthRef.nativeElement.value = monthVal;\n      if (this.dayRef?.nativeElement) this.dayRef.nativeElement.value = dayVal;\n      if (this.yearRef?.nativeElement) this.yearRef.nativeElement.value = yearVal;\n    } else {\n      // Clear all values\n      this.month.set('');\n      this.day.set('');\n      this.year.set('');\n      \n      if (this.monthRef?.nativeElement) this.monthRef.nativeElement.value = '';\n      if (this.dayRef?.nativeElement) this.dayRef.nativeElement.value = '';\n      if (this.yearRef?.nativeElement) this.yearRef.nativeElement.value = '';\n    }\n  }\n  \n  private updateDateFromSegments(): void {\n    const month = this.monthRef?.nativeElement?.value || '';\n    const day = this.dayRef?.nativeElement?.value || '';\n    const year = this.yearRef?.nativeElement?.value || '';\n    \n    let date: Date | null = null;\n    if (month && day && year && year.length === 4) {\n      const monthNum = parseInt(month, 10);\n      const dayNum = parseInt(day, 10);\n      const yearNum = parseInt(year, 10);\n      \n      if (monthNum >= 1 && monthNum <= 12 && dayNum >= 1 && dayNum <= 31) {\n        date = new Date(yearNum, monthNum - 1, dayNum);\n        // Validate the date is real\n        if (date.getFullYear() !== yearNum || date.getMonth() !== monthNum - 1 || date.getDate() !== dayNum) {\n          date = null;\n        }\n      }\n    }\n    \n    this.updateDate(date);\n  }\n  \n  private focusNextSegment(segment: 'month' | 'day' | 'year'): void {\n    if (segment === 'month') this.dayRef.nativeElement.focus();\n    else if (segment === 'day') this.yearRef.nativeElement.focus();\n    // Year is the last field\n  }\n  \n  private focusPrevSegment(segment: 'month' | 'day' | 'year'): void {\n    if (segment === 'day') this.monthRef.nativeElement.focus();\n    else if (segment === 'year') this.dayRef.nativeElement.focus();\n    // Month is the first field\n  }\n\n  openDatepicker(): void {\n    if (this.isOpen()) return;\n    \n    this.createOverlay();\n    this.isOpen.set(true);\n    \n    // Reset calendar interaction state when opening\n    if (this.calendar) {\n      setTimeout(() => this.calendar.resetInteractionState(), 0);\n    }\n  }\n\n  close(): void {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n      this.portal = undefined;\n    }\n    this.isOpen.set(false);\n  }\n\n  private createOverlay(): void {\n    if (this.overlayRef) return;\n\n    const positions: ConnectedPosition[] = [\n      {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n      {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n    ];\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.wrapperEl)\n      .withPositions(positions)\n      .withPush(false);\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      panelClass: 'ix-datepicker-overlay'\n    });\n\n    // Close datepicker when backdrop is clicked\n    this.overlayRef.backdropClick().subscribe(() => {\n      this.close();\n    });\n\n    this.portal = new TemplatePortal(this.calendarTemplate, this.viewContainerRef);\n    this.overlayRef.attach(this.portal);\n  }\n}","import { Component, Input, forwardRef, signal, computed, ViewChild, ElementRef, OnInit, ViewContainerRef, TemplateRef, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OverlayModule, Overlay, OverlayRef, ConnectedPosition } from '@angular/cdk/overlay';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { IxInputDirective } from '../ix-input/ix-input.directive';\nimport { IxCalendarComponent } from '../ix-calendar/ix-calendar.component';\nimport { Subject } from 'rxjs';\n\nexport interface DateRange {\n  start: Date | null;\n  end: Date | null;\n}\n\n@Component({\n  selector: 'ix-date-range-input',\n  standalone: true,\n  imports: [CommonModule, IxInputDirective, IxCalendarComponent, OverlayModule, PortalModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxDateRangeInputComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div class=\"ix-date-range-container\">\n      <div #wrapper ixInput class=\"ix-date-range-wrapper\" style=\"padding-right: 40px;\">\n        <!-- Start date segments -->\n        <div class=\"ix-date-segment-group\">\n          <input \n            #startMonthInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-month\"\n            placeholder=\"MM\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('start', 'month')\"\n            (blur)=\"onSegmentBlur('start', 'month')\"\n            (keydown)=\"onSegmentKeydown($event, 'start', 'month')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #startDayInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-day\"\n            placeholder=\"DD\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('start', 'day')\"\n            (blur)=\"onSegmentBlur('start', 'day')\"\n            (keydown)=\"onSegmentKeydown($event, 'start', 'day')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #startYearInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-year\"\n            placeholder=\"YYYY\"\n            maxlength=\"4\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('start', 'year')\"\n            (blur)=\"onSegmentBlur('start', 'year')\"\n            (keydown)=\"onSegmentKeydown($event, 'start', 'year')\">\n        </div>\n        \n        <span class=\"ix-date-range-separator\">–</span>\n        \n        <!-- End date segments -->\n        <div class=\"ix-date-segment-group\">\n          <input \n            #endMonthInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-month\"\n            placeholder=\"MM\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('end', 'month')\"\n            (blur)=\"onSegmentBlur('end', 'month')\"\n            (keydown)=\"onSegmentKeydown($event, 'end', 'month')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #endDayInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-day\"\n            placeholder=\"DD\"\n            maxlength=\"2\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('end', 'day')\"\n            (blur)=\"onSegmentBlur('end', 'day')\"\n            (keydown)=\"onSegmentKeydown($event, 'end', 'day')\">\n          <span class=\"ix-date-segment-separator\">/</span>\n          <input \n            #endYearInput\n            type=\"text\"\n            class=\"ix-date-segment ix-date-segment-year\"\n            placeholder=\"YYYY\"\n            maxlength=\"4\"\n            [disabled]=\"disabled\"\n            (focus)=\"onSegmentFocus('end', 'year')\"\n            (blur)=\"onSegmentBlur('end', 'year')\"\n            (keydown)=\"onSegmentKeydown($event, 'end', 'year')\">\n        </div>\n        \n        <button \n          type=\"button\"\n          class=\"ix-date-range-toggle\"\n          (click)=\"openDatepicker()\"\n          [disabled]=\"disabled\"\n          aria-label=\"Open calendar\">\n          <span aria-hidden=\"true\">📅</span>\n        </button>\n      </div>\n      \n      <ng-template #calendarTemplate>\n        <ix-calendar\n          class=\"ix-calendar\"\n          [startView]=\"'month'\"\n          [rangeMode]=\"true\"\n          [selectedRange]=\"initialRange()\"\n          (selectedRangeChange)=\"onRangeSelected($event)\">\n        </ix-calendar>\n      </ng-template>\n    </div>\n  `,\n  styleUrl: './ix-date-range-input.component.scss',\n  host: {\n    'class': 'ix-date-range-input'\n  }\n})\nexport class IxDateRangeInputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @Input() disabled = false;\n  @Input() placeholder = 'Select date range';\n\n  @ViewChild('startMonthInput') startMonthRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('startDayInput') startDayRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('startYearInput') startYearRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('endMonthInput') endMonthRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('endDayInput') endDayRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('endYearInput') endYearRef!: ElementRef<HTMLInputElement>;\n  @ViewChild('calendarTemplate', { static: true }) calendarTemplate!: TemplateRef<any>;\n  @ViewChild(IxCalendarComponent) calendar!: IxCalendarComponent;\n  @ViewChild('wrapper') wrapperEl!: ElementRef<HTMLDivElement>;\n\n  private destroy$ = new Subject<void>();\n  private overlayRef?: OverlayRef;\n  private portal?: TemplatePortal;\n  isOpen = signal<boolean>(false);\n\n  private onChange = (value: DateRange) => {};\n  private onTouched = () => {};\n\n  value = signal<DateRange>({ start: null, end: null });\n  \n  // Individual segment signals\n  startMonth = signal<string>('');\n  startDay = signal<string>('');\n  startYear = signal<string>('');\n  endMonth = signal<string>('');\n  endDay = signal<string>('');\n  endYear = signal<string>('');\n  \n  private currentFocus: 'start' | 'end' = 'start';\n  // Always provide current range to calendar for initial display\n  initialRange = computed(() => {\n    return this.value();\n  });\n\n  constructor(\n    private overlay: Overlay, \n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    // Initialize display values\n    this.updateDisplayValues();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.close();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: DateRange): void {\n    this.value.set(value || { start: null, end: null });\n    this.updateDisplayValues();\n  }\n\n  registerOnChange(fn: (value: DateRange) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Segment event handlers\n  onSegmentFocus(range: 'start' | 'end', segment: 'month' | 'day' | 'year'): void {\n    this.currentFocus = range;\n  }\n\n  onSegmentBlur(range: 'start' | 'end', segment: 'month' | 'day' | 'year'): void {\n    this.onTouched();\n    // Only validate and update when we have complete values, don't clear partial entries\n    const month = range === 'start' ? (this.startMonthRef?.nativeElement?.value || '') : (this.endMonthRef?.nativeElement?.value || '');\n    const day = range === 'start' ? (this.startDayRef?.nativeElement?.value || '') : (this.endDayRef?.nativeElement?.value || '');\n    const year = range === 'start' ? (this.startYearRef?.nativeElement?.value || '') : (this.endYearRef?.nativeElement?.value || '');\n    \n    // Only try to create a date if all segments have some value\n    if (month && day && year && year.length === 4) {\n      this.updateDateFromSegments(range);\n    }\n  }\n\n\n  onSegmentKeydown(event: KeyboardEvent, range: 'start' | 'end', segment: 'month' | 'day' | 'year'): void {\n    const input = event.target as HTMLInputElement;\n    \n    // Only handle navigation - don't interfere with typing\n    if (event.key === 'ArrowRight') {\n      if (input.selectionStart === input.value.length) {\n        event.preventDefault();\n        this.focusNextSegment(range, segment);\n      }\n    } else if (event.key === 'ArrowLeft') {\n      if (input.selectionStart === 0) {\n        event.preventDefault();\n        this.focusPrevSegment(range, segment);\n      }\n    } else if (event.key === 'Backspace') {\n      if (input.value === '' || input.selectionStart === 0) {\n        event.preventDefault();\n        this.focusPrevSegment(range, segment);\n      }\n    }\n  }\n\n  onRangeSelected(range: DateRange): void {\n    this.updateRange(range);\n    \n    // Handle input field updates and clearing\n    if (range.start && !range.end) {\n      // Start date selected - clear end date input fields immediately\n      if (this.endMonthRef?.nativeElement) this.endMonthRef.nativeElement.value = '';\n      if (this.endDayRef?.nativeElement) this.endDayRef.nativeElement.value = '';\n      if (this.endYearRef?.nativeElement) this.endYearRef.nativeElement.value = '';\n      \n      // Focus end month for next selection\n      setTimeout(() => this.endMonthRef?.nativeElement?.focus(), 0);\n    } else if (range.start && range.end) {\n      // Both dates selected - close calendar\n      this.close();\n    }\n  }\n\n  private updateRange(range: DateRange): void {\n    this.value.set(range);\n    this.updateDisplayValues();\n    this.onChange(range);\n  }\n\n  private updateDisplayValues(): void {\n    const range = this.value();\n    \n    // Update start date segments - only when we have valid dates from calendar\n    if (range.start) {\n      const monthVal = (range.start.getMonth() + 1).toString().padStart(2, '0');\n      const dayVal = range.start.getDate().toString().padStart(2, '0');\n      const yearVal = range.start.getFullYear().toString();\n      \n      this.startMonth.set(monthVal);\n      this.startDay.set(dayVal);\n      this.startYear.set(yearVal);\n      \n      // Only update input elements if they're empty or this is from calendar selection\n      if (this.startMonthRef?.nativeElement) this.startMonthRef.nativeElement.value = monthVal;\n      if (this.startDayRef?.nativeElement) this.startDayRef.nativeElement.value = dayVal;\n      if (this.startYearRef?.nativeElement) this.startYearRef.nativeElement.value = yearVal;\n    }\n    \n    // Update end date segments - only when we have valid dates from calendar  \n    if (range.end) {\n      const monthVal = (range.end.getMonth() + 1).toString().padStart(2, '0');\n      const dayVal = range.end.getDate().toString().padStart(2, '0');\n      const yearVal = range.end.getFullYear().toString();\n      \n      this.endMonth.set(monthVal);\n      this.endDay.set(dayVal);\n      this.endYear.set(yearVal);\n      \n      // Only update input elements if they're empty or this is from calendar selection\n      if (this.endMonthRef?.nativeElement) this.endMonthRef.nativeElement.value = monthVal;\n      if (this.endDayRef?.nativeElement) this.endDayRef.nativeElement.value = dayVal;\n      if (this.endYearRef?.nativeElement) this.endYearRef.nativeElement.value = yearVal;\n    }\n  }\n  \n  private setSegmentValue(range: 'start' | 'end', segment: 'month' | 'day' | 'year', value: string): void {\n    if (range === 'start') {\n      if (segment === 'month') this.startMonth.set(value);\n      else if (segment === 'day') this.startDay.set(value);\n      else if (segment === 'year') this.startYear.set(value);\n    } else {\n      if (segment === 'month') this.endMonth.set(value);\n      else if (segment === 'day') this.endDay.set(value);\n      else if (segment === 'year') this.endYear.set(value);\n    }\n  }\n  \n  private updateDateFromSegments(range: 'start' | 'end'): void {\n    let month: string, day: string, year: string;\n    \n    if (range === 'start') {\n      month = this.startMonthRef?.nativeElement?.value || '';\n      day = this.startDayRef?.nativeElement?.value || '';\n      year = this.startYearRef?.nativeElement?.value || '';\n    } else {\n      month = this.endMonthRef?.nativeElement?.value || '';\n      day = this.endDayRef?.nativeElement?.value || '';\n      year = this.endYearRef?.nativeElement?.value || '';\n    }\n    \n    let date: Date | null = null;\n    if (month && day && year && year.length === 4) {\n      const monthNum = parseInt(month, 10);\n      const dayNum = parseInt(day, 10);\n      const yearNum = parseInt(year, 10);\n      \n      if (monthNum >= 1 && monthNum <= 12 && dayNum >= 1 && dayNum <= 31) {\n        date = new Date(yearNum, monthNum - 1, dayNum);\n        // Validate the date is real (handles Feb 30, etc.)\n        if (date.getFullYear() !== yearNum || date.getMonth() !== monthNum - 1 || date.getDate() !== dayNum) {\n          date = null;\n        }\n      }\n    }\n    \n    const currentValue = this.value();\n    if (range === 'start') {\n      this.updateRange({ start: date, end: currentValue.end });\n    } else {\n      this.updateRange({ start: currentValue.start, end: date });\n    }\n  }\n  \n  private focusNextSegment(range: 'start' | 'end', segment: 'month' | 'day' | 'year'): void {\n    if (range === 'start') {\n      if (segment === 'month') this.startDayRef.nativeElement.focus();\n      else if (segment === 'day') this.startYearRef.nativeElement.focus();\n      else if (segment === 'year') this.endMonthRef.nativeElement.focus();\n    } else {\n      if (segment === 'month') this.endDayRef.nativeElement.focus();\n      else if (segment === 'day') this.endYearRef.nativeElement.focus();\n      // End year is the last field - could focus calendar button or just stay\n    }\n  }\n  \n  private focusPrevSegment(range: 'start' | 'end', segment: 'month' | 'day' | 'year'): void {\n    if (range === 'start') {\n      // Start month is the first field - nowhere to go back\n      if (segment === 'day') this.startMonthRef.nativeElement.focus();\n      else if (segment === 'year') this.startDayRef.nativeElement.focus();\n    } else {\n      if (segment === 'month') this.startYearRef.nativeElement.focus();\n      else if (segment === 'day') this.endMonthRef.nativeElement.focus();\n      else if (segment === 'year') this.endDayRef.nativeElement.focus();\n    }\n  }\n\n  private formatDate(date: Date): string {\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const year = date.getFullYear().toString();\n    return `${month}/${day}/${year}`;\n  }\n\n  private parseDate(dateStr: string): Date | null {\n    if (!dateStr || dateStr.trim() === '') {\n      return null;\n    }\n\n    // Try parsing common date formats\n    const formats = [\n      /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/, // MM/DD/YYYY\n      /^(\\d{1,2})-(\\d{1,2})-(\\d{4})$/,   // MM-DD-YYYY\n      /^(\\d{4})-(\\d{1,2})-(\\d{1,2})$/    // YYYY-MM-DD\n    ];\n\n    for (const format of formats) {\n      const match = dateStr.match(format);\n      if (match) {\n        let month: number, day: number, year: number;\n        \n        if (format === formats[2]) { // YYYY-MM-DD\n          year = parseInt(match[1], 10);\n          month = parseInt(match[2], 10) - 1;\n          day = parseInt(match[3], 10);\n        } else { // MM/DD/YYYY or MM-DD-YYYY\n          month = parseInt(match[1], 10) - 1;\n          day = parseInt(match[2], 10);\n          year = parseInt(match[3], 10);\n        }\n\n        const date = new Date(year, month, day);\n        \n        // Validate the date\n        if (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) {\n          return date;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  openDatepicker(): void {\n    if (this.isOpen()) return;\n    \n    this.createOverlay();\n    this.isOpen.set(true);\n    \n    // Reset calendar interaction state when opening\n    if (this.calendar) {\n      setTimeout(() => this.calendar.resetInteractionState(), 0);\n    }\n  }\n\n  close(): void {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n      this.portal = undefined;\n    }\n    this.isOpen.set(false);\n  }\n\n  private createOverlay(): void {\n    if (this.overlayRef) return;\n\n    const positions: ConnectedPosition[] = [\n      {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n      {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n    ];\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.wrapperEl)\n      .withPositions(positions)\n      .withPush(false);\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      panelClass: 'ix-datepicker-overlay'\n    });\n\n    // Close datepicker when backdrop is clicked\n    this.overlayRef.backdropClick().subscribe(() => {\n      this.close();\n    });\n\n    this.portal = new TemplatePortal(this.calendarTemplate, this.viewContainerRef);\n    this.overlayRef.attach(this.portal);\n  }\n}","import { Component, Input, forwardRef, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { IxSelectComponent, IxSelectOption } from '../ix-select/ix-select.component';\n\n@Component({\n  selector: 'ix-time-input',\n  standalone: true,\n  imports: [CommonModule, FormsModule, IxSelectComponent],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxTimeInputComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <ix-select\n      [options]=\"timeSelectOptions()\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [testId]=\"testId\"\n      [ngModel]=\"_value\"\n      (selectionChange)=\"onSelectionChange($event)\">\n    </ix-select>\n  `,\n  styleUrl: './ix-time-input.component.scss',\n  host: {\n    'class': 'ix-time-input'\n  }\n})\nexport class IxTimeInputComponent implements ControlValueAccessor {\n  @Input() disabled = false;\n  @Input() format: '12h' | '24h' = '12h';\n  @Input() granularity: '15m' | '30m' | '1h' = '15m';\n  @Input() placeholder = 'Pick a time';\n  @Input() testId = '';\n\n  private get step(): number {\n    switch (this.granularity) {\n      case '15m': return 15;\n      case '30m': return 30;\n      case '1h': return 60;\n      default: return 15;\n    }\n  }\n\n  private onChange = (value: string) => {};\n  private onTouched = () => {};\n\n  public _value: string | null = null;\n  \n  // Generate time options for ix-select\n  timeSelectOptions = computed((): IxSelectOption[] => {\n    const options: IxSelectOption[] = [];\n    const totalMinutes = 24 * 60; // Total minutes in a day\n    \n    for (let minutes = 0; minutes < totalMinutes; minutes += this.step) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      \n      if (this.format === '24h') {\n        const timeStr = `${hours.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}`;\n        options.push({ value: timeStr, label: timeStr });\n      } else {\n        const displayHour = hours === 0 ? 12 : hours > 12 ? hours - 12 : hours;\n        const ampm = hours < 12 ? 'AM' : 'PM';\n        const timeStr = `${displayHour}:${mins.toString().padStart(2, '0')} ${ampm}`;\n        options.push({ value: timeStr, label: timeStr });\n      }\n    }\n    \n    return options;\n  });\n\n\n  // ControlValueAccessor implementation\n  writeValue(value: string): void {\n    this._value = value || null;\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Event handlers\n  onSelectionChange(value: string): void {\n    this._value = value;\n    this.onChange(value);\n    this.onTouched();\n  }\n}","import { Directive, ElementRef, HostListener, Input, OnInit, OnDestroy, forwardRef, Inject } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Directive({\n  selector: 'input[ixSliderThumb]',\n  standalone: true,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxSliderThumbDirective),\n      multi: true\n    }\n  ],\n  host: {\n    'type': 'range',\n    'class': 'ix-slider-thumb',\n    '[disabled]': 'slider?.disabled',\n    '[attr.min]': 'slider?.min',\n    '[attr.max]': 'slider?.max',\n    '[attr.step]': 'slider?.step',\n    '[value]': 'slider?.value()',\n    '(input)': 'onInput($event)',\n    '(change)': 'onChange($event)',\n    '(blur)': 'onTouched()',\n    '(mousedown)': 'onMouseDown($event)',\n    '(touchstart)': 'onTouchStart($event)'\n  }\n})\nexport class IxSliderThumbDirective implements ControlValueAccessor, OnInit, OnDestroy {\n  @Input() disabled = false;\n\n  slider: any; // Will be set by parent slider component\n  \n  private onChangeCallback = (value: number) => {};\n  private onTouched = () => {};\n  private isDragging = false;\n\n  constructor(private elementRef: ElementRef<HTMLInputElement>) {}\n\n  ngOnInit() {\n    // Make the native input visually hidden but still accessible\n    const input = this.elementRef.nativeElement;\n    input.style.opacity = '0';\n    input.style.position = 'absolute';\n    input.style.width = '100%';\n    input.style.height = '100%';\n    input.style.margin = '0';\n    input.style.padding = '0';\n    input.style.cursor = 'pointer';\n    input.style.zIndex = '2';\n  }\n\n  ngOnDestroy() {\n    this.cleanup();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: number): void {\n    if (this.elementRef.nativeElement) {\n      this.elementRef.nativeElement.value = value?.toString() || '0';\n    }\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (this.elementRef.nativeElement) {\n      this.elementRef.nativeElement.disabled = isDisabled;\n    }\n  }\n\n  onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = parseFloat(input.value);\n    \n    if (this.slider) {\n      this.slider.updateValue(value);\n    }\n    this.onChangeCallback(value);\n  }\n\n  onChange(event: Event): void {\n    this.onTouched();\n  }\n\n  onMouseDown(event: MouseEvent): void {\n    if (this.disabled) return;\n    this.isDragging = true;\n    this.addGlobalListeners();\n    event.stopPropagation(); // Prevent track click\n  }\n\n  onTouchStart(event: TouchEvent): void {\n    if (this.disabled) return;\n    this.isDragging = true;\n    this.addGlobalListeners();\n    event.stopPropagation(); // Prevent track click\n  }\n\n  private addGlobalListeners(): void {\n    document.addEventListener('mousemove', this.onGlobalMouseMove);\n    document.addEventListener('mouseup', this.onGlobalMouseUp);\n    document.addEventListener('touchmove', this.onGlobalTouchMove, { passive: false });\n    document.addEventListener('touchend', this.onGlobalTouchEnd);\n  }\n\n  private removeGlobalListeners(): void {\n    document.removeEventListener('mousemove', this.onGlobalMouseMove);\n    document.removeEventListener('mouseup', this.onGlobalMouseUp);\n    document.removeEventListener('touchmove', this.onGlobalTouchMove);\n    document.removeEventListener('touchend', this.onGlobalTouchEnd);\n  }\n\n  private onGlobalMouseMove = (event: MouseEvent): void => {\n    if (!this.isDragging || this.disabled) return;\n    event.preventDefault();\n    this.updateValueFromPosition(event.clientX);\n  };\n\n  private onGlobalMouseUp = (): void => {\n    if (this.isDragging) {\n      this.isDragging = false;\n      this.onTouched();\n      this.removeGlobalListeners();\n    }\n  };\n\n  private onGlobalTouchMove = (event: TouchEvent): void => {\n    if (!this.isDragging || this.disabled) return;\n    event.preventDefault();\n    const touch = event.touches[0];\n    this.updateValueFromPosition(touch.clientX);\n  };\n\n  private onGlobalTouchEnd = (): void => {\n    if (this.isDragging) {\n      this.isDragging = false;\n      this.onTouched();\n      this.removeGlobalListeners();\n    }\n  };\n\n  private updateValueFromPosition(clientX: number): void {\n    if (!this.slider) return;\n    \n    const rect = this.slider.getSliderRect();\n    const percentage = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));\n    const newValue = this.slider.min + (percentage * (this.slider.max - this.slider.min));\n    \n    this.slider.updateValue(newValue);\n  }\n\n  private cleanup(): void {\n    this.removeGlobalListeners();\n  }\n}","import { Component, ContentChild, Input, forwardRef, signal, computed, ViewChild, ElementRef, OnInit, OnDestroy, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { IxSliderThumbDirective } from './ix-slider-thumb.directive';\n\nexport type LabelType = 'none' | 'handle' | 'track' | 'both';\n\n@Component({\n  selector: 'ix-slider',\n  standalone: true,\n  imports: [CommonModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxSliderComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div \n      class=\"ix-slider-container\"\n      #sliderContainer\n      [attr.aria-disabled]=\"disabled\"\n      [attr.data-disabled]=\"disabled\"\n      (mousedown)=\"onTrackClick($event)\"\n      (touchstart)=\"onTrackClick($event)\">\n      \n      <div class=\"ix-slider-track\">\n        <div class=\"ix-slider-track-inactive\"></div>\n        <div class=\"ix-slider-track-active\">\n          <div \n            class=\"ix-slider-track-active-fill\" \n            [style.transform]=\"'scaleX(' + fillScale() + ')'\">\n          </div>\n        </div>\n        <div \n          class=\"ix-slider-track-label\"\n          *ngIf=\"(labelType === 'track' || labelType === 'both') && showLabel()\">\n          {{ labelPrefix }}{{ value() }}{{ labelSuffix }}\n        </div>\n      </div>\n      \n      <div \n        class=\"ix-slider-thumb-visual\"\n        #thumbVisual\n        [style.transform]=\"'translateX(' + thumbPosition() + 'px)'\">\n        <div class=\"ix-slider-thumb-knob\"></div>\n        <div \n          class=\"ix-slider-thumb-label\"\n          *ngIf=\"(labelType === 'handle' || labelType === 'both') && showLabel()\"\n          [class.visible]=\"labelVisible()\">\n          {{ labelPrefix }}{{ value() }}{{ labelSuffix }}\n        </div>\n      </div>\n      \n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrl: './ix-slider.component.scss',\n  host: {\n    'class': 'ix-slider',\n    '[attr.aria-disabled]': 'disabled'\n  }\n})\nexport class IxSliderComponent implements ControlValueAccessor, OnInit, OnDestroy, AfterViewInit, OnChanges {\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() step = 1;\n  @Input() disabled = false;\n  @Input() labelPrefix = '';\n  @Input() labelSuffix = '';\n  @Input() labelType: LabelType = 'none';\n\n  @ContentChild(IxSliderThumbDirective) thumbDirective!: IxSliderThumbDirective;\n  @ViewChild('sliderContainer') sliderContainer!: ElementRef<HTMLDivElement>;\n  @ViewChild('thumbVisual') thumbVisual!: ElementRef<HTMLDivElement>;\n\n  private onChange = (value: number) => {};\n  private onTouched = () => {};\n  \n  value = signal<number>(0);\n  private _showLabel = signal<boolean>(false);\n  private _labelVisible = signal<boolean>(false);\n\n  // Computed percentage for track fill\n  fillPercentage = computed(() => {\n    const range = this.max - this.min;\n    if (range === 0) return 0;\n    return ((this.value() - this.min) / range) * 100;\n  });\n\n  // Computed scale for track fill (0 to 1)\n  fillScale = computed(() => {\n    return this.fillPercentage() / 100;\n  });\n\n  // Computed position for thumb (in pixels from left)\n  thumbPosition = computed(() => {\n    const containerWidth = this.sliderContainer?.nativeElement?.offsetWidth || 0;\n    const percentage = this.fillPercentage();\n    // Center the thumb (20px width, so -10px offset)\n    return (containerWidth * percentage / 100) - 10;\n  });\n\n  // Public signals for label management\n  showLabel = this._showLabel.asReadonly();\n  labelVisible = this._labelVisible.asReadonly();\n\n  ngOnInit() {\n    // Enable label if labelType is not 'none'\n    if (this.labelType !== 'none') {\n      this.enableLabel();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['labelType']) {\n      if (this.labelType !== 'none') {\n        this.enableLabel();\n        // Set up interaction listeners for handle type after view init\n        if (this.sliderContainer && (this.labelType === 'handle' || this.labelType === 'both')) {\n          this.setupHandleInteractionListeners();\n        }\n      } else {\n        // Disable label and clean up listeners\n        this._showLabel.set(false);\n        this.cleanupHandleInteractionListeners();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    // Initialize thumb directive if present\n    if (this.thumbDirective) {\n      this.thumbDirective.slider = this;\n    }\n    this.updateThumbPosition();\n    \n    // Set up handle interaction listeners if labelType is handle or both\n    if ((this.labelType === 'handle' || this.labelType === 'both') && this._showLabel()) {\n      this.setupHandleInteractionListeners();\n    }\n  }\n\n  ngOnDestroy() {\n    this.cleanupHandleInteractionListeners();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: number): void {\n    if (value !== null && value !== undefined) {\n      this.value.set(this.clampValue(value));\n    }\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Public methods for thumb directive and label management\n  updateValue(newValue: number): void {\n    const clampedValue = this.clampValue(newValue);\n    this.value.set(clampedValue);\n    this.onChange(clampedValue);\n    this.updateThumbPosition();\n  }\n\n  enableLabel(): void {\n    this._showLabel.set(true);\n  }\n\n  showThumbLabel(): void {\n    this._labelVisible.set(true);\n  }\n\n  hideThumbLabel(): void {\n    this._labelVisible.set(false);\n  }\n\n  getSliderRect(): DOMRect {\n    return this.sliderContainer.nativeElement.getBoundingClientRect();\n  }\n\n  onTrackClick(event: MouseEvent | TouchEvent): void {\n    if (this.disabled) return;\n    \n    event.preventDefault();\n    const rect = this.getSliderRect();\n    const clientX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n    const percentage = (clientX - rect.left) / rect.width;\n    const newValue = this.min + (percentage * (this.max - this.min));\n    \n    this.updateValue(newValue);\n    this.onTouched();\n  }\n\n  private updateThumbPosition(): void {\n    // Thumb position is now handled by computed signal and template binding\n    // No manual DOM manipulation needed\n  }\n\n  private clampValue(value: number): number {\n    // Clamp to min/max\n    let clampedValue = Math.max(this.min, Math.min(this.max, value));\n    \n    // Snap to step\n    if (this.step > 0) {\n      const steps = Math.round((clampedValue - this.min) / this.step);\n      clampedValue = this.min + (steps * this.step);\n    }\n    \n    return clampedValue;\n  }\n\n  // Handle interaction listeners for tooltip-style labels\n  private setupHandleInteractionListeners(): void {\n    if (this.sliderContainer) {\n      const containerEl = this.sliderContainer.nativeElement;\n      const thumbInput = containerEl.querySelector('input[ixSliderThumb]');\n      \n      containerEl.addEventListener('mousedown', this.onInteractionStart);\n      containerEl.addEventListener('touchstart', this.onInteractionStart);\n      \n      if (thumbInput) {\n        thumbInput.addEventListener('mousedown', this.onInteractionStart);\n        thumbInput.addEventListener('touchstart', this.onInteractionStart);\n      }\n      \n      document.addEventListener('mouseup', this.onInteractionEnd);\n      document.addEventListener('touchend', this.onInteractionEnd);\n    }\n  }\n\n  private cleanupHandleInteractionListeners(): void {\n    if (this.sliderContainer) {\n      const containerEl = this.sliderContainer.nativeElement;\n      const thumbInput = containerEl.querySelector('input[ixSliderThumb]');\n      \n      containerEl.removeEventListener('mousedown', this.onInteractionStart);\n      containerEl.removeEventListener('touchstart', this.onInteractionStart);\n      \n      if (thumbInput) {\n        thumbInput.removeEventListener('mousedown', this.onInteractionStart);\n        thumbInput.removeEventListener('touchstart', this.onInteractionStart);\n      }\n      \n      document.removeEventListener('mouseup', this.onInteractionEnd);\n      document.removeEventListener('touchend', this.onInteractionEnd);\n    }\n  }\n\n  private onInteractionStart = (): void => {\n    if (this.labelType === 'handle' || this.labelType === 'both') {\n      this.showThumbLabel();\n    }\n  }\n\n  private onInteractionEnd = (): void => {\n    if (this.labelType === 'handle' || this.labelType === 'both') {\n      this.hideThumbLabel();\n    }\n  }\n}","import { \n  Directive, \n  ElementRef, \n  OnDestroy, \n  OnInit,\n  Input,\n  Host\n} from '@angular/core';\nimport { IxSliderComponent } from './ix-slider.component';\n\n@Directive({\n  selector: 'ix-slider[ixSliderWithLabel]',\n  standalone: true\n})\nexport class IxSliderWithLabelDirective implements OnInit, OnDestroy {\n  @Input('ixSliderWithLabel') enabled: boolean | string = true;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    @Host() private _slider: IxSliderComponent\n  ) {}\n\n  ngOnInit() {\n    const isEnabled = this.enabled === true || this.enabled === '' || this.enabled === 'true';\n    \n    if (!isEnabled) {\n      return;\n    }\n\n    // Enable the label in the slider component\n    this._slider.enableLabel();\n    \n    // Set default labelType to 'handle' if not already set\n    if (this._slider.labelType === 'none') {\n      this._slider.labelType = 'handle';\n    }\n    \n    // Only set up event listeners for handle type labels (tooltip behavior)\n    if (this._slider.labelType === 'handle') {\n      this._setupInteractionListeners();\n    }\n  }\n\n  private _setupInteractionListeners(): void {\n    const sliderContainer = this._elementRef.nativeElement.querySelector('.ix-slider-container');\n    const thumbInput = this._elementRef.nativeElement.querySelector('input[ixSliderThumb]');\n    \n    if (sliderContainer) {\n      sliderContainer.addEventListener('mousedown', this._onInteractionStart);\n      sliderContainer.addEventListener('touchstart', this._onInteractionStart);\n    }\n    \n    if (thumbInput) {\n      thumbInput.addEventListener('mousedown', this._onInteractionStart);\n      thumbInput.addEventListener('touchstart', this._onInteractionStart);\n    }\n    \n    document.addEventListener('mouseup', this._onInteractionEnd);\n    document.addEventListener('touchend', this._onInteractionEnd);\n  }\n\n  ngOnDestroy() {\n    this._cleanup();\n  }\n\n\n  private _onInteractionStart = (event: Event): void => {\n    this._slider.showThumbLabel();\n  }\n\n  private _onInteractionEnd = (): void => {\n    this._slider.hideThumbLabel();\n  }\n\n  private _cleanup(): void {\n    // Only clean up interaction listeners if they were set up for handle type\n    if (this._slider.labelType === 'handle') {\n      const sliderContainer = this._elementRef.nativeElement.querySelector('.ix-slider-container');\n      const thumbInput = this._elementRef.nativeElement.querySelector('input[ixSliderThumb]');\n      \n      if (sliderContainer) {\n        sliderContainer.removeEventListener('mousedown', this._onInteractionStart);\n        sliderContainer.removeEventListener('touchstart', this._onInteractionStart);\n      }\n      \n      if (thumbInput) {\n        thumbInput.removeEventListener('mousedown', this._onInteractionStart);\n        thumbInput.removeEventListener('touchstart', this._onInteractionStart);\n      }\n      \n      document.removeEventListener('mouseup', this._onInteractionEnd);\n      document.removeEventListener('touchend', this._onInteractionEnd);\n    }\n  }\n}","import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy, ViewEncapsulation, HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { IxButtonToggleGroupComponent } from './ix-button-toggle-group.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ix-button-toggle',\n  standalone: true,\n  imports: [CommonModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxButtonToggleComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <button\n      type=\"button\"\n      class=\"ix-button-toggle__button\"\n      [class.ix-button-toggle__button--checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [attr.aria-pressed]=\"checked\"\n      [attr.aria-label]=\"ariaLabel || null\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.id]=\"buttonId\"\n      (click)=\"toggle()\">\n      <span class=\"ix-button-toggle__label\">\n        <span class=\"ix-button-toggle__check\" *ngIf=\"checked\">✓</span>\n        <ng-content></ng-content>\n      </span>\n    </button>\n  `,\n  styleUrl: './ix-button-toggle.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'ix-button-toggle',\n    '[attr.id]': 'id',\n    '[class.ix-button-toggle--checked]': 'checked',\n    '[class.ix-button-toggle--disabled]': 'disabled',\n    '[class.ix-button-toggle--standalone]': '!buttonToggleGroup'\n  }\n})\nexport class IxButtonToggleComponent implements ControlValueAccessor {\n  private static _uniqueIdCounter = 0;\n\n  @Input() id: string = `ix-button-toggle-${IxButtonToggleComponent._uniqueIdCounter++}`;\n  @Input() value: any;\n  @Input() disabled = false;\n  @Input() checked = false;\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n\n  @Output() change = new EventEmitter<{ source: IxButtonToggleComponent; value: any }>();\n\n  buttonId: string;\n  buttonToggleGroup?: IxButtonToggleGroupComponent;\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.buttonId = this.id + '-button';\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // If part of a group, let the group handle the state\n    if (this.buttonToggleGroup) {\n      this.buttonToggleGroup._onButtonToggleClick(this);\n    } else {\n      // Standalone toggle - handle its own state\n      this.checked = !this.checked;\n      this.onChange(this.checked);\n      this.onTouched();\n      \n      this.change.emit({\n        source: this,\n        value: this.value || this.checked\n      });\n    }\n  }\n\n  @HostListener('focus')\n  focus(): void {\n    this.onTouched();\n  }\n\n  // Method for group to mark this toggle as checked\n  _markForCheck(): void {\n    this.checked = true;\n    this.cdr.markForCheck();\n  }\n\n  // Method for group to mark this toggle as unchecked\n  _markForUncheck(): void {\n    this.checked = false;\n    this.cdr.markForCheck();\n  }\n}","import { Component, ContentChildren, QueryList, Input, Output, EventEmitter, forwardRef, AfterContentInit, OnDestroy, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { IxButtonToggleComponent } from './ix-button-toggle.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type IxButtonToggleType = 'checkbox' | 'radio';\n\n@Component({\n  selector: 'ix-button-toggle-group',\n  standalone: true,\n  imports: [CommonModule, A11yModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxButtonToggleGroupComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div class=\"ix-button-toggle-group\" \n         [attr.role]=\"multiple ? 'group' : 'radiogroup'\"\n         [attr.aria-label]=\"ariaLabel\"\n         [attr.aria-labelledby]=\"ariaLabelledby\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrl: './ix-button-toggle-group.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'ix-button-toggle-group'\n  }\n})\nexport class IxButtonToggleGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(IxButtonToggleComponent, { descendants: true }) buttonToggles!: QueryList<IxButtonToggleComponent>;\n\n  @Input() multiple = false;\n  @Input() disabled = false;\n  @Input() name: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n\n  @Output() change = new EventEmitter<{ source: IxButtonToggleComponent; value: any }>();\n\n  private selectedValue: any = null;\n  private selectedValues: any[] = [];\n  private destroy$ = new Subject<void>();\n\n  private onChange = (value: any) => {};\n  private onTouched = () => {};\n\n  ngAfterContentInit(): void {\n    this.buttonToggles.forEach(toggle => {\n      toggle.buttonToggleGroup = this;\n    });\n\n    // Listen for changes in the button toggles\n    this.buttonToggles.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.buttonToggles.forEach(toggle => {\n        toggle.buttonToggleGroup = this;\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: any): void {\n    if (this.multiple) {\n      this.selectedValues = Array.isArray(value) ? value : [];\n      this.updateTogglesFromValues();\n    } else {\n      this.selectedValue = value;\n      this.updateTogglesFromValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (this.buttonToggles) {\n      this.buttonToggles.forEach(toggle => {\n        toggle.disabled = isDisabled;\n      });\n    }\n  }\n\n  _onButtonToggleClick(clickedToggle: IxButtonToggleComponent): void {\n    if (this.disabled || clickedToggle.disabled) {\n      return;\n    }\n\n    if (this.multiple) {\n      this.handleMultipleSelection(clickedToggle);\n    } else {\n      this.handleSingleSelection(clickedToggle);\n    }\n\n    this.onTouched();\n    this.change.emit({\n      source: clickedToggle,\n      value: this.multiple ? this.selectedValues : this.selectedValue\n    });\n  }\n\n  private handleSingleSelection(clickedToggle: IxButtonToggleComponent): void {\n    // In radio mode, clicking the same toggle deselects it\n    if (this.selectedValue === clickedToggle.value) {\n      this.selectedValue = null;\n      clickedToggle._markForUncheck();\n    } else {\n      // Deselect all others\n      this.buttonToggles.forEach(toggle => {\n        if (toggle !== clickedToggle) {\n          toggle._markForUncheck();\n        }\n      });\n      \n      this.selectedValue = clickedToggle.value;\n      clickedToggle._markForCheck();\n    }\n\n    this.onChange(this.selectedValue);\n  }\n\n  private handleMultipleSelection(clickedToggle: IxButtonToggleComponent): void {\n    const index = this.selectedValues.indexOf(clickedToggle.value);\n    \n    if (index > -1) {\n      // Remove from selection\n      this.selectedValues.splice(index, 1);\n      clickedToggle._markForUncheck();\n    } else {\n      // Add to selection\n      this.selectedValues.push(clickedToggle.value);\n      clickedToggle._markForCheck();\n    }\n\n    this.onChange([...this.selectedValues]);\n  }\n\n  private updateTogglesFromValue(): void {\n    if (!this.buttonToggles) return;\n\n    this.buttonToggles.forEach(toggle => {\n      if (toggle.value === this.selectedValue) {\n        toggle._markForCheck();\n      } else {\n        toggle._markForUncheck();\n      }\n    });\n  }\n\n  private updateTogglesFromValues(): void {\n    if (!this.buttonToggles) return;\n\n    this.buttonToggles.forEach(toggle => {\n      if (this.selectedValues.includes(toggle.value)) {\n        toggle._markForCheck();\n      } else {\n        toggle._markForUncheck();\n      }\n    });\n  }\n}","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-tooltip',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div \n      class=\"ix-tooltip\" \n      [id]=\"id\"\n      role=\"tooltip\"\n      [attr.aria-hidden]=\"false\">\n      {{ message }}\n    </div>\n  `,\n  styleUrl: './ix-tooltip.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'ix-tooltip-component'\n  }\n})\nexport class IxTooltipComponent {\n  @Input() message = '';\n  @Input() id = '';\n}","import { \n  Directive, \n  ElementRef, \n  Input, \n  OnDestroy, \n  HostListener,\n  ViewContainerRef,\n  OnInit,\n  TemplateRef,\n  ComponentRef\n} from '@angular/core';\nimport { \n  Overlay, \n  OverlayRef, \n  ConnectedPosition,\n  OverlayPositionBuilder \n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { IxTooltipComponent } from './ix-tooltip.component';\n\nexport type TooltipPosition = 'above' | 'below' | 'left' | 'right' | 'before' | 'after';\n\n@Directive({\n  selector: '[ixTooltip]',\n  standalone: true,\n  host: {\n    '[attr.aria-describedby]': '_ariaDescribedBy',\n  }\n})\nexport class IxTooltipDirective implements OnInit, OnDestroy {\n  @Input('ixTooltip') message = '';\n  @Input('ixTooltipPosition') position: TooltipPosition = 'above';\n  @Input('ixTooltipDisabled') disabled = false;\n  @Input('ixTooltipShowDelay') showDelay = 0;\n  @Input('ixTooltipHideDelay') hideDelay = 0;\n  @Input('ixTooltipClass') tooltipClass = '';\n\n  private _overlayRef: OverlayRef | null = null;\n  private _tooltipInstance: ComponentRef<IxTooltipComponent> | null = null;\n  private _showTimeout: any;\n  private _hideTimeout: any;\n  private _isTooltipVisible = false;\n  private _ariaDescribedBy: string | null = null;\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _viewContainerRef: ViewContainerRef,\n    private _overlayPositionBuilder: OverlayPositionBuilder\n  ) {}\n\n  ngOnInit() {\n    // Generate unique ID for aria-describedby\n    this._ariaDescribedBy = `ix-tooltip-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  ngOnDestroy() {\n    this._clearTimeouts();\n    this.hide(0);\n    \n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  @HostListener('mouseenter')\n  _onMouseEnter(): void {\n    if (!this.disabled && this.message) {\n      this.show(this.showDelay);\n    }\n  }\n\n  @HostListener('mouseleave')\n  _onMouseLeave(): void {\n    this.hide(this.hideDelay);\n  }\n\n  @HostListener('focus')\n  _onFocus(): void {\n    if (!this.disabled && this.message) {\n      this.show(this.showDelay);\n    }\n  }\n\n  @HostListener('blur')\n  _onBlur(): void {\n    this.hide(this.hideDelay);\n  }\n\n  @HostListener('keydown', ['$event'])\n  _onKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this._isTooltipVisible) {\n      this.hide(0);\n    }\n  }\n\n  /** Shows the tooltip */\n  show(delay: number = 0): void {\n    if (this.disabled || !this.message || this._isTooltipVisible) {\n      return;\n    }\n\n    this._clearTimeouts();\n\n    this._showTimeout = setTimeout(() => {\n      if (!this._overlayRef) {\n        this._createOverlay();\n      }\n\n      this._attachTooltip();\n    }, delay);\n  }\n\n  /** Hides the tooltip */\n  hide(delay: number = 0): void {\n    this._clearTimeouts();\n\n    this._hideTimeout = setTimeout(() => {\n      if (this._tooltipInstance) {\n        this._tooltipInstance.destroy();\n        this._tooltipInstance = null;\n        this._isTooltipVisible = false;\n      }\n    }, delay);\n  }\n\n  /** Toggle the tooltip visibility */\n  toggle(): void {\n    this._isTooltipVisible ? this.hide() : this.show();\n  }\n\n  private _createOverlay(): void {\n    const positions = this._getPositions();\n    \n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(positions)\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withScrollableContainers([]);\n\n    this._overlayRef = this._overlay.create({\n      positionStrategy,\n      scrollStrategy: this._overlay.scrollStrategies.reposition({ scrollThrottle: 20 }),\n      panelClass: ['ix-tooltip-panel', `ix-tooltip-panel-${this.position}`, this.tooltipClass].filter(Boolean),\n    });\n  }\n\n  private _attachTooltip(): void {\n    if (!this._overlayRef) {\n      return;\n    }\n\n    if (!this._tooltipInstance) {\n      const portal = new ComponentPortal(IxTooltipComponent, this._viewContainerRef);\n      this._tooltipInstance = this._overlayRef.attach(portal);\n      this._tooltipInstance.instance.message = this.message;\n      this._tooltipInstance.instance.id = this._ariaDescribedBy!;\n      this._isTooltipVisible = true;\n    }\n  }\n\n  private _getPositions(): ConnectedPosition[] {\n    switch (this.position) {\n      case 'above':\n        return [\n          { originX: 'center', originY: 'top', overlayX: 'center', overlayY: 'bottom', offsetY: -12 },\n          { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top', offsetY: 12 },\n        ];\n      case 'below':\n        return [\n          { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top', offsetY: 12 },\n          { originX: 'center', originY: 'top', overlayX: 'center', overlayY: 'bottom', offsetY: -12 },\n        ];\n      case 'left':\n      case 'before':\n        return [\n          { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: -12 },\n          { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 12 },\n        ];\n      case 'right':\n      case 'after':\n        return [\n          { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: 12 },\n          { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: -12 },\n        ];\n      default:\n        return [\n          { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top', offsetY: 12 },\n        ];\n    }\n  }\n\n  private _clearTimeouts(): void {\n    if (this._showTimeout) {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = null;\n    }\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n  }\n}","import { Injectable, inject, TemplateRef } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { Dialog, DialogConfig, DialogRef } from '@angular/cdk/dialog';\n\nexport type IxDialogOpenTarget<C> = ComponentType<C> | TemplateRef<unknown>;\n\nexport interface IxDialogDefaults {\n  panelClass?: string | string[];\n  maxWidth?: string;\n  maxHeight?: string;\n  width?: string;\n  height?: string;\n  disableClose?: boolean;\n  role?: 'dialog' | 'alertdialog';\n  fullscreen?: boolean;\n}\n\nconst DEFAULTS: IxDialogDefaults = {\n  panelClass: ['ix-dialog-panel'],\n  maxWidth: '90vw',\n  maxHeight: '90vh',\n  role: 'dialog',\n};\n\n@Injectable({ providedIn: 'root' })\nexport class IxDialog {\n  private dialog = inject(Dialog);\n\n  open<C, D = unknown, R = unknown>(\n    target: IxDialogOpenTarget<C>,\n    config: DialogConfig<D> & { fullscreen?: boolean } = {}\n  ): DialogRef<R, C> {\n    const baseClasses = [...(DEFAULTS.panelClass as string[]), ...(config.panelClass ?? [])];\n    \n    // Handle fullscreen mode\n    if (config.fullscreen) {\n      baseClasses.push('ix-dialog--fullscreen');\n    }\n    \n    const merged = {\n      ...DEFAULTS,\n      ...config,\n      panelClass: baseClasses,\n      // Override size constraints for fullscreen\n      ...(config.fullscreen && {\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        width: '100vw',\n        height: '100vh',\n      }),\n      // focus & scroll behavior (tweak as you prefer)\n      autoFocus: config.autoFocus ?? true,\n      restoreFocus: config.restoreFocus ?? true,\n    };\n    return this.dialog.open(target as any, merged as any) as any;\n  }\n\n  // Convenience helpers\n  confirm(opts: {\n    title: string;\n    message?: string;\n    confirmText?: string;\n    cancelText?: string;\n    destructive?: boolean;\n    data?: any;\n  }) {\n    // Import the confirm dialog component dynamically to avoid circular dependencies\n    return import('./ix-confirm-dialog.component').then(m => {\n      return this.open(m.IxConfirmDialogComponent, {\n        data: opts,\n        role: 'alertdialog',\n        disableClose: true,\n        panelClass: ['ix-dialog-panel', opts.destructive ? 'ix-dialog--destructive' : ''],\n      }).closed; // Observable<boolean>\n    });\n  }\n}","import { Component, Input, OnInit, Inject, Optional } from '@angular/core';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ix-dialog-shell',\n  template: `\n    <header class=\"ix-dialog__header\">\n      <h2 class=\"ix-dialog__title\">{{ title }}</h2>\n      <button type=\"button\" \n              class=\"ix-dialog__fullscreen\" \n              tabindex=\"-1\" \n              (click)=\"toggleFullscreen()\" \n              [attr.aria-label]=\"isFullscreen ? 'Exit fullscreen' : 'Enter fullscreen'\"\n              *ngIf=\"showFullscreenButton\">\n        <span class=\"ix-dialog__fullscreen-icon\">{{ isFullscreen ? '⤓' : '⤢' }}</span>\n      </button>\n      <button type=\"button\" class=\"ix-dialog__close\" tabindex=\"-1\" (click)=\"close()\" aria-label=\"Close dialog\">✕</button>\n    </header>\n\n    <section class=\"ix-dialog__content\" cdkDialogContent>\n      <ng-content></ng-content>\n    </section>\n\n    <footer class=\"ix-dialog__actions\" cdkDialogActions>\n      <ng-content select=\"[ixDialogAction]\"></ng-content>\n    </footer>\n  `,\n  standalone: true,\n  imports: [CommonModule],\n  host: {\n    'class': 'ix-dialog-shell'\n  }\n})\nexport class IxDialogShellComponent implements OnInit {\n  @Input() title = '';\n  @Input() showFullscreenButton = false;\n  \n  isFullscreen = false;\n  private originalStyles: { [key: string]: string } = {};\n  \n  constructor(\n    private ref: DialogRef,\n    @Inject(DOCUMENT) private document: Document,\n    @Optional() @Inject(DIALOG_DATA) private data?: any\n  ) {}\n  \n  ngOnInit() {\n    // Check if dialog was opened in fullscreen mode by looking for existing fullscreen class\n    setTimeout(() => {\n      const dialogPanel = this.document.querySelector('.ix-dialog-panel');\n      if (dialogPanel?.classList.contains('ix-dialog--fullscreen')) {\n        this.isFullscreen = true;\n      }\n    });\n  }\n  \n  close(result?: any) { \n    this.ref.close(result); \n  }\n  \n  toggleFullscreen() {\n    if (this.isFullscreen) {\n      this.exitFullscreen();\n    } else {\n      this.enterFullscreen();\n    }\n  }\n  \n  private enterFullscreen() {\n    const dialogPanel = this.document.querySelector('.ix-dialog-panel') as HTMLElement;\n    \n    if (dialogPanel) {\n      // Store original styles\n      this.originalStyles = {\n        panelMaxWidth: dialogPanel.style.maxWidth,\n        panelMaxHeight: dialogPanel.style.maxHeight,\n        panelWidth: dialogPanel.style.width,\n        panelHeight: dialogPanel.style.height,\n        panelBorderRadius: dialogPanel.style.borderRadius\n      };\n      \n      // Apply fullscreen styles\n      dialogPanel.style.maxWidth = '100vw';\n      dialogPanel.style.maxHeight = '100vh';\n      dialogPanel.style.width = '100vw';\n      dialogPanel.style.height = '100vh';\n      dialogPanel.style.borderRadius = '0';\n      \n      // Add fullscreen class\n      dialogPanel.classList.add('ix-dialog--fullscreen');\n      \n      this.isFullscreen = true;\n    }\n  }\n  \n  private exitFullscreen() {\n    const dialogPanel = this.document.querySelector('.ix-dialog-panel') as HTMLElement;\n    \n    if (dialogPanel) {\n      // Restore original styles\n      dialogPanel.style.maxWidth = this.originalStyles['panelMaxWidth'] || '90vw';\n      dialogPanel.style.maxHeight = this.originalStyles['panelMaxHeight'] || '90vh';\n      dialogPanel.style.width = this.originalStyles['panelWidth'] || '';\n      dialogPanel.style.height = this.originalStyles['panelHeight'] || '';\n      dialogPanel.style.borderRadius = this.originalStyles['panelBorderRadius'] || '8px';\n      \n      // Remove fullscreen class\n      dialogPanel.classList.remove('ix-dialog--fullscreen');\n      \n      this.isFullscreen = false;\n    }\n  }\n}","import { Component, Inject } from '@angular/core';\nimport { DialogRef, DIALOG_DATA } from '@angular/cdk/dialog';\nimport { IxDialogShellComponent } from './ix-dialog-shell.component';\nimport { IxButtonComponent } from '../ix-button/ix-button.component';\n\n@Component({\n  selector: 'ix-confirm-dialog',\n  template: `\n    <ix-dialog-shell [title]=\"data.title\">\n      <p style=\"padding: var(--content-padding);\">{{ data.message }}</p>\n      <div ixDialogAction>\n        <ix-button \n          type=\"button\"\n          variant=\"outline\"\n          [label]=\"data.cancelText || 'Cancel'\" \n          (click)=\"ref.close(false)\">\n        </ix-button>\n        <ix-button \n          type=\"button\" \n          [color]=\"data.destructive ? 'warn' : 'primary'\"\n          [label]=\"data.confirmText || 'OK'\" \n          (click)=\"ref.close(true)\">\n        </ix-button>\n      </div>\n    </ix-dialog-shell>\n  `,\n  standalone: true,\n  imports: [IxDialogShellComponent, IxButtonComponent],\n  host: {\n    'class': 'ix-dialog-shell',\n    '[class.ix-dialog--destructive]': 'data.destructive'\n  }\n})\nexport class IxConfirmDialogComponent {\n  constructor(\n    public ref: DialogRef<boolean>, \n    @Inject(DIALOG_DATA) public data: any\n  ) {}\n}","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ix-step',\n  template: `\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  standalone: true\n})\nexport class IxStepComponent {\n  @Input() \n  label: string = '';\n  \n  @Input()\n  icon?: string;\n  \n  @Input()\n  optional = false;\n  \n  @Input()\n  completed = false;\n  \n  @Input()\n  hasError = false;\n  \n  @Input()\n  data: any = null;\n  \n  @ViewChild('content', { static: true })\n  content!: TemplateRef<any>;\n}","import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, AfterContentInit, OnDestroy, ChangeDetectorRef, HostListener } from '@angular/core';\nimport { IxStepComponent } from './ix-step.component';\nimport { CommonModule } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'ix-stepper',\n  templateUrl: './ix-stepper.component.html',\n  styleUrls: ['./ix-stepper.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  animations: [\n    trigger('stepTransition', [\n      transition(':enter', [\n        style({ opacity: 0, transform: 'translateX(50px)' }),\n        animate('300ms ease-in-out', style({ opacity: 1, transform: 'translateX(0)' }))\n      ])\n    ])\n  ]\n})\nexport class IxStepperComponent implements AfterContentInit {\n  @Input() \n  orientation: 'horizontal' | 'vertical' | 'auto' = 'horizontal';\n  \n  @Input()\n  linear = false;\n  \n  @Input()\n  selectedIndex = 0;\n  \n  @Output()\n  selectionChange = new EventEmitter<any>();\n  \n  @Output()\n  completed = new EventEmitter<any>();\n  \n  @ContentChildren(IxStepComponent, { descendants: true }) \n  steps!: QueryList<IxStepComponent>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  @HostListener('window:resize', ['$event'])\n  onWindowResize(event: any) {\n    this.cdr.detectChanges();\n  }\n\n  ngAfterContentInit(): void {\n    // Check if all steps are completed when selection changes\n    this.selectionChange.subscribe(() => {\n      if (this.steps.toArray().every(step => step.completed)) {\n        this.completed.emit(this._getStepData());\n      }\n    });\n  }\n\n  private _getStepData(): any[] {\n    return this.steps.toArray().map(step => ({\n      label: step.label,\n      completed: step.completed,\n      data: step.data\n    }));\n  }\n\n  get isWideScreen(): boolean {\n    return window.innerWidth > 768;\n  }\n\n  selectStep(index: number): void {\n    if (!this.linear || this.canSelectStep(index)) {\n      const previousIndex = this.selectedIndex;\n      this.selectedIndex = index;\n      this.selectionChange.emit({\n        selectedIndex: index,\n        previouslySelectedIndex: previousIndex\n      });\n    }\n  }\n\n  canSelectStep(index: number): boolean {\n    if (!this.linear) return true;\n    \n    // In linear mode, can only select completed steps or the next step\n    for (let i = 0; i < index; i++) {\n      if (!this.steps.toArray()[i]?.completed) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  next(): void {\n    if (this.selectedIndex < this.steps.length - 1) {\n      this.selectStep(this.selectedIndex + 1);\n    }\n  }\n\n  previous(): void {\n    if (this.selectedIndex > 0) {\n      this.selectStep(this.selectedIndex - 1);\n    }\n  }\n\n  _trackByStepIndex(index: number): number {\n    return index;\n  }\n}","<div class=\"ix-stepper\" \n     [class.ix-stepper--horizontal]=\"orientation === 'horizontal' || (orientation === 'auto' && isWideScreen)\" \n     [class.ix-stepper--vertical]=\"orientation === 'vertical' || (orientation === 'auto' && !isWideScreen)\">\n  \n  <!-- Step Headers -->\n  <div class=\"ix-stepper__header\">\n    <ng-container *ngFor=\"let step of steps; let i = index; trackBy: _trackByStepIndex\">\n      <div class=\"ix-stepper__step-header\" \n           [class.ix-stepper__step-header--active]=\"selectedIndex === i\"\n           [class.ix-stepper__step-header--completed]=\"step.completed\"\n           [class.ix-stepper__step-header--error]=\"step.hasError\"\n           [class.ix-stepper__step-header--optional]=\"step.optional\"\n           (click)=\"selectStep(i)\">\n        \n        <!-- Step Number/Icon -->\n        <div class=\"ix-stepper__step-indicator\">\n          <ng-container *ngIf=\"step.completed && !step.hasError\">\n            <span class=\"ix-stepper__step-check\">✓</span>\n          </ng-container>\n          <ng-container *ngIf=\"step.hasError\">\n            <span class=\"ix-stepper__step-error\">!</span>\n          </ng-container>\n          <ng-container *ngIf=\"!step.completed && !step.hasError\">\n            <ng-container *ngIf=\"step.icon; else stepNumber\">\n              <span class=\"ix-stepper__step-icon\">{{ step.icon }}</span>\n            </ng-container>\n            <ng-template #stepNumber>\n              <span class=\"ix-stepper__step-number\">{{ i + 1 }}</span>\n            </ng-template>\n          </ng-container>\n        </div>\n        \n        <!-- Step Label -->\n        <div class=\"ix-stepper__step-label\">\n          <div class=\"ix-stepper__step-title\">{{ step.label }}</div>\n          <span class=\"ix-stepper__step-subtitle\" *ngIf=\"step.optional\">Optional</span>\n        </div>\n      </div>\n      \n      <!-- Connector Line (except for last step) -->\n      <div class=\"ix-stepper__connector\" *ngIf=\"i < steps.length - 1\"></div>\n    </ng-container>\n  </div>\n  \n  <!-- Step Content -->\n  <div class=\"ix-stepper__content\">\n    <ng-container *ngFor=\"let step of steps; let i = index\">\n      <div class=\"ix-stepper__step-content\" \n           *ngIf=\"selectedIndex === i\"\n           [@stepTransition]=\"selectedIndex\">\n        <ng-container *ngTemplateOutlet=\"step.content\"></ng-container>\n      </div>\n    </ng-container>\n  </div>\n</div>","/**\n * Auto-generated from SVG files - DO NOT EDIT MANUALLY\n * \n * To regenerate this file, run:\n *   npm run generate-icons\n * \n * Generated: 2025-10-14T18:02:49.377Z\n * Source: projects/truenas-ui/src/assets/icons\n */\n\n/* eslint-disable */\n\nexport const TRUENAS_ICONS: Record<string, string> = {\n  'tn-dataset': `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M6 8C5.72 8 5.48 7.9 5.29 7.71C5.1 7.52 5 7.28 5 7C5 6.72 5.1 6.48 5.29 6.29C5.48 6.1 5.72 6 6 6H18C18.28 6 18.52 6.1 18.71 6.29C18.9 6.48 19 6.72 19 7C19 7.28 18.9 7.52 18.71 7.71C18.52 7.9 18.28 8 18 8H6ZM8 5C7.72 5 7.48 4.9 7.29 4.71C7.1 4.52 7 4.28 7 4C7 3.72 7.1 3.48 7.29 3.29C7.48 3.1 7.72 3 8 3H16C16.28 3 16.52 3.1 16.71 3.29C16.9 3.48 17 3.72 17 4C17 4.28 16.9 4.52 16.71 4.71C16.52 4.9 16.28 5 16 5H8ZM3 9L5 21H19L21 9H3ZM14.71 15.1C14.52 15.29 14.28 15.39 14 15.39H10C9.72 15.39 9.48 15.29 9.29 15.1C9.1 14.91 9 14.67 9 14.39C9 14.11 9.1 13.87 9.29 13.68C9.48 13.49 9.72 13.39 10 13.39H14C14.28 13.39 14.52 13.49 14.71 13.68C14.9 13.87 15 14.11 15 14.39C15 14.67 14.9 14.91 14.71 15.1Z\" fill=\"currentColor\"/>\n</svg>`\n};\n\n/**\n * Register all TrueNAS custom icons with the icon registry\n * @param iconRegistry The IxIconRegistryService instance\n */\nexport function registerTruenasIcons(iconRegistry: any): void {\n  Object.entries(TRUENAS_ICONS).forEach(([name, svg]) => {\n    iconRegistry.registerIcon(name, svg);\n  });\n}\n","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit, AfterViewChecked, computed, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { A11yModule } from '@angular/cdk/a11y';\n\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\nimport { IxButtonComponent } from '../ix-button/ix-button.component';\nimport { IxTableComponent } from '../ix-table/ix-table.component';\nimport { IxTableColumnDirective, IxHeaderCellDefDirective, IxCellDefDirective } from '../ix-table-column/ix-table-column.directive';\nimport { FileSizePipe } from '../pipes/file-size/file-size.pipe';\nimport { TruncatePathPipe } from '../pipes/truncate-path/truncate-path.pipe';\nimport { FileSystemItem, FilePickerCallbacks, CreateFolderEvent, FilePickerError, PathSegment, FilePickerMode } from './ix-file-picker.interfaces';\nimport { IxIconRegistryService } from '../ix-icon/ix-icon-registry.service';\nimport { registerTruenasIcons } from '../ix-custom-icons/generated-icons';\nimport {\n  mdiFolder,\n  mdiFile,\n  mdiDatabase,\n  mdiHarddisk,\n  mdiFolderNetwork,\n  mdiFolderPlus,\n  mdiLoading,\n  mdiLock,\n  mdiFolderOpen,\n  mdiAlertCircle\n} from '@mdi/js';\n\n@Component({\n  selector: 'ix-file-picker-popup',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IxIconComponent,\n    IxButtonComponent,\n    IxTableComponent,\n    IxTableColumnDirective,\n    IxHeaderCellDefDirective,\n    IxCellDefDirective,\n    ScrollingModule,\n    A11yModule,\n    FileSizePipe,\n    TruncatePathPipe\n  ],\n  templateUrl: './ix-file-picker-popup.component.html',\n  styleUrl: './ix-file-picker-popup.component.scss',\n  host: {\n    'class': 'ix-file-picker-popup'\n  }\n})\nexport class IxFilePickerPopupComponent implements OnInit, AfterViewInit, AfterViewChecked {\n  mode = input<FilePickerMode>('any');\n  multiSelect = input<boolean>(false);\n  allowCreate = input<boolean>(true);\n  allowDatasetCreate = input<boolean>(false);\n  allowZvolCreate = input<boolean>(false);\n  currentPath = input<string>('/mnt');\n  fileItems = input<FileSystemItem[]>([]);\n  selectedItems = input<string[]>([]);\n  loading = input<boolean>(false);\n  creationLoading = input<boolean>(false);\n  fileExtensions = input<string[] | undefined>(undefined);\n\n  constructor(private iconRegistry: IxIconRegistryService) {\n    // Register TrueNAS custom icons\n    registerTruenasIcons(this.iconRegistry);\n\n    // Register MDI icons used by this component\n    this.registerMdiIcons();\n  }\n\n  /**\n   * Register MDI icon library with all icons used by the file picker component\n   * This makes the component self-contained with zero configuration required\n   */\n  private registerMdiIcons(): void {\n    const mdiIcons: Record<string, string> = {\n      'folder': mdiFolder,\n      'file': mdiFile,\n      'database': mdiDatabase,\n      'harddisk': mdiHarddisk,\n      'folder-network': mdiFolderNetwork,\n      'folder-plus': mdiFolderPlus,\n      'loading': mdiLoading,\n      'lock': mdiLock,\n      'folder-open': mdiFolderOpen,\n      'alert-circle': mdiAlertCircle\n    };\n\n    // Register MDI library with resolver for file picker icons\n    this.iconRegistry.registerLibrary({\n      name: 'mdi',\n      resolver: (iconName: string) => {\n        const pathData = mdiIcons[iconName];\n        if (!pathData) {\n          return null;\n        }\n        return `<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"${pathData}\"/></svg>`;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngAfterViewChecked(): void {\n    // Auto-focus and select text in input when it appears\n    const input = document.querySelector('[data-autofocus=\"true\"]') as HTMLInputElement;\n    if (input && input !== document.activeElement) {\n      setTimeout(() => {\n        input.focus();\n        input.select();\n      }, 0);\n    }\n  }\n\n  @Output() itemClick = new EventEmitter<FileSystemItem>();\n  @Output() itemDoubleClick = new EventEmitter<FileSystemItem>();\n  @Output() pathNavigate = new EventEmitter<string>();\n  @Output() createFolder = new EventEmitter<CreateFolderEvent>();\n  @Output() clearSelection = new EventEmitter<void>();\n  @Output() close = new EventEmitter<void>();\n  @Output() submit = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() submitFolderName = new EventEmitter<{ name: string; tempId: string }>();\n  @Output() cancelFolderCreation = new EventEmitter<string>();\n\n  // Table configuration\n  displayedColumns = ['select', 'name', 'size', 'modified'];\n\n  // Computed values\n  filteredFileItems = computed(() => {\n    const items = this.fileItems();\n    const extensions = this.fileExtensions();\n    const mode = this.mode();\n\n    return items.map(item => {\n      let shouldDisable = false;\n\n      // Check if item matches mode\n      if (mode !== 'any') {\n        const matchesMode =\n          (mode === 'file' && item.type === 'file') ||\n          (mode === 'folder' && item.type === 'folder') ||\n          (mode === 'dataset' && item.type === 'dataset') ||\n          (mode === 'zvol' && item.type === 'zvol');\n\n        shouldDisable = !matchesMode;\n      }\n\n      // Check file extension filter (only applies to files)\n      if (extensions && extensions.length > 0 && item.type === 'file') {\n        const matchesExtension = extensions.some(ext =>\n          item.name.toLowerCase().endsWith(ext.toLowerCase())\n        );\n        shouldDisable = shouldDisable || !matchesExtension;\n      }\n\n      // Don't override existing disabled state from backend\n      return { ...item, disabled: item.disabled || shouldDisable };\n    });\n  });\n\n  onItemClick(item: FileSystemItem): void {\n    if (item.isCreating) return; // Don't allow selection during creation\n    this.itemClick.emit(item);\n  }\n\n  onItemDoubleClick(item: FileSystemItem): void {\n    if (item.isCreating) return; // Don't allow navigation during creation\n    this.itemDoubleClick.emit(item);\n  }\n\n  navigateToPath(path: string): void {\n    // Check if any item is in creation mode\n    const hasCreatingItem = this.fileItems().some(item => item.isCreating);\n    if (hasCreatingItem) {\n      console.warn('Cannot navigate while creating a folder');\n      return;\n    }\n    this.pathNavigate.emit(path);\n  }\n\n  onCreateFolder(): void {\n    console.log('Popup onCreateFolder called');\n    this.createFolder.emit({\n      parentPath: this.currentPath(),\n      folderName: 'New Folder'\n    });\n  }\n\n  onClearSelection(): void {\n    this.clearSelection.emit();\n  }\n\n  onSubmit(): void {\n    this.submit.emit();\n  }\n\n  onCancel(): void {\n    this.cancel.emit();\n  }\n\n  onFolderNameSubmit(event: Event, item: FileSystemItem): void {\n    const input = event.target as HTMLInputElement;\n    const name = input.value.trim();\n\n    if (item.tempId) {\n      // Even if empty, let parent component handle validation\n      this.submitFolderName.emit({ name, tempId: item.tempId });\n    }\n  }\n\n  onFolderNameCancel(item: FileSystemItem): void {\n    if (item.tempId) {\n      this.cancelFolderCreation.emit(item.tempId);\n    }\n  }\n\n  onFolderNameInputBlur(event: Event, item: FileSystemItem): void {\n    // Auto-submit on blur (don't close picker, parent handles submission)\n    const input = event.target as HTMLInputElement;\n    if (item.tempId) {\n      this.submitFolderName.emit({\n        name: input.value.trim(),\n        tempId: item.tempId\n      });\n    }\n  }\n\n  onFolderNameKeyDown(event: KeyboardEvent, item: FileSystemItem): void {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.onFolderNameSubmit(event, item);\n    } else if (event.key === 'Escape') {\n      event.preventDefault();\n      this.onFolderNameCancel(item);\n    }\n  }\n\n  isCreateDisabled(): boolean {\n    return this.fileItems().some(item => item.isCreating) || this.creationLoading();\n  }\n\n  // Utility methods\n  isNavigatable(item: FileSystemItem): boolean {\n    return ['folder', 'dataset', 'mountpoint'].includes(item.type);\n  }\n\n  getItemIcon(item: FileSystemItem): string {\n    if (item.icon) return item.icon;\n\n    switch (item.type) {\n      case 'folder': return 'folder';\n      case 'dataset': return 'tn-dataset';\n      case 'zvol': return 'database';\n      case 'mountpoint': return 'folder-network';\n      case 'file': return this.getFileIcon(item.name);\n      default: return 'file';\n    }\n  }\n\n  getFileIcon(filename: string): string {\n    const ext = filename.split('.').pop()?.toLowerCase();\n    switch (ext) {\n      case 'txt': case 'log': case 'md': case 'readme': return 'file';\n      case 'pdf': return 'file';\n      case 'jpg': case 'jpeg': case 'png': case 'gif': case 'svg': case 'webp': return 'file';\n      case 'mp4': case 'avi': case 'mov': case 'mkv': case 'webm': return 'file';\n      case 'mp3': case 'wav': case 'flac': case 'ogg': case 'aac': return 'file';\n      case 'zip': case 'tar': case 'gz': case 'rar': case '7z': return 'file';\n      case 'js': case 'ts': case 'html': case 'css': case 'py': case 'java': case 'cpp': case 'c': return 'file';\n      case 'json': case 'xml': case 'yaml': case 'yml': case 'toml': return 'file';\n      case 'iso': case 'img': case 'dmg': return 'harddisk';\n      default: return 'file';\n    }\n  }\n\n  /**\n   * Get the library type for the icon\n   * @param item FileSystemItem\n   * @returns 'custom' for TrueNAS custom icons, 'mdi' for Material Design Icons\n   */\n  getItemIconLibrary(item: FileSystemItem): 'mdi' | 'custom' {\n    // Use custom library for dataset icon\n    if (item.type === 'dataset') {\n      return 'custom';\n    }\n    // Use mdi for all other icons\n    return 'mdi';\n  }\n\n  getZfsBadge(item: FileSystemItem): string {\n    switch (item.type) {\n      case 'dataset': return 'DS';\n      case 'zvol': return 'ZV';\n      case 'mountpoint': return 'MP';\n      default: return '';\n    }\n  }\n\n  isZfsObject(item: FileSystemItem): boolean {\n    return ['dataset', 'zvol', 'mountpoint'].includes(item.type);\n  }\n\n  isSelected(item: FileSystemItem): boolean {\n    return this.selectedItems().includes(item.path);\n  }\n\n  getRowClass = (row: FileSystemItem): string | string[] => {\n    const classes: string[] = [];\n\n    if (this.isSelected(row) && !row.disabled) {\n      classes.push('selected');\n    }\n\n    if (row.disabled) {\n      classes.push('disabled');\n    }\n\n    return classes;\n  }\n\n  getFileInfo(item: FileSystemItem): string {\n    const parts: string[] = [];\n    \n    if (item.size !== undefined) {\n      parts.push(this.formatFileSize(item.size));\n    }\n    \n    if (item.modified) {\n      parts.push(item.modified.toLocaleDateString());\n    }\n    \n    return parts.join(' • ');\n  }\n\n  formatFileSize(bytes: number): string {\n    if (bytes === 0) return '0 B';\n    \n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  }\n\n  getTypeDisplayName(type: string): string {\n    switch (type) {\n      case 'file': return 'File';\n      case 'folder': return 'Folder';\n      case 'dataset': return 'Dataset';\n      case 'zvol': return 'Zvol';\n      case 'mountpoint': return 'Mount Point';\n      default: return type;\n    }\n  }\n\n  formatDate(date: Date): string {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const itemDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    \n    const timePart = date.toLocaleTimeString([], { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    });\n    \n    // Check if it's today\n    if (itemDate.getTime() === today.getTime()) {\n      return `Today ${timePart}`;\n    }\n    \n    // Check if it's yesterday\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (itemDate.getTime() === yesterday.getTime()) {\n      return `Yesterday ${timePart}`;\n    }\n    \n    // Check if it's this year\n    if (date.getFullYear() === now.getFullYear()) {\n      return `${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')} ${timePart}`;\n    }\n    \n    // Different year - include year\n    return `${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}/${date.getFullYear()} ${timePart}`;\n  }\n\n}","<!-- Header with breadcrumb navigation -->\n<div class=\"ix-file-picker-header\">\n  <nav class=\"ix-file-picker-breadcrumb\" aria-label=\"File path\">\n    <button\n      *ngFor=\"let segment of currentPath() | ixTruncatePath; let last = last\"\n      class=\"breadcrumb-segment\"\n      [class.current]=\"last\"\n      [class.parent-nav]=\"segment.name === '..'\"\n      [disabled]=\"last\"\n      (click)=\"navigateToPath(segment.path)\">\n      {{ segment.name }}\n    </button>\n  </nav>\n\n  <div class=\"ix-file-picker-actions\">\n    <ix-button\n      *ngIf=\"allowCreate()\"\n      variant=\"outline\"\n      label=\"New Folder\"\n      [disabled]=\"isCreateDisabled()\"\n      (onClick)=\"onCreateFolder()\">\n    </ix-button>\n  </div>\n</div>\n\n<!-- Loading indicator -->\n<div *ngIf=\"loading()\" class=\"ix-file-picker-loading\">\n  <ix-icon name=\"loading\" library=\"mdi\"></ix-icon>\n  <span>Loading...</span>\n</div>\n\n<!-- File table -->\n<div class=\"ix-file-picker-content\" *ngIf=\"!loading()\">\n  <ix-table\n    [dataSource]=\"filteredFileItems()\"\n    [displayedColumns]=\"multiSelect() ? displayedColumns : displayedColumns.slice(1)\">\n\n    <!-- Selection column -->\n    <ng-container ixColumnDef=\"select\" *ngIf=\"multiSelect()\">\n      <ng-template ixHeaderCellDef>\n        <!-- Select all checkbox -->\n      </ng-template>\n      <ng-template ixCellDef let-item>\n        <input \n          type=\"checkbox\" \n          [checked]=\"isSelected(item)\"\n          [disabled]=\"!!item.disabled\"\n          (click)=\"$event.stopPropagation()\"\n          (change)=\"onItemClick(item)\">\n      </ng-template>\n    </ng-container>\n\n    <!-- Name column -->\n    <ng-container ixColumnDef=\"name\">\n      <ng-template ixHeaderCellDef>Name</ng-template>\n      <ng-template ixCellDef let-item>\n\n        <!-- NORMAL MODE: Display name -->\n        <div *ngIf=\"!item.isCreating\"\n             class=\"file-name-cell\"\n             [class.disabled]=\"!!item.disabled\"\n             [class.zfs-object]=\"isZfsObject(item)\"\n             (click)=\"onItemClick(item)\"\n             (dblclick)=\"onItemDoubleClick(item)\">\n          <ix-icon\n            [name]=\"getItemIcon(item)\"\n            [library]=\"getItemIconLibrary(item)\"\n            [class]=\"'file-icon-' + item.type\"\n            class=\"file-icon\">\n          </ix-icon>\n          <span class=\"file-name\">{{ item.name }}</span>\n\n          <!-- ZFS badge -->\n          <span\n            *ngIf=\"isZfsObject(item)\"\n            class=\"zfs-badge\"\n            [class]=\"'zfs-badge-' + item.type\">\n            {{ getZfsBadge(item) }}\n          </span>\n\n          <!-- Permission indicator -->\n          <ix-icon\n            *ngIf=\"item.permissions === 'none'\"\n            name=\"lock\"\n            library=\"mdi\"\n            class=\"permission-icon\">\n          </ix-icon>\n        </div>\n\n        <!-- EDIT MODE: Inline name input with error display -->\n        <div *ngIf=\"item.isCreating\" class=\"file-name-cell-wrapper\">\n          <div class=\"file-name-cell editing\" [class.has-error]=\"!!item.creationError\">\n            <ix-icon\n              name=\"folder\"\n              library=\"mdi\"\n              class=\"file-icon file-icon-folder\">\n            </ix-icon>\n            <input\n              #folderNameInput\n              type=\"text\"\n              role=\"textbox\"\n              aria-label=\"Folder name\"\n              class=\"folder-name-input\"\n              [class.error]=\"!!item.creationError\"\n              [value]=\"item.name\"\n              [disabled]=\"creationLoading()\"\n              (keydown)=\"onFolderNameKeyDown($event, item)\"\n              (blur)=\"onFolderNameInputBlur($event, item)\"\n              [attr.data-autofocus]=\"true\"\n              spellcheck=\"false\"\n              autocomplete=\"off\">\n\n            <!-- Loading indicator during submission -->\n            <ix-icon\n              *ngIf=\"creationLoading()\"\n              name=\"loading\"\n              library=\"mdi\"\n              class=\"creation-loading-icon\">\n            </ix-icon>\n          </div>\n\n          <!-- Inline error message -->\n          <div *ngIf=\"item.creationError\" class=\"folder-creation-error\">\n            <ix-icon name=\"alert-circle\" library=\"mdi\" class=\"error-icon\"></ix-icon>\n            <span class=\"error-text\">{{ item.creationError }}</span>\n          </div>\n        </div>\n\n      </ng-template>\n    </ng-container>\n\n    <!-- Size column -->\n    <ng-container ixColumnDef=\"size\">\n      <ng-template ixHeaderCellDef>Size</ng-template>\n      <ng-template ixCellDef let-item>\n        <span *ngIf=\"item.size !== undefined\">{{ item.size | ixFileSize }}</span>\n        <span *ngIf=\"item.size === undefined && item.type === 'folder'\" class=\"folder-indicator\">--</span>\n      </ng-template>\n    </ng-container>\n\n    <!-- Modified column -->\n    <ng-container ixColumnDef=\"modified\">\n      <ng-template ixHeaderCellDef>Modified</ng-template>\n      <ng-template ixCellDef let-item>\n        <span *ngIf=\"item.modified\">{{ formatDate(item.modified) }}</span>\n      </ng-template>\n    </ng-container>\n\n\n  </ix-table>\n  \n  <!-- Empty state -->\n  <div *ngIf=\"filteredFileItems().length === 0\" class=\"empty-state\">\n    <ix-icon name=\"folder-open\" library=\"mdi\"></ix-icon>\n    <p>No items found</p>\n  </div>\n</div>\n\n<!-- Footer -->\n<div class=\"ix-file-picker-footer\" *ngIf=\"!loading()\">\n  <span class=\"selection-count\" *ngIf=\"selectedItems().length > 0\">\n    {{ selectedItems().length }} item{{ selectedItems().length !== 1 ? 's' : '' }} selected\n  </span>\n  <span class=\"selection-count\" *ngIf=\"selectedItems().length === 0\">\n    No items selected\n  </span>\n  <div class=\"footer-actions\">\n    <ix-button\n      label=\"Select\"\n      [disabled]=\"selectedItems().length === 0\"\n      (onClick)=\"onSubmit()\">\n    </ix-button>\n  </div>\n</div>","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, TemplateRef, ViewContainerRef, forwardRef, OnInit, OnDestroy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OverlayModule, Overlay, OverlayRef, ConnectedPosition } from '@angular/cdk/overlay';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { IxInputDirective } from '../ix-input/ix-input.directive';\nimport { IxIconComponent } from '../ix-icon/ix-icon.component';\nimport { IxFilePickerPopupComponent } from './ix-file-picker-popup.component';\nimport { FileSystemItem, FilePickerCallbacks, CreateFolderEvent, FilePickerError, PathSegment, FilePickerMode } from './ix-file-picker.interfaces';\nimport { StripMntPrefixPipe } from '../pipes/strip-mnt-prefix/strip-mnt-prefix.pipe';\n\n@Component({\n  selector: 'ix-file-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IxInputDirective,\n    IxIconComponent,\n    IxFilePickerPopupComponent,\n    OverlayModule,\n    PortalModule,\n    A11yModule,\n    StripMntPrefixPipe\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => IxFilePickerComponent),\n      multi: true\n    }\n  ],\n  templateUrl: './ix-file-picker.component.html',\n  styleUrl: './ix-file-picker.component.scss',\n  host: {\n    'class': 'ix-file-picker',\n    '[class.error]': 'hasError()'\n  }\n})\nexport class IxFilePickerComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @Input() mode: FilePickerMode = 'any';\n  @Input() multiSelect = false;\n  @Input() allowCreate = true;\n  @Input() allowDatasetCreate = false;\n  @Input() allowZvolCreate = false;\n  @Input() allowManualInput = true;\n  @Input() placeholder = 'Select file or folder';\n  @Input() disabled = false;\n  @Input() startPath = '/mnt';\n  @Input() rootPath?: string;\n  @Input() fileExtensions?: string[];\n  @Input() callbacks?: FilePickerCallbacks;\n\n  @Output() selectionChange = new EventEmitter<string | string[]>();\n  @Output() pathChange = new EventEmitter<string>();\n  @Output() createFolder = new EventEmitter<CreateFolderEvent>();\n  @Output() error = new EventEmitter<FilePickerError>();\n\n  @ViewChild('wrapper') wrapperEl!: ElementRef<HTMLDivElement>;\n  @ViewChild('filePickerTemplate', { static: true }) filePickerTemplate!: TemplateRef<any>;\n\n  private destroy$ = new Subject<void>();\n  private overlayRef?: OverlayRef;\n  private portal?: TemplatePortal;\n\n  // Component state\n  isOpen = signal<boolean>(false);\n  selectedPath = signal<string>('');\n  currentPath = signal<string>('');\n  fileItems = signal<FileSystemItem[]>([]);\n  selectedItems = signal<string[]>([]);\n  loading = signal<boolean>(false);\n  hasError = signal<boolean>(false);\n  creatingItemTempId = signal<string | null>(null);\n  creationLoading = signal<boolean>(false);\n\n  // ControlValueAccessor implementation\n  private onChange = (value: string | string[]) => {};\n  private onTouched = () => {};\n\n  constructor(\n    private overlay: Overlay,\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit(): void {\n    this.currentPath.set(this.startPath);\n    this.selectedPath.set(this.multiSelect ? '' : '');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.close();\n  }\n\n  // ControlValueAccessor implementation\n  writeValue(value: string | string[]): void {\n    if (this.multiSelect) {\n      this.selectedItems.set(Array.isArray(value) ? value : value ? [value] : []);\n      // For multi-select, show full paths separated by commas\n      this.selectedPath.set(this.selectedItems().join(', '));\n    } else {\n      // Store the full path internally\n      this.selectedPath.set(typeof value === 'string' ? value : '');\n      this.selectedItems.set(value ? [typeof value === 'string' ? value : value[0]] : []);\n    }\n  }\n\n  registerOnChange(fn: (value: string | string[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Event handlers\n  onPathInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const inputValue = target.value;\n\n    if (this.allowManualInput) {\n      // Convert display path to full path with /mnt prefix\n      const fullPath = this.toFullPath(inputValue);\n\n      if (this.callbacks?.validatePath) {\n        this.callbacks.validatePath(fullPath).then(isValid => {\n          if (isValid) {\n            this.updateSelection(fullPath);\n          } else {\n            this.emitError('validation', `Invalid path: ${inputValue}`, fullPath);\n          }\n        }).catch(err => {\n          this.emitError('validation', err.message || 'Path validation failed', fullPath);\n        });\n      } else {\n        this.updateSelection(fullPath);\n      }\n    }\n\n    this.onTouched();\n  }\n\n  openFilePicker(): void {\n    if (this.isOpen() || this.disabled) return;\n\n    this.createOverlay();\n    this.isOpen.set(true);\n    this.loadDirectory(this.currentPath());\n  }\n\n  close(): void {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n      this.portal = undefined;\n    }\n    this.isOpen.set(false);\n  }\n\n  // File browser methods\n  onItemClick(item: FileSystemItem): void {\n    if (item.disabled || item.isCreating || this.creatingItemTempId()) return;\n\n    if (this.multiSelect) {\n      const selected = this.selectedItems();\n      const index = selected.indexOf(item.path);\n\n      if (index >= 0) {\n        selected.splice(index, 1);\n      } else {\n        selected.push(item.path);\n      }\n\n      this.selectedItems.set([...selected]);\n    } else {\n      // Single select - just update selection state, don't apply yet\n      this.selectedItems.set([item.path]);\n    }\n  }\n\n  onItemDoubleClick(item: FileSystemItem): void {\n    if (item.isCreating || this.creatingItemTempId()) return;\n\n    // Define navigatable types\n    const isNavigatable = ['folder', 'dataset', 'mountpoint'].includes(item.type);\n\n    // Allow navigation even if disabled, as long as it's a navigatable type\n    if (isNavigatable) {\n      this.navigateToPath(item.path);\n    } else if (!item.disabled) {\n      // Double-click on selectable item submits immediately\n      this.selectedItems.set([item.path]);\n      this.onSubmit();\n    }\n  }\n\n  onSubmit(): void {\n    // Apply the selection and close the popup\n    const selected = this.selectedItems();\n\n    if (selected.length === 0) return;\n\n    // Clear any existing error state\n    this.hasError.set(false);\n\n    if (this.multiSelect) {\n      this.selectedPath.set(selected.join(', '));\n      this.onChange(selected);\n      this.selectionChange.emit(selected);\n    } else {\n      const path = selected[0];\n      this.selectedPath.set(path);\n      this.onChange(path);\n      this.selectionChange.emit(path);\n    }\n\n    this.close();\n  }\n\n  onCancel(): void {\n    // Close without applying selection\n    this.close();\n  }\n\n  navigateToPath(path: string): void {\n    // Prevent navigation if currently creating a folder\n    if (this.creatingItemTempId()) {\n      console.warn('Cannot navigate while creating a folder');\n      return;\n    }\n    this.loadDirectory(path);\n  }\n\n  onCreateFolder(): void {\n    // Prevent multiple simultaneous creations\n    if (this.creatingItemTempId()) {\n      console.warn('Already creating a folder');\n      return;\n    }\n\n    // Generate temporary ID\n    const tempId = `temp-${Date.now()}`;\n\n    // Create pending item\n    const pendingFolder: FileSystemItem = {\n      path: `${this.currentPath()}/__pending__/${tempId}`,\n      name: 'New Folder',\n      type: 'folder',\n      isCreating: true,\n      tempId: tempId,\n      modified: new Date()\n    };\n\n    // Add to top of file list\n    const currentItems = this.fileItems();\n    this.fileItems.set([pendingFolder, ...currentItems]);\n    this.creatingItemTempId.set(tempId);\n\n    // Still emit event for parent components\n    this.createFolder.emit({\n      parentPath: this.currentPath(),\n      folderName: 'New Folder'\n    });\n  }\n\n  onClearSelection(): void {\n    this.selectedItems.set([]);\n    this.selectedPath.set('');\n    this.onChange(this.multiSelect ? [] : '');\n    this.selectionChange.emit(this.multiSelect ? [] : '');\n  }\n\n  async onSubmitFolderName(name: string, tempId: string): Promise<void> {\n    // Validate folder name\n    const validation = this.validateFolderName(name);\n    if (!validation.valid) {\n      // Update the item with error message\n      this.updateCreatingItemError(tempId, validation.error!);\n      return;\n    }\n\n    if (!this.callbacks?.createFolder) {\n      this.updateCreatingItemError(tempId, 'Create folder callback not provided');\n      return;\n    }\n\n    // Clear any previous errors\n    this.updateCreatingItemError(tempId, undefined);\n    this.creationLoading.set(true);\n\n    try {\n      // Call the callback with parent path and user-entered name\n      const createdPath = await this.callbacks.createFolder(\n        this.currentPath(),\n        name.trim()\n      );\n\n      // Remove pending item\n      this.removePendingItem(tempId);\n      this.creatingItemTempId.set(null);\n\n      // Reload directory to show the newly created folder\n      await this.loadDirectory(this.currentPath());\n\n    } catch (err: any) {\n      console.error('Failed to create folder:', err);\n\n      // Show error inline, keep input editable for retry\n      const errorMessage = err.message || 'Failed to create folder';\n      this.updateCreatingItemError(tempId, errorMessage);\n      this.emitError('creation', errorMessage, this.currentPath());\n\n    } finally {\n      this.creationLoading.set(false);\n    }\n  }\n\n  onCancelFolderCreation(tempId: string): void {\n    this.removePendingItem(tempId);\n    this.creatingItemTempId.set(null);\n    this.creationLoading.set(false);\n  }\n\n  private removePendingItem(tempId: string): void {\n    const items = this.fileItems().filter(item => item.tempId !== tempId);\n    this.fileItems.set(items);\n  }\n\n  private updateCreatingItemError(tempId: string, error: string | undefined): void {\n    const items = this.fileItems().map(item => {\n      if (item.tempId === tempId) {\n        return { ...item, creationError: error };\n      }\n      return item;\n    });\n    this.fileItems.set(items);\n  }\n\n  private validateFolderName(name: string): { valid: boolean; error?: string } {\n    const trimmed = name.trim();\n\n    if (!trimmed) {\n      return { valid: false, error: 'Folder name cannot be empty' };\n    }\n\n    if (trimmed.length > 255) {\n      return { valid: false, error: 'Folder name too long (max 255 characters)' };\n    }\n\n    // Check for invalid characters (common across file systems)\n    const invalidChars = /[<>:\"|?*\\x00-\\x1f]/;\n    if (invalidChars.test(trimmed)) {\n      return { valid: false, error: 'Invalid characters in folder name' };\n    }\n\n    // Disallow folder names that are just dots\n    if (/^\\.+$/.test(trimmed)) {\n      return { valid: false, error: 'Invalid folder name' };\n    }\n\n    // Check for duplicate names in current directory\n    const existingNames = this.fileItems()\n      .filter(item => !item.isCreating)\n      .map(item => item.name.toLowerCase());\n\n    if (existingNames.includes(trimmed.toLowerCase())) {\n      return { valid: false, error: 'A folder with this name already exists' };\n    }\n\n    return { valid: true };\n  }\n\n  private async loadDirectory(path: string): Promise<void> {\n    if (!this.callbacks?.getChildren) {\n      // Default mock data for development\n      this.fileItems.set(this.getMockFileItems(path));\n      this.currentPath.set(path);\n      this.pathChange.emit(path);\n      return;\n    }\n\n    this.loading.set(true);\n\n    try {\n      const items = await this.callbacks.getChildren(path);\n      this.fileItems.set(items);\n      this.currentPath.set(path);\n      this.pathChange.emit(path);\n    } catch (err: any) {\n      console.error('❌ Error loading directory:', err);\n      this.emitError('navigation', err.message || 'Failed to load directory', path);\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  private getMockFileItems(path: string): FileSystemItem[] {\n    // Mock data for development\n    return [\n      {\n        path: `${path}/Documents`,\n        name: 'Documents',\n        type: 'folder',\n        modified: new Date()\n      },\n      {\n        path: `${path}/Downloads`,\n        name: 'Downloads',\n        type: 'folder',\n        modified: new Date()\n      },\n      {\n        path: `${path}/dataset1`,\n        name: 'dataset1',\n        type: 'dataset',\n        modified: new Date()\n      },\n      {\n        path: `${path}/example.txt`,\n        name: 'example.txt',\n        type: 'file',\n        size: 1024,\n        modified: new Date()\n      }\n    ];\n  }\n\n  private updateSelection(path: string): void {\n    // Clear any existing error state since popup selections are valid\n    this.hasError.set(false);\n\n    if (this.multiSelect) {\n      const selected = [path];\n      this.selectedItems.set(selected);\n      this.selectedPath.set(selected.join(', '));\n      this.onChange(selected);\n    } else {\n      this.selectedPath.set(path);\n      this.selectedItems.set([path]);\n      this.onChange(path);\n    }\n\n    this.selectionChange.emit(this.multiSelect ? this.selectedItems() : path);\n  }\n\n  private updateSelectionFromItems(): void {\n    // Clear any existing error state since popup selections are valid\n    this.hasError.set(false);\n\n    const selected = this.selectedItems();\n    this.selectedPath.set(selected.join(', '));\n    this.onChange(this.multiSelect ? selected : selected[0] || '');\n    this.selectionChange.emit(this.multiSelect ? selected : selected[0] || '');\n  }\n\n  private toFullPath(displayPath: string): string {\n    if (!displayPath) return '/mnt';\n    if (displayPath === '/') return '/mnt';\n    if (displayPath.startsWith('/')) return '/mnt' + displayPath;\n    return '/mnt/' + displayPath;\n  }\n\n  private emitError(type: FilePickerError['type'], message: string, path?: string): void {\n    this.hasError.set(true);\n    this.error.emit({ type, message, path });\n    // Error persists until cleared by valid input or selection\n  }\n\n  private createOverlay(): void {\n    if (this.overlayRef) return;\n\n    const positions: ConnectedPosition[] = [\n      {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n      {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n        offsetY: 8,\n      },\n      {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetY: -8,\n      },\n    ];\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.wrapperEl)\n      .withPositions(positions)\n      .withFlexibleDimensions(false)\n      .withPush(false);\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      panelClass: 'ix-file-picker-overlay'\n    });\n\n    this.overlayRef.backdropClick().subscribe(() => {\n      this.close();\n    });\n\n    this.portal = new TemplatePortal(this.filePickerTemplate, this.viewContainerRef);\n    this.overlayRef.attach(this.portal);\n  }\n\n}\n","<div class=\"ix-file-picker-container\">\n  <div #wrapper ixInput class=\"ix-file-picker-wrapper\" style=\"padding-right: 40px;\">\n    <input\n      type=\"text\"\n      class=\"ix-file-picker-input\"\n      [class.error]=\"hasError()\"\n      [value]=\"selectedPath() | ixStripMntPrefix\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"!allowManualInput\"\n      [disabled]=\"disabled\"\n      (input)=\"onPathInput($event)\">\n    \n    <button \n      type=\"button\"\n      class=\"ix-file-picker-toggle\"\n      (click)=\"openFilePicker()\"\n      [disabled]=\"disabled\"\n      aria-label=\"Open file picker\">\n      <ix-icon name=\"folder\" library=\"mdi\"></ix-icon>\n    </button>\n  </div>\n  \n  <ng-template #filePickerTemplate>\n    <ix-file-picker-popup\n      class=\"ix-file-picker-popup\"\n      [mode]=\"mode\"\n      [multiSelect]=\"multiSelect\"\n      [allowCreate]=\"allowCreate\"\n      [allowDatasetCreate]=\"allowDatasetCreate\"\n      [allowZvolCreate]=\"allowZvolCreate\"\n      [currentPath]=\"currentPath()\"\n      [fileItems]=\"fileItems()\"\n      [selectedItems]=\"selectedItems()\"\n      [loading]=\"loading()\"\n      [creationLoading]=\"creationLoading()\"\n      [fileExtensions]=\"fileExtensions\"\n      (itemClick)=\"onItemClick($event)\"\n      (itemDoubleClick)=\"onItemDoubleClick($event)\"\n      (pathNavigate)=\"navigateToPath($event)\"\n      (createFolder)=\"onCreateFolder()\"\n      (submitFolderName)=\"onSubmitFolderName($event.name, $event.tempId)\"\n      (cancelFolderCreation)=\"onCancelFolderCreation($event)\"\n      (clearSelection)=\"onClearSelection()\"\n      (submit)=\"onSubmit()\"\n      (cancel)=\"onCancel()\"\n      (close)=\"close()\">\n    </ix-file-picker-popup>\n  </ng-template>\n</div>","import { Injectable } from '@angular/core';\nimport { PlatformType } from '../enums/modifier-keys.enum';\nimport { CommonShortcuts, WindowsShortcuts, LinuxShortcuts } from '../enums/common-shortcuts.enum';\n\nexport interface KeyCombination {\n  ctrlKey: boolean;\n  altKey: boolean;\n  shiftKey: boolean;\n  metaKey: boolean;\n  key: string;\n}\n\nexport interface ShortcutHandler {\n  id: string;\n  combination: KeyCombination;\n  callback: () => void;\n  context?: string;\n  enabled: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IxKeyboardShortcutService {\n  private shortcuts = new Map<string, ShortcutHandler>();\n  private globalEnabled = true;\n\n  /**\n   * Register a keyboard shortcut\n   */\n  registerShortcut(\n    id: string,\n    shortcut: string,\n    callback: () => void,\n    context?: string\n  ): void {\n    const combination = this.parseShortcut(shortcut);\n    \n    this.shortcuts.set(id, {\n      id,\n      combination,\n      callback,\n      context,\n      enabled: true\n    });\n  }\n\n  /**\n   * Unregister a keyboard shortcut\n   */\n  unregisterShortcut(id: string): void {\n    this.shortcuts.delete(id);\n  }\n\n  /**\n   * Unregister all shortcuts for a given context\n   */\n  unregisterContext(context: string): void {\n    for (const [id, handler] of this.shortcuts) {\n      if (handler.context === context) {\n        this.shortcuts.delete(id);\n      }\n    }\n  }\n\n  /**\n   * Enable/disable a specific shortcut\n   */\n  setShortcutEnabled(id: string, enabled: boolean): void {\n    const handler = this.shortcuts.get(id);\n    if (handler) {\n      handler.enabled = enabled;\n    }\n  }\n\n  /**\n   * Enable/disable all shortcuts globally\n   */\n  setGlobalEnabled(enabled: boolean): void {\n    this.globalEnabled = enabled;\n  }\n\n  /**\n   * Check if shortcuts are globally enabled\n   */\n  isGlobalEnabled(): boolean {\n    return this.globalEnabled;\n  }\n\n  /**\n   * Handle keyboard events\n   */\n  handleKeyboardEvent(event: KeyboardEvent): boolean {\n    if (!this.globalEnabled) {\n      return false;\n    }\n\n    const combination: KeyCombination = {\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      key: event.key\n    };\n\n    for (const handler of this.shortcuts.values()) {\n      if (handler.enabled && this.matchesCombination(combination, handler.combination)) {\n        event.preventDefault();\n        event.stopPropagation();\n        handler.callback();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Parse a shortcut string into a KeyCombination\n   */\n  parseShortcut(shortcut: string): KeyCombination {\n    const combination: KeyCombination = {\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      key: ''\n    };\n\n    // Handle Mac-style shortcuts\n    if (shortcut.includes('⌘')) {\n      combination.metaKey = true;\n      shortcut = shortcut.replace(/⌘/g, '');\n    }\n    \n    if (shortcut.includes('⌃')) {\n      combination.ctrlKey = true;\n      shortcut = shortcut.replace(/⌃/g, '');\n    }\n    \n    if (shortcut.includes('⌥')) {\n      combination.altKey = true;\n      shortcut = shortcut.replace(/⌥/g, '');\n    }\n    \n    if (shortcut.includes('⇧')) {\n      combination.shiftKey = true;\n      shortcut = shortcut.replace(/⇧/g, '');\n    }\n\n    // Handle Windows/Linux-style shortcuts\n    const parts = shortcut.split('+').map(part => part.trim());\n    \n    for (const part of parts) {\n      const lowerPart = part.toLowerCase();\n      \n      if (lowerPart === 'ctrl' || lowerPart === 'control') {\n        combination.ctrlKey = true;\n      } else if (lowerPart === 'alt') {\n        combination.altKey = true;\n      } else if (lowerPart === 'shift') {\n        combination.shiftKey = true;\n      } else if (lowerPart === 'meta' || lowerPart === 'cmd' || lowerPart === 'win') {\n        combination.metaKey = true;\n      } else if (part.length > 0) {\n        combination.key = part;\n      }\n    }\n\n    return combination;\n  }\n\n  /**\n   * Check if two key combinations match\n   */\n  private matchesCombination(actual: KeyCombination, expected: KeyCombination): boolean {\n    return actual.ctrlKey === expected.ctrlKey &&\n           actual.altKey === expected.altKey &&\n           actual.shiftKey === expected.shiftKey &&\n           actual.metaKey === expected.metaKey &&\n           actual.key.toLowerCase() === expected.key.toLowerCase();\n  }\n\n  /**\n   * Get the current platform\n   */\n  getCurrentPlatform(): PlatformType {\n    const userAgent = navigator.userAgent.toLowerCase();\n    \n    if (userAgent.includes('mac')) {\n      return 'mac';\n    } else if (userAgent.includes('win')) {\n      return 'windows';\n    } else if (userAgent.includes('linux')) {\n      return 'linux';\n    }\n    \n    return 'mac';\n  }\n\n  /**\n   * Format a shortcut for display on the current platform\n   */\n  formatShortcutForPlatform(shortcut: string, platform?: PlatformType): string {\n    const targetPlatform = platform || this.getCurrentPlatform();\n    \n    if (targetPlatform === 'windows') {\n      return this.convertToWindowsDisplay(shortcut);\n    } else if (targetPlatform === 'linux') {\n      return this.convertToLinuxDisplay(shortcut);\n    }\n    \n    return shortcut; // Return Mac format by default\n  }\n\n  /**\n   * Convert Mac-style shortcut to Windows display format\n   */\n  private convertToWindowsDisplay(macShortcut: string): string {\n    return macShortcut\n      .replace(/⌘/g, 'Ctrl')\n      .replace(/⌥/g, 'Alt')\n      .replace(/⇧/g, 'Shift')\n      .replace(/⌃/g, 'Ctrl')\n      .replace(/([a-zA-Z])([A-Z])/g, '$1+$2')\n      .replace(/([a-zA-Z])([a-z])/g, '$1+$2');\n  }\n\n  /**\n   * Convert Mac-style shortcut to Linux display format\n   */\n  private convertToLinuxDisplay(macShortcut: string): string {\n    return macShortcut\n      .replace(/⌘/g, 'Ctrl')\n      .replace(/⌥/g, 'Alt')\n      .replace(/⇧/g, 'Shift')\n      .replace(/⌃/g, 'Ctrl')\n      .replace(/([a-zA-Z])([A-Z])/g, '$1+$2')\n      .replace(/([a-zA-Z])([a-z])/g, '$1+$2');\n  }\n\n  /**\n   * Get platform-specific shortcut enum\n   */\n  getPlatformShortcuts(platform?: PlatformType): typeof CommonShortcuts | typeof WindowsShortcuts | typeof LinuxShortcuts {\n    const targetPlatform = platform || this.getCurrentPlatform();\n    \n    switch (targetPlatform) {\n      case 'windows':\n        return WindowsShortcuts;\n      case 'linux':\n        return LinuxShortcuts;\n      default:\n        return CommonShortcuts;\n    }\n  }\n\n  /**\n   * Get all registered shortcuts\n   */\n  getAllShortcuts(): ShortcutHandler[] {\n    return Array.from(this.shortcuts.values());\n  }\n\n  /**\n   * Get shortcuts for a specific context\n   */\n  getShortcutsForContext(context: string): ShortcutHandler[] {\n    return Array.from(this.shortcuts.values()).filter(handler => handler.context === context);\n  }\n\n  /**\n   * Clear all shortcuts\n   */\n  clearAllShortcuts(): void {\n    this.shortcuts.clear();\n  }\n}","/*\n * Public API Surface of truenas-ui\n */\n\nexport * from './lib/truenas-ui.service';\nexport * from './lib/truenas-ui.component';\nexport * from './lib/disk-icon/disk-icon.component';\nexport * from './lib/ix-button/ix-button.component';\nexport * from './lib/ix-icon-button/ix-icon-button.component';\nexport * from './lib/ix-input/ix-input.component';\nexport * from './lib/ix-input/ix-input.directive';\nexport * from './lib/ix-chip/ix-chip.component';\nexport * from './lib/ix-card';\nexport * from './lib/ix-expansion-panel/ix-expansion-panel.component';\nexport * from './lib/ix-checkbox/ix-checkbox.component';\nexport * from './lib/ix-radio/ix-radio.component';\nexport * from './lib/ix-slide-toggle/ix-slide-toggle.component';\nexport * from './lib/ix-tabs/ix-tabs.component';\nexport * from './lib/ix-tab/ix-tab.component';\nexport * from './lib/ix-tab-panel/ix-tab-panel.component';\nexport * from './lib/ix-menu';\nexport * from './lib/ix-keyboard-shortcut/ix-keyboard-shortcut.component';\nexport * from './lib/ix-form-field/ix-form-field.component';\nexport * from './lib/ix-select/ix-select.component';\nexport * from './lib/ix-icon/ix-icon.component';\nexport * from './lib/ix-icon/ix-icon-registry.service';\nexport * from './lib/ix-icon/ix-sprite-loader.service';\nexport * from './lib/ix-icon/icon-marker';\nexport * from './lib/ix-icon/integrations/lucide.integration';\nexport * from './lib/ix-custom-icons/truenas-icons.service';\nexport * from './lib/ix-list/ix-list.component';\nexport * from './lib/ix-list-item/ix-list-item.component';\nexport * from './lib/ix-list-subheader/ix-list-subheader.component';\nexport * from './lib/ix-list-directives/ix-list-directives';\nexport * from './lib/ix-divider/ix-divider.component';\nexport * from './lib/ix-selection-list/ix-selection-list.component';\nexport * from './lib/ix-list-option/ix-list-option.component';\nexport * from './lib/ix-table/ix-table.component';\nexport * from './lib/ix-table-column/ix-table-column.directive';\nexport { IxTreeComponent, FlatTreeControl, IxTreeFlatDataSource, IxTreeFlattener, IxFlatTreeNode } from './lib/ix-tree/ix-tree.component';\nexport { IxTreeNodeComponent } from './lib/ix-tree/ix-tree-node.component';\nexport { IxNestedTreeNodeComponent } from './lib/ix-tree/ix-nested-tree-node.component';\nexport { IxTreeNodeOutletDirective } from './lib/ix-tree/ix-tree-node-outlet.directive';\nexport * from './lib/enums/disk-type.enum';\nexport * from './lib/enums/input-type.enum';\nexport * from './lib/enums/modifier-keys.enum';\nexport * from './lib/enums/common-shortcuts.enum';\nexport * from './lib/utils/shortcut-builder';\nexport * from './lib/pipes/file-size/file-size.pipe';\nexport * from './lib/pipes/strip-mnt-prefix/strip-mnt-prefix.pipe';\nexport * from './lib/pipes/truncate-path/truncate-path.pipe';\nexport * from './lib/ix-spinner/ix-spinner.component';\nexport * from './lib/ix-spinner/ix-branded-spinner.component';\nexport * from './lib/ix-progress-bar/ix-progress-bar.component';\nexport * from './lib/ix-progress-bar/ix-particle-progress-bar.component';\nexport * from './lib/ix-calendar/ix-calendar.component';\nexport * from './lib/ix-calendar/ix-calendar-header.component';\nexport * from './lib/ix-calendar/ix-month-view.component';\nexport * from './lib/ix-calendar/ix-multi-year-view.component';\nexport * from './lib/ix-date-range-input/ix-date-input.component';\nexport * from './lib/ix-date-range-input/ix-date-range-input.component';\nexport * from './lib/ix-date-range-input/ix-time-input.component';\nexport * from './lib/ix-slider/ix-slider.component';\nexport * from './lib/ix-slider/ix-slider-thumb.directive';\nexport * from './lib/ix-slider/ix-slider-with-label.directive';\nexport * from './lib/ix-button-toggle';\nexport * from './lib/ix-tooltip/ix-tooltip.directive';\nexport * from './lib/ix-tooltip/ix-tooltip.component';\nexport * from './lib/ix-dialog';\nexport * from './lib/ix-stepper';\nexport * from './lib/ix-file-picker';\nexport * from './lib/services/ix-keyboard-shortcut.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i2.IxSpriteLoaderService","i1.IxIconRegistryService","i2.IxIconRegistryService","i1.IxSliderComponent"],"mappings":"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"}